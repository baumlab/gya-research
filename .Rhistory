canada<-part3.grants.long[part3.grants.long$Country_work=="Canada" | (!(part3.grants.long$Country_work=="Canada") & part3.grants.long$Country_work=="" & part3.grants.long$Country=="Canada"),]
canada$type.grant<-as.character(canada$type.grant)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
grants.ca<-data.frame(with(canada, table(type.grant,time,number)))
grants.ca$type.grant<-as.factor(grants.ca$type.grant)
#change order of levels
grants.ca$number<-factor(grants.ca$number, levels(grants.ca$number)[c(1,2,6,7,3,4,5)])
grants.ca$type.grant<-factor(grants.ca$type.grant, levels(grants.ca$type.grant)[c(2,3,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "time",values = myColors)
ggplot(grants.ca, aes(number, Freq, fill=time)) +
geom_bar(stat="identity", position = "dodge")+
facet_wrap(~type.grant, nrow=3) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="No. of grant applications", y="No. of responses")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=12, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.8, 0.2)) + colScale
# Chunk 12
#canada<-subset(part3.success.long, Country=="Canada")
canada<-part3.success.long[part3.success.long$Country_work=="Canada" | (!(part3.success.long$Country_work=="Canada") & part3.success.long$Country_work=="" & part3.success.long$Country=="Canada"),]
dim(canada)
canada$type<-as.character(canada$type)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type), "2011-2015", "2006-2010")
canada$type[canada$type=="successful_grants_11_15_fundamental"]<-"Fundamental"
canada$type[canada$type=="successful_grants_6_10_fundamental"]<-"Fundamental"
canada$type[canada$type=="successful_grants_11_15_use"]<-"Use-Inspired"
canada$type[canada$type=="successful_grants_6_10_use"]<-"Use-Inspired"
canada$type[canada$type=="successful_grants_11_15_applied"]<-"Applied"
canada$type[canada$type=="successful_grants_6_10_applied"]<-"Applied"
dim(canada)
success.ca<-data.frame(with(canada, table(type, percent,time)))
dim(success.ca)
#change order of types
success.ca$type<-as.factor(success.ca$type)
success.ca$type<-factor(success.ca$type, levels(success.ca$type)[c(2,3,1)])
success.ca
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "time",values = myColors)
ggplot(success.ca, aes(percent, Freq, fill=time)) +
geom_bar(stat="identity", position = "dodge")+
facet_wrap(~type, nrow=3) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="% successful grants", y="No. of responses")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=14, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.8, 0.2)) + colScale
# Chunk 13
canada<-part3.prac.long[part3.prac.long$Country_work=="Canada" | (!(part3.prac.long$Country_work=="Canada") & part3.prac.long$Country_work=="" & part3.prac.long$Country=="Canada"),]
canada$year<-as.character(canada$year)
canada$year[canada$year=="practical_applications_important_11_15"]<-"2011-2015"
canada$year[canada$year=="practical_applications_important_6_10"]<-"2006-2010"
prac.ca<-data.frame(table(canada$year, canada$level))
prac.ca$Var2
#change order of levels
prac.ca$Var2<-factor(prac.ca$Var2, levels(prac.ca$Var2)[c(2,6,4,5,3,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
ggplot(prac.ca, aes(Var2, Freq, fill=Var1)) +
geom_bar(stat="identity", position = "dodge")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position=c(0.8, 0.8),
axis.text.x = element_text(angle=0, vjust=0.5)) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
scale_x_discrete(labels=c("Mandatory", "Very\n important", "Quite\n important", 'Somewhat\n important', 'Not at all\n important', "Can't\n comment"))+
labs(x="", y="No. of responses")+ colScale
# Chunk 14
canada<-part3.part.long[part3.part.long$Country_work=="Canada" | (!(part3.part.long$Country_work=="Canada") & part3.part.long$Country_work=="" & part3.part.long$Country=="Canada"),]
canada$year<-as.character(canada$year)
canada$year[canada$year=="include_nonacademia_partners_success_11_15"]<-"2011-2015"
canada$year[canada$year=="include_nonacademia_partners_success_6_10"]<-"2006-2010"
part.ca<-data.frame(table(canada$year, canada$level))
summary(part.ca)
#change order of levels
part.ca$Var2<-factor(part.ca$Var2, levels(part.ca$Var2)[c(2,5,6,4,3,1)])
## add colour scale
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
ggplot(part.ca, aes(Var2, Freq, fill=Var1))+
geom_bar(stat="identity", position = "dodge")+
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="", y="No. of responses")+
scale_x_discrete(labels=c("Mandatory", "Quite\n important", 'Somewhat\n important',"Not very\n important", 'Not at all\n important', "Can't\n comment"))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position=c(0.8, 0.8)) + colScale
# Chunk 15
canada<-p3_master.long[p3_master.long$Country_work=="Canada" | (!(p3_master.long$Country_work=="Canada") & p3_master.long$Country_work=="" & p3_master.long$Country=="Canada"),]
unique(canada$year)
## incorrect- no reference for revalue
canada$year2<- revalue(c("11_15"="2011-2015", "6_10"="2006-2010"))
## correct - revalue the year values
canada$year<- revalue(canada$year, c("11_15"="2011-2015", "6_10"="2006-2010"))
str(canada$year)
#change order of levels
canada$year<-factor(canada$year, levels(canada$year)[c(2,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "year",values = myColors)
ggplot(canada, aes(percent, fill=year))+ geom_histogram(position='dodge', binwidth=25)  +
facet_wrap(~type, nrow=5) + colScale +
guides(fill=guide_legend(title=NULL)) +
theme(legend.position=c(0.9, 0.08),
strip.text.y = element_text(size=14, face="bold", color="black"),
legend.key.size = unit(0.3, "cm"),
strip.background = element_rect(colour="white", fill="white")) +
labs(x="% research funding", y = "No. of respondents")
# Chunk 16
canada<-part3.change[part3.change$Country_work=="Canada" | (!(part3.change$Country_work=="Canada") & part3.change$Country_work=="" & part3.change$Country=="Canada"),]
head(canada)
##switch to long format
change.long.ca<-gather(canada, type, level, -Location, -gender, -Country, -Country_work, -what_participant_group, -field_research)
head(change.long.ca)
success.change<-with(change.long.ca, data.frame(table(type, level)))
success.change
#remove no response
success.change<-success.change[!success.change$level=="",]
success.change<-droplevels(success.change)
# change type to factor with levels
#gender.change$type<-as.factor(gender.change$type)
#gender.change$level<-str_replace_all(gender.change$level, "Will", "")
#gender.change$level<-as.factor(gender.change$level)
# add colour palette
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 6, 3)])
colScale <- scale_fill_manual(name = "type",values = myColors, labels=c("Fundamental", "Use-inspired", "Applied"))
summary(success.change$level)
#change order of levels
success.change$level<-factor(success.change$level, levels(success.change$level)[c(5,4,6,2,3,1)])
success.change$type<-factor(success.change$type, levels(success.change$type)[c(2,3,1)])
success.change$type<-revalue(success.change$type, c("success_change_10yrs_fundamental"="Fundamental",
'success_change_10yrs_use'='Use-inspired', 'success_change_10yrs_applied' = 'Applied'))
ggplot(data=success.change, aes(x=level, Freq, fill=type))+ facet_wrap(~type, nrow=3)+
geom_bar(stat="identity", position="dodge")+
guides(fill=guide_legend(title=NULL)) +
theme(axis.text.x = element_text(angle=0, vjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=14, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.15, 0.9))+
guides(fill=FALSE)+
geom_text(aes(label=Freq, vjust=-0.5),size=3) +
scale_x_discrete(labels=c("Increased\n considerably", "Increased\n slightly",
"Stayed the\n same", "Decreased\n slightly", "Decreased\n considerably", "Can't\n comment"),limits = (levels(success.change$level)))+
labs(x="", y="No. of responses", fill="")+ colScale + ylim(c(0, 600))
## order bars from very important (left) to can't comment (right)
important<-subset(part4, select=c("Location","Country",'Country_work', "gender","opinion_fundamental_important"))
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
dim(canada)
## using table to count cases of each category
sum.important<-data.frame(table(canada$opinion_fundamental_important))
# remove non-responses
sum.important<-sum.important[!sum.important$Var1=="",]
sum.important$Var1<-factor(sum.important$Var1, levels(sum.important$Var1)[c(6,5,4,3,2,1)])
perceive<-aggregate(Freq~Var1, sum.important, sum)
### colour palette
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
#gender.perceive<-aggregate(Freq ~ Var2 + Var1, sum.important, sum)
# turn to percents
#male<-subset(gender.perceive, Var2=="Male")
#female<-subset(gender.perceive, Var2=="Female")
#other<-subset(gender.perceive, Var2=="Other")
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Female',(gender.perceive$Freq/sum(female$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Other',(gender.perceive$Freq/sum(other$Freq))*100, gender.perceive$Freq)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
## order bars from very important (left) to can't comment (right)
important<-subset(part4, select=c("Location","Country",'Country_work', "gender","opinion_fundamental_important"))
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
dim(canada)
## using table to count cases of each category
sum.important<-data.frame(table(canada$opinion_fundamental_important))
# remove non-responses
sum.important<-sum.important[!sum.important$Var1=="",]
sum.important$Var1<-factor(sum.important$Var1, levels(sum.important$Var1)[c(6,5,4,3,2,1)])
perceive<-aggregate(Freq~Var1, sum.important, sum)
### colour palette
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
setwd("/Users/jpwrobinson/Documents/git_repos/gya-research")
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
survey<-read.csv(file="data/gya-without-incomplete.csv")
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
#research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4.csv")
colnames(p3_master)
part2.b.a<-read.csv(file="data/gya-part2.before.after.csv")
part2.change<-read.csv(file="data/gya-part2.change.csv")
part2.reason<-read.csv(file="data/gya-part2.reason.csv")
part2.view<-read.csv(file="data/gya-part2.view.csv")
part1.view<-read.csv(file="data/gya-part1.view.csv")
part3.grants.long<-read.csv(file="data/gya-part3.grants.long.csv")
part3.change<-read.csv(file="data/gya-part3.change.csv")
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
part3.prac.long<-read.csv(file="data/gya-part3.prac.long.csv")
part3.part.long<-read.csv(file="data/gya-part3.part.long.csv")
p3_master.long<-read.csv(file="data/gya-p3_master.long.csv")
p3_master<-read.csv(file="data/gya-p3_master.csv")
################################
priority<-subset(part4, select=c("Location","Country", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
priority.ca<-subset(part4, select=c("Location","Country", "Country_work", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-priority.ca[priority.ca$Country_work=="Canada" | (!(priority.ca$Country_work=="Canada") &
priority.ca$Country_work=="" & priority.ca$Country=="Canada"),]
priority.ca<-subset(part4, select=c("Location","Country", "Country_work", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-priority.ca[priority.ca$Country_work=="Canada" | (!(priority.ca$Country_work=="Canada") &
priority.ca$Country_work=="" & priority.ca$Country=="Canada"),]
## switch to long format
require(tidyr)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
tail(priority.long)
high.priority<-aggregate(higher.priority~ what.type, priority.long, sum)
high.priority
## order bars into applied > use > fundamental > no change
priority<-subset(part4, select=c("Location","Country",'Country_work', "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-priority[priority$Country_work=="Canada" | (!(priority$Country_work=="Canada") & priority$Country_work=="" & priority$Country=="Canada"),]
## switch to long format
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
# remove non-responses (n = 1066)
#dim(priority.long[!priority.long$higher.priority=="",])/4
priority.long<-priority.long[!priority.long$higher.priority=="",]
per.change<-aggregate(higher.priority~what.type, priority.long, sum)
#gender.perceive<-aggregate(higher.priority ~ gender + what.type, priority.long, sum)
# turn to percents
#male<-subset(gender.perceive, gender=="Male")
#female<-subset(gender.perceive, gender=="Female")
#other<-subset(gender.perceive, gender=="Other")
#gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Male',(gender.perceive$higher.priority/sum(male$higher.priority))*100, #gender.perceive$higher.priority)
#gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Female',(gender.perceive$higher.priority/sum(female$higher.priority))*100, #gender.perceive$higher.priority)
#gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Other',(gender.perceive$higher.priority/sum(other$higher.priority))*100, #gender.perceive$higher.priority)
# change order of the levels
per.change$what.type<-as.factor(per.change$what.type)
per.change$what.type<-factor(per.change$what.type, levels(per.change$what.type)[c(2,4,1,3)])
ggplot(data=per.change, aes(x=what.type, higher.priority))+
geom_bar(stat="identity", position='dodge', fill=myColors[2])+
theme(axis.text.x = element_text(),
axis.text.x = element_text(angle=45, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x="", y="No. of responses", fill="") +
scale_x_discrete(labels=c( "Fundamental", "Use-inspired","Applied", "No change"))   +
geom_text(aes(label=higher.priority), vjust=-0.5)
## order bars into applied > use > fundamental > no change
priority<-subset(part4, select=c("Location","Country",'Country_work', "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-priority[priority$Country_work=="Canada" | (!(priority$Country_work=="Canada") & priority$Country_work=="" & priority$Country=="Canada"),]
## switch to long format
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
# remove non-responses (n = 1066)
priority.long<-priority.long[!priority.long$higher.priority=="",]
per.change<-aggregate(higher.priority~what.type, priority.long, sum)
# change order of the levels
per.change$what.type<-as.factor(per.change$what.type)
per.change$what.type<-factor(per.change$what.type, levels(per.change$what.type)[c(2,4,1,3)])
ggplot(data=per.change, aes(x=what.type, higher.priority))+
geom_bar(stat="identity", position='dodge', fill=myColors[2])+
theme(axis.text.x = element_text(),
axis.text.x = element_text(angle=45, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
labs(x="", y="No. of responses", fill="") +
scale_x_discrete(labels=c( "Fundamental", "Use-inspired","Applied", "No change"))   +
geom_text(aes(label=higher.priority), vjust=-0.5)
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
require(tidyr)
availiability.change.long<-gather(availiability.change, what.type, level, -Location, -gender, -Country)
head(availiability.change.long)
availiability<-aggregate(gender~what.type+level,
availiability.change.long,length)
# remove non-response
availiability<-availiability[!availiability$level=="",]
ggplot(data=availiability, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
availiability.change<-subset(part4, select=c("Location", "Country", "Country_work", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-availiability.change[availiability.change$Country_work=="Canada" | (!(availiability.change$Country_work=="Canada") &
availiability.change$Country_work=="" & availiability.change$Country=="Canada"),]
## switch to long format
require(tidyr)
availiability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country_work, -Country)
availiability.ca<-aggregate(gender~what.type+level,
availiability.change.long.ca,length)
# remove non-response
availiability.ca<-availiability.ca[!availiability.ca$level=="",]
ggplot(data=availiability.ca, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
availiability.ca
## change in funding on the x-axis, and colours = type of research
## order bars into increase considerably (left) to decrease considerably (right), then no comment at the far right
availability.change<-subset(part4, select=c("Location", "Country",'Country_work', "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-availability.change[availability.change$Country_work=="Canada" | (!(availability.change$Country_work=="Canada") & availability.change$Country_work=="" & availability.change$Country=="Canada"),]
## switch to long format
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country, -Country_work)
availability.ca<-with(availability.change.long.ca, data.frame(table(what.type, level)))
#remove non response
availability.ca<-availability.ca[!availability.ca$level=="",]
#gender.perceive<-aggregate(Location ~ what.type + gender+level, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
#gender.perceive<-gender.perceive[!gender.perceive$level=="",]
#gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
# turn to percents
#male<-subset(gender.perceive, gender=="Male")
#female<-subset(gender.perceive, gender=="Female")
#other<-subset(gender.perceive, gender=="Other")
#gender.perceive$Location<-ifelse(gender.perceive$gender=='Male',(gender.perceive$Location/sum(male$Location))*100, gender.perceive$Location)
#gender.perceive$Location<-ifelse(gender.perceive$gender=='Female',(gender.perceive$Location/sum(female$Location))*100, gender.perceive$Location)
#gender.perceive$Location<-ifelse(gender.perceive$gender=='Other',(gender.perceive$Location/sum(other$Location))*100, gender.perceive$Location)
## change type to factor with levels
availability.ca$level<-str_replace_all(availability.ca$level, "Will ", "")
availability.ca$what.type<-as.factor(availability.ca$what.type)
availability.ca$level<-as.factor(availability.ca$level)
## change order of levels
availability.ca$level<-factor(availability.ca$level, levels(availability.ca$level)[c(4,5,6,3,2,1 )])
availability.ca$what.type<-factor(availability.ca$what.type, levels(availability.ca$what.type)[c(2,3,1)])
availability.ca$what.type<-revalue(availability.ca$what.type, c("available_funding_fundamental"="Fundamental",
'available_funding_use_inspired'='Use-inspired', 'available_funding_applied' = 'Applied'))
### colour palette
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 6,3)])
colScale <- scale_fill_manual(name = "what.type",values = myColors)
ggplot(data=availability.ca, aes(x=level, Freq, fill=what.type))+
geom_bar(stat="identity", position="dodge")+
theme(axis.text.x = element_text(angle=0, vjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=14, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.8, 0.2))+
guides(fill=FALSE)+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Increase\n considerably", "Increase\n slightly",
"Stay the same", "Decrease\n slightly", "Decrease\n considerably", "Can't\n comment"))+
facet_wrap(~what.type,nrow=3)+
geom_text(aes(label=Freq), vjust=-0.5, size=3) + colScale +ylim(c(0, 550))
next.generation<-subset(part4, select=c("Location", "Country", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
impact<-aggregate(gender~ next_generation, next.generation, length)
head(impact)
ggplot(data=impact, aes(x=next_generation, gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
next.generation<-subset(part4, select=c("Location", "Country", "Country_work", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
canada<-next.generation[next.generation$Country_work=="Canada" | (!(next.generation$Country_work=="Canada") &
next.generation$Country_work=="" & next.generation$Country=="Canada"),]
head(canada)
impact<-aggregate(gender~ next_generation, canada, length)
impact
## order bars into increase considerably (left) to decrease considerably (right), then no comment at the far right
next.generation<-subset(part4, select=c("Location", "Country","Country_work", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
canada<-next.generation[next.generation$Country_work=="Canada" | (!(next.generation$Country_work=="Canada") & next.generation$Country_work=="" & next.generation$Country=="Canada"),]
impact<-data.frame(table(canada$next_generation))
## change type to factor with levels
impact$Var1<-str_replace_all(impact$Var1, "Will ", "")
impact$Var1<-as.factor(impact$Var1)
impact<-impact[!impact$Var1=="",]
## change order of Var1s
impact$Var1<-factor(impact$Var1, levels(impact$Var1)[c(4,5,6,3,2,1)])
impact<-droplevels(impact)
ggplot(data=impact, aes(x=Var1, Freq))+
geom_bar(stat='identity', position="dodge", fill=myColors[2])  +
scale_x_discrete(labels=c("Increase\n considerably", "Increase\n slightly",
"Stay the same", "Decrease\n slightly", "Decrease\n considerably", "Can't\n comment"))+
guides(fill=FALSE) +
labs(x="", y="No. of responses")+
theme(axis.text.x = element_text(angle=0, vjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
geom_text(aes(label=Freq), vjust=-0.5)
next.generation<-subset(part4, select=c("Location", "Country","Country_work", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
canada<-next.generation[next.generation$Country_work=="Canada" | (!(next.generation$Country_work=="Canada") & next.generation$Country_work=="" & next.generation$Country=="Canada"),]
impact<-data.frame(table(canada$next_generation))
## change type to factor with levels
impact$Var1<-str_replace_all(impact$Var1, "Will ", "")
impact$Var1<-as.factor(impact$Var1)
impact<-impact[!impact$Var1=="",]
summary(impact$Var1)
impact<-droplevels(impact)
summary(impact$Var1)
impact$Var1<-factor(impact$Var1, levels(impact$Var1)[c(4,5,6,3,2,1)])
ggplot(data=impact, aes(x=Var1, Freq))+
geom_bar(stat='identity', position="dodge", fill=myColors[2])  +
scale_x_discrete(labels=c("Increase\n considerably", "Increase\n slightly",
"Stay the same", "Decrease\n slightly", "Decrease\n considerably", "Can't\n comment"))+
guides(fill=FALSE) +
labs(x="", y="No. of responses")+
theme(axis.text.x = element_text(angle=0, vjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
geom_text(aes(label=Freq), vjust=-0.5)
## order bars into increase considerably (left) to decrease considerably (right), then no comment at the far right
next.generation<-subset(part4, select=c("Location", "Country","Country_work", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
canada<-next.generation[next.generation$Country_work=="Canada" | (!(next.generation$Country_work=="Canada") & next.generation$Country_work=="" & next.generation$Country=="Canada"),]
impact<-data.frame(table(canada$next_generation))
## change type to factor with levels
impact$Var1<-str_replace_all(impact$Var1, "Will ", "")
impact$Var1<-as.factor(impact$Var1)
impact<-impact[!impact$Var1=="",]
impact<-droplevels(impact)
summary(impact$Var1)
## change order of Var1s
impact$Var1<-factor(impact$Var1, levels(impact$Var1)[c(4,5,6,3,2,1)])
ggplot(data=impact, aes(x=Var1, Freq))+
geom_bar(stat='identity', position="dodge", fill=myColors[2])  +
scale_x_discrete(labels=c("Increase\n considerably", "Increase\n slightly",
"Stay the same", "Decrease\n slightly", "Decrease\n considerably", "Can't\n comment"))+
guides(fill=FALSE) +
labs(x="", y="No. of responses")+
theme(axis.text.x = element_text(angle=0, vjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())+
geom_text(aes(label=Freq), vjust=-0.5)
### was there change
#canada<-subset(part2.change, Country=="Canada")
#canada<-part2.change[part2.change$Country_work=="Canada" | (!(part2.change$Country_work=="Canada") & part2.change$Country_work=="" & part2.change$Country=="Canada"),]
#change.part.ca<-data.frame(table(canada$partnership_change_10yrs))
#change.part.ca$Var1<-revalue(change.part.ca$Var1, c("Can't comment (new researcher)"="Can't comment"))
#change.part.ca$Var1<-factor(change.part.ca$Var1, levels=c("Yes", "No", "Can't comment"))
#myColors<-(brewer.pal(9, "Blues"))
#myColors<-myColors[c(9, 7,5)]
#g1<-ggplot(data=change.part.ca, aes(x=Var1, y=Freq, fill=Var1))+
#    geom_bar(stat='identity') +
#    guides(fill=FALSE) +
#    labs(x="", y="No. of responses",title="")+
#  geom_text(aes(label=Freq), vjust=-0.5)+
#  theme(panel.grid.major = element_blank(),
#        panel.grid.minor = element_blank()) +
#  scale_fill_manual(name = "Var1",values = myColors) +
#  annotate('text', 3.25,606, label="(a)", size=7)
### reason
part2.reason<-part2.reason[part2.reason$Country_work=="Canada" | (!(part2.reason$Country_work=="Canada") & part2.reason$Country_work=="" & part2.reason$Country=="Canada"),]
reason.pt.long<-gather(part2.reason, change.reason, yes, -Country,-Country_work, -gender, -Location, -what_participant_group, -field_research)
sum.canada<-data.frame(table(reason.pt.long$change.reason, reason.pt.long$yes))
sum.canada$Var1<-revalue(sum.canada$Var1, c("reason_partnership_change_career" = "Career", "reason_partnership_change_funding" = "Funding", "reason_partnership_change_interest" = "Interest", "reason_partnership_change_other" = "Other", "reason_partnership_change_socially"  = "Social"))
sum.canada$Var1<-reorder(sum.canada$Var1, -sum.canada$Freq)
myColors<-(brewer.pal(9, "Blues"))
myColors<-myColors[c(9, 8,7,6,5,3)]
g2<-ggplot(sum.canada, aes(x=Var1, y=Freq, fill=Var1)) +
geom_bar(stat='identity')+  guides(fill=FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=0.5),
legend.position=c(0.8, 0.8),
legend.title=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label=Freq), vjust=-0.5)+
ylim(c(0, 420))+
labs(x="", y="", title="")+scale_fill_manual(name = "Var1",values = myColors)
print(g2)
#annotate('text', 5,420, label="(b)", size=7)+
#grid.arrange(g1, g2, nrow=1)
#canada<-subset(part2.view, Country=="Canada")
canada<-part2.view[part2.view$Country_work=="Canada" | (!(part2.view$Country_work=="Canada") & part2.view$Country_work=="" & part2.view$Country=="Canada"),]
view<-data.frame(table(canada$view_change_partnership))
# change order of the levels
view$Var1<-factor(view$Var1, levels(view$Var1)[c(5,3,1,2,4)])
ggplot(view, aes(x=Var1, y=Freq, fill=myColors[1])) + geom_bar(stat='identity')+
geom_text(aes(label=Freq, vjust=-0.5))+
guides(fill=FALSE)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=0, vjust=0)) +
labs(x="", y="No. of Responses") + colScale
