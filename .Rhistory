print(p)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="red", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="red", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
require(colorspace)
pal<-sequential_hcl(n=2,l=(95.50))                       #default is 30,90
p<-p+scale_color_gradient(color=pal)
p<-p+scale_fill_gradientn(color=pal)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=(95.50))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=(95,50))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=(95,50))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
pal<-sequential_hcl(n=2,l=c(95,50), c=c(0,80))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
pal<-sequential_hcl(n=2,l=c(95,50), c=c(0,30))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=c(95,50), c=c(0,30))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=coast, fill=coast), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
## Script to examine gender differences in survey questions
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
#setwd("/Users/IMAC3/Documents/git-jpwrobinson/gya-research")
#setwd("/Users/jpwrobinson/Documents/git_repos/gya-research")
#setwd("/Users/Julia_2013MacBookAir/Desktop/GitRepos/gya-research")
## load in survey data
survey<-read.csv(file="data/gya-without-incomplete.csv")
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4.csv")
part2.b.a<-read.csv(file="data/gya-part2.before.after.csv")
part2.change<-read.csv(file="data/gya-part2.change.csv")
part2.reason<-read.csv(file="data/gya-part2.reason.csv")
part2.view<-read.csv(file="data/gya-part2.view.csv")
part1.view<-read.csv(file="data/gya-part1.view.csv")
part3.grants.long<-read.csv(file="data/gya-part3.grants.long.csv")
part3.grants<-read.csv(file = "data/gya-part3.grants.csv")
part3.change<-read.csv(file="data/gya-part3.change.csv")
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
part3.prac.long<-read.csv(file="data/gya-part3.prac.long.csv")
part3.prac.app<-read.csv(file="data/gya-part3.prac.app.csv")
part3.part.long<-read.csv(file="data/gya-part3.part.long.csv")
part3.part<-read.csv(file="data/gya-part3.part.csv")
p3_master.long<-read.csv(file="data/gya-p3_master.long.csv")
p3_master<-read.csv(file="data/gya-p3_master.csv")
research.type<-read.csv(file="data/gya-research-cleaned.csv")
## load required packages
require(gridExtra); require(tidyr); require(ggplot2); require(stringr);require(RColorBrewer); require(colorRamps); require(plotrix); require(plyr); require(visreg); require(DirichletReg); require(rgl); require(dr); require(betareg)
theme_set(theme_bw())
change<-subset(research.change, select=c("Location","Country",'Country_work', "gender", "changed_10yrs"))
canada<-change[change$Country_work=="Canada" | (!(change$Country_work=="Canada") &
change$Country_work=="" & change$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-canada[!canada$changed_10yrs=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
sum.change<-data.frame(table(canada$changed_10yrs, canada$gender))
sum.change
change.mod1<-(glm(Freq ~ Var1*Var2, sum.change, family="poisson"))
change.mod2<-(glm(Freq ~ Var1 +Var2, sum.change, family="poisson"))
visreg(change.mod1, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
summary(change.mod1)
head(change.mod2)
anova(change.mod1, change.mod2, test="Chi")
head(research.type)
research<-subset(research.type, select=c("Location","Country",'Country_work', "gender", "percent_fundemental_research_current", "percent_Use_inspired_Research_current",
"percent_Applied_Research_current"))
canada<-research[research$Country_work=="Canada" | (!(research$Country_work=="Canada") &
research$Country_work=="" & research$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
type.r.long<-gather(canada, type, percent, -Location, -Country, -Country_work, -gender)
head(type.r.long)
#make decimal
type.r.long$percent<-type.r.long$percent/100
#head(type.r.long, 20)
#unique(type.r.long$percent)
n.percent<-length(type.r.long$percent)
type.r.long$percent_trans<-(type.r.long$percent*(n.percent-1)+0.5)/n.percent
mod1<-betareg(percent_trans ~ gender * type, type.r.long)
mod2<-betareg(percent_trans ~ gender + type, type.r.long)
AIC(mod1, mod2)
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only Applied
g.types.ca$type<-ifelse(grepl("Applied", g.types.ca$type.grant), "Applied", "")
head(g.types.ca)
g.types.applied<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.applied$number)
g.types.applied$type.grant<-as.character(g.types.applied$type.grant)
g.types.applied$year<-  str_split_fixed(g.types.applied$type.grant, ' ', 2)[,2]
#change order of levels
g.types.applied$number<-factor(g.types.applied$number, levels(g.types.applied$number)[c(1,2,6,7,3,4,5)])
head(g.types.applied)
g.types.applied.mod1<-(glm(Freq ~ number*year, g.types.applied, family="poisson"))
g.types.applied.mod1<-(glm(Freq ~ number*year, g.types.applied, family="poisson"))
summary(g.types.applied.mod1)
plot(g.types.applied.mod1)
g.types.applied.mod2<-(glm(Freq ~ number*gender, g.types.applied, family="poisson"))
summary(g.types.applied.mod2)
plot(g.types.applied.mod2)
anova(g.types.applied.mod1, g.types.applied.mod2, test="Chi")
AIC(g.types.applied.mod1,g.types.applied.mod2, g.types.applied.mod3,g.types.applied.mod4)
AIC(g.types.applied.mod1,g.types.applied.mod2)
head(part3.prac.long)
prac.app<-subset(part3.prac.long, select=c("Location","Country",'Country_work', "gender", "year", "level"))
canada<-prac.app[prac.app$Country_work=="Canada" | (!(prac.app$Country_work=="Canada") &
prac.app$Country_work=="" & prac.app$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
prac.app.ca<-with(canada, data.frame(table(year, gender, level)))
head(prac.app.ca,20)
prac.app.ca$year<-revalue(prac.app.ca$year, c("practical_applications_important_11_15"="2011-2015",
'practical_applications_important_6_10'='2006-2010'))
head(prac.app.ca)
#change order of levels
prac.app.ca$level<-factor(prac.app.ca$level, levels(prac.app.ca$level)[c(1,3,5,4,6,2)])
levels(prac.app.ca$level)
head(prac.app.ca)
prac.app.ca.mod1<-(glm(Freq ~ level*year, prac.app.ca, family="poisson"))
summary(prac.app.ca.mod1)
plot(prac.app.ca.mod1)
ggplot(prac.app.ca, aes(level, Freq)) + geom_point() +theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(prac.app.ca, aes(level, Freq)) + geom_point() +theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(prac.app.ca, aes(level, Freq, col=gender, shape=gender)) + geom_point()+ theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(prac.app.ca, aes(level, Freq, col=gender, shape=year)) + geom_point()+theme(axis.text.x = element_text(angle=90, vjust=0.5))
prac.app.ca.mod1<-(glm(Freq ~ level*year, prac.app.ca, family="poisson"))
summary(prac.app.ca.mod1)
prac.app.ca.mod2<-(glm(Freq ~ level*gender, prac.app.ca, family="poisson"))
summary(prac.app.ca.mod2)
#applied
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only Applied
g.types.ca$type<-ifelse(grepl("Applied", g.types.ca$type.grant), "Applied", "")
head(g.types.ca)
#make a seperate column for both year and type
g.types.applied<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.applied$number)
g.types.applied$type.grant<-as.character(g.types.applied$type.grant)
g.types.applied$year<-  str_split_fixed(g.types.applied$type.grant, ' ', 2)[,2]
#change order of levels
g.types.applied$number<-factor(g.types.applied$number, levels(g.types.applied$number)[c(1,2,6,7,3,4,5)])
head(g.types.applied)
g.types.applied.mod1<-(glm(Freq ~ number*year, g.types.applied, family="poisson"))
summary(g.types.applied.mod1)
plot(g.types.applied.mod1)
summary(g.types.applied.mod1)
g.types.applied.mod2<-(glm(Freq ~ number*gender, g.types.applied, family="poisson"))
summary(g.types.applied.mod2)
ggplot(g.types.applied, aes(number, Freq)) + geom_point()
ggplot(g.types.applied, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.applied, aes(number, Freq, col=gender, shape=year)) + geom_point()
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only use
g.types.ca$type<-ifelse(grepl("Use-Inspired", g.types.ca$type.grant), "Use-Inspired", "")
head(g.types.ca)
g.types.used<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.used$number)
g.types.used$type.grant<-as.character(g.types.used$type.grant)
g.types.used$year<-  str_split_fixed(g.types.used$type.grant, ' ', 2)[,2]
#change order of levels
g.types.used$number<-factor(g.types.used$number, levels(g.types.used$number)[c(1,2,6,7,3,4,5)])
head(g.types.used)
g.types.used.mod1<-(glm(Freq ~ number*year, g.types.used, family="poisson"))
summary(g.types.used.mod1)
plot(g.types.used.mod1)
#plot data to look at
ggplot(g.types.used, aes(number, Freq)) + geom_point()
ggplot(g.types.used, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.used, aes(number, Freq, col=gender, shape=year)) + geom_point()
g.types.used.mod2<-(glm(Freq ~ number*gender, g.types.used, family="poisson"))
summary(g.types.used.mod2)
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only fund
g.types.ca$type<-ifelse(grepl("Fundamental", g.types.ca$type.grant), "Fundamental", "")
head(g.types.ca)
g.types.fund<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.fund$number)
g.types.fund$type.grant<-as.character(g.types.fund$type.grant)
g.types.fund$year<-  str_split_fixed(g.types.fund$type.grant, ' ', 2)[,2]
#change order of levels
g.types.fund$number<-factor(g.types.fund$number, levels(g.types.fund$number)[c(1,2,6,7,3,4,5)])
head(g.types.fund)
g.types.fund.mod1<-(glm(Freq ~ number*year, g.types.fund, family="poisson"))
summary(g.types.fund.mod1)
g.types.fund.mod2<-(glm(Freq ~ number*gender, g.types.fund, family="poisson"))
summary(g.types.fund.mod2)
ggplot(g.types.fund, aes(number, Freq)) + geom_point()
ggplot(g.types.fund, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.fund, aes(number, Freq, col=gender, shape=year)) + geom_point()
