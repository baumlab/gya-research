quartz()
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(6,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=cols,las=2)
setwd("/Users/jpwrobinson/Documents/git_repos/gya-research")
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
survey<-read.csv(file="data/gya-without-incomplete.csv")
dim(survey)
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4")
################################
#### Summary statistics ########
################################
require(ggplot2)
## change default background
theme_set(theme_bw())
## aggregate data for plotting
survey.table<-table(survey.what$Country,survey.what$gender)
gender<-aggregate(Location ~ gender, survey.what, length)
country_work<-aggregate(gender ~ Country_work, survey.what, length)
country_work
## plot countries with number of responses
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses",x="")  +
geom_text(aes(label=gender), hjust=-0.25, angle=90,size=3) +
geom_text(aes(label=Country_work), angle=90, hjust=-1,size=3) + lims(y=c(0, 1450)) + theme(axis.ticks.x=element_blank())
## add a line that saves the plots in a pdf
pdf(file="figures/first_survey_responses.pdf", height=7, width=11)
###############
####Part5#####
###############
##1 # of responses by country
locations<-aggregate(gender ~ Country, survey.what, length)
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y="Number of responses", x="")  +
geom_text(aes(label=gender), angle=90, hjust=-1, size=3) +
#geom_text(aes(label=Country_work), angle=90, hjust=-0.5)
lims(y=c(0, 1600)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=8), axis.title=element_text(size=12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##1b  top 20+
require(plotrix)
country.list<-c("Canada" , "France",
"Germany","United Kingdom","Italy","Japan", "Russia","Korea, South",
"United States","Australia","Austria","Belgium",
"Ireland","Brazil", "Poland","Finland",
"Netherlands","New Zealand","Norway",
"Spain","Sweden","Switzerland","Turkey","Israel",
"India","Bangladesh","Uruguay","Malaysia","New Zealand","Taiwan","Denmark")
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[order(match(locations.top,gender.top))]
locations.top
locations.top<-droplevels(locations.top)
#########not done###############
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(6,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=cols,las=2)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(6,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col="black")
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c("black", "purple" )
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c("black", "purple" ))
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(random))
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
survey<-read.csv(file="data/gya-without-incomplete.csv")
dim(survey)
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4")
################################
#### Summary statistics ########
################################
require(ggplot2)
## change default background
theme_set(theme_bw())
## aggregate data for plotting
survey.table<-table(survey.what$Country,survey.what$gender)
gender<-aggregate(Location ~ gender, survey.what, length)
country_work<-aggregate(gender ~ Country_work, survey.what, length)
country_work
## plot countries with number of responses
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses",x="")  +
geom_text(aes(label=gender), hjust=-0.25, angle=90,size=3) +
geom_text(aes(label=Country_work), angle=90, hjust=-1,size=3) + lims(y=c(0, 1450)) + theme(axis.ticks.x=element_blank())
## add a line that saves the plots in a pdf
pdf(file="figures/first_survey_responses.pdf", height=7, width=11)
###############
####Part5#####
###############
##1 # of responses by country
locations<-aggregate(gender ~ Country, survey.what, length)
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y="Number of responses", x="")  +
geom_text(aes(label=gender), angle=90, hjust=-1, size=3) +
#geom_text(aes(label=Country_work), angle=90, hjust=-0.5)
lims(y=c(0, 1600)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=8), axis.title=element_text(size=12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##1b  top 20+
require(plotrix)
country.list<-c("Canada" , "France",
"Germany","United Kingdom","Italy","Japan", "Russia","Korea, South",
"United States","Australia","Austria","Belgium",
"Ireland","Brazil", "Poland","Finland",
"Netherlands","New Zealand","Norway",
"Spain","Sweden","Switzerland","Turkey","Israel",
"India","Bangladesh","Uruguay","Malaysia","New Zealand","Taiwan","Denmark")
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[order(match(locations.top,gender.top))]
locations.top
locations.top<-droplevels(locations.top)
#########not done###############
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(random))
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c("grey":29))
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c("rainbow"))
install.packages("colorRamps")
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(primary.colors(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(yggob(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(ygobb(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(cm.colors(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(cm.colors(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(matlab.like(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(magenta2green(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
#cols<-ifelse(locations.top$Country_work=country.list,"black",)
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(rev(primary.colors(29)))
#barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(rev(primary.colors(29)))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(rev(primary.colors(29)))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(rev(primary.colors(29))))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(rev(primary.colors(29))))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29)))
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29)))
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29))))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29)))
quartz()
require(colorRamps)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
par(mar=c(7,4,4,2))
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300),las=2, col=c(blue2red(29)))
