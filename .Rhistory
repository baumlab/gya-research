guides(fill=guide_legend(title=NULL, reverse=TRUE, nrow=3)) +
theme(legend.title=element_blank(),
legend.text=element_text(size=10),
axis.text=element_text(size=14),
axis.text.x=element_text(angle=0, size=12),
axis.title=element_text(size=15),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
colScale+ ylim(c(0, 900)) + guides(fill=FALSE)
# Chunk 3
field.can<-with(survey.what[survey.what$Country_work=="Canada" | (!(survey.what$Country_work=="Canada") & survey.what$Country_work=="" & survey.what$Country=="Canada"),], data.frame(table(field_research)))
field.can<-field.can[!field.can$field_research=="",]
field.can$field_research<-reorder(field.can$field_research, field.can$Freq)
field.can$field_research<-revalue(field.can$field_research, c("Physical Science (eg. math, physics, chemistry, computer science)" = "Physical Science"))
## setting colour scale to keep colours identical between similar plots
myColors<-(brewer.pal(9, "Blues"))
myColors<-myColors[-c(1)]
names(myColors) <- levels(field.can$field_research)
colScale <- scale_fill_manual(name = "field_research",values = myColors)
ggplot(field.can, aes(x = reorder(field_research, -Freq), Freq, fill=field_research)) +
geom_bar(stat='identity',position = position_dodge(width=0.5)) +
ylim(c(0, 400)) +
labs(y="No. of responses",x="", title="")  +
scale_x_discrete(labels=c("Natural\n Science", "Physical\n Science", "Medicine &\n Life Science", "Engineering", "Interdisciplinary\n Science", "Social Science/\n Humanities", "Other")) +
geom_text(aes(label=Freq), vjust=-0.25) +
theme( axis.text=element_text(size=14),
axis.text.x=element_text(angle=0, size=14),
axis.title=element_text(size=14),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
guides(fill=FALSE) + colScale
# Chunk 4
## make sure that Use-inspired is the middle level in the legend
res.plot<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current","percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
res.plot$percent<-str_replace_all(res.plot$percent, "%", "")
res.plot$percent<-as.numeric(as.character(res.plot$percent))
res.plot$type<-as.character(res.plot$type)
# add time variable
res.plot$time<-ifelse(grepl( "current", res.plot$type),"Current", "Past")
res.plot$type[res.plot$type=="percent_Applied_Research_past"]<-"Applied"
res.plot$type[res.plot$type=="percent_Applied_Research_current"]<-"Applied"
res.plot$type[res.plot$type=="percent_Fundamental_Research_past"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_fundemental_research_current"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_past"]<-"Use-inspired"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_current"]<-"Use-inspired"
# change order of the levels
res.plot$time<-as.factor(res.plot$time)
res.plot$time<-factor(res.plot$time, levels(res.plot$time)[c(2,1)])
res.plot$type<-as.factor(res.plot$type)
res.plot$type<-factor(res.plot$type, levels(res.plot$type)[c(2,3,1)])
res.plot$time<-factor(res.plot$time)
res.plot$time<-factor(res.plot$time, levels(res.plot$time)[c(1,2)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-myColors[c(5,9)]
colScale <- scale_fill_manual(name = "time",values = myColors)
res.plot<-res.plot[res.plot$Country_work=="Canada" | (!(res.plot$Country_work=="Canada") & res.plot$Country_work=="" & res.plot$Country=="Canada"),]
ggplot(res.plot, aes(percent, fill=time)) +
geom_histogram(position='dodge', binwidth=10, bins=seq(0, 100, 10))  +
guides(fill=guide_legend(title=NULL, reverse=FALSE, nrow=2)) +
labs(x="Percent", y="No. responses", title="")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=12, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.8, 0.2)) +
facet_wrap(~type, nrow=3) + colScale +
scale_x_continuous(breaks=seq(0,100,10))
# Chunk 5
#Change yes or no
yes.no<-subset(research.change, select=c("Location","Country", "Country_work",  "gender", "changed_10yrs"))
canada<-yes.no[yes.no$Country_work=="Canada" | (!(yes.no$Country_work=="Canada") &
yes.no$Country_work=="" & yes.no$Country=="Canada"),]
canada.yesno<-aggregate(Country~ changed_10yrs, canada, length)
canada.yesno<-canada.yesno[!canada.yesno$changed_10yrs=="",]
p1<-ggplot(data=canada.yesno, aes(x=changed_10yrs, y=Country, fill=Country))+ geom_bar(stat='identity') + guides(fill=FALSE)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.title.x=element_blank())+geom_text(aes(label=Country), vjust=-0.5)+labs(y="No. responses")
#reason for change
reason<-subset(research.change, select=c("Location","Country","Country_work",  "gender", "Main_reason_change_interest_related",
"Main_reason_change_Career_related","Main_reason_change_Funding_related", "Main_reason_change_Socially_related","Main_reason_change_Other"))
canada<-reason[reason$Country_work=="Canada" | (!(reason$Country_work=="Canada") &
reason$Country_work=="" & reason$Country=="Canada"),]
## switch to long format
require(tidyr)
canada.long<-gather(canada, reason.change.ca, yes.ca, -Location, -gender, -Country_work, -Country)
## using table to count cases of each category
sum.canada<-data.frame(table(canada.long$reason.change.ca, canada.long$yes.ca))
# remove non-response
sum.canada<-sum.canada[!sum.canada$Var1=="",]
sum.canada$Var1<-revalue(sum.canada$Var1, c("Main_reason_change_Career_related" = "Career", "Main_reason_change_Funding_related" = "Funding", "Main_reason_change_interest_related" = "Interest", "Main_reason_change_Other" = "Other", "Main_reason_change_Socially_related"  = "Social"))
myColors<-(brewer.pal(9, "Blues"))
myColors<-myColors[c(9, 8,7,6,5,3)]
p2<-ggplot(sum.canada, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=90, vjust=0.5),panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),axis.text.x = element_text(angle=0, vjust=0.5)) +guides(fill=FALSE) +scale_fill_manual(name = "Var1",values = myColors)+
labs(x="Reason", y="No. responses")+geom_text(aes(label=Freq), vjust=-0.5)
grid.arrange(p1, p2, nrow=1)
# Chunk 6
canada<-part1.view[part1.view$Country_work=="Canada" | (!(part1.view$Country_work=="Canada") &
part1.view$Country_work=="" & part1.view$Country=="Canada"),]
canada<-canada[!canada$view_change_of_type=="",]
canada<-droplevels(canada)
change.view.ca<-aggregate(gender~ view_change_of_type, canada, length)
# change order of the levels
change.view.ca$view_change_of_type<-factor(change.view.ca$view_change_of_type,
levels(change.view.ca$view_change_of_type)[c(5,3,1,2,4)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-myColors[c(1)]
ggplot(change.view.ca, aes(x=view_change_of_type, y=gender, fill=myColors)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=90, vjust=0.5)) +guides(fill=FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ labs(x="", y="No. Responses")+geom_text(aes(label=gender), vjust=-0.5)+colScale
# Chunk 7
part2.b.a<-part2.b.a[part2.b.a$Country_work=="Canada" | (!(part2.b.a$Country_work=="Canada") & part2.b.a$Country_work=="" & part2.b.a$Country=="Canada"),]
b.part<-data.frame(table(part2.b.a$partnership_outside_before))
b.part$time<-"Past"
a.part<-data.frame(table(part2.b.a$partnership_outside))
a.part$time<-"Current"
part<-rbind(a.part, b.part)
part$Var1<-factor(part$Var1, levels(part$Var1)[c(1,4,3,2)])
part$time<-factor(part$time)
part$time<-factor(part$time, levels(part$time)[c(2,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 6)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
ggplot(part, aes(x=Var1, y=Freq, fill = time),  ylim(0,375)) +
geom_bar( stat='identity', position="dodge") +
geom_text(aes(label=Freq), position=position_dodge(width=1), vjust=-0.8) +
labs(x="", y="No. of Responses", fill="")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=0),
legend.position=c(0.2, 0.9),
legend.title=element_blank()) +
colScale
# Chunk 8
### was there change
#canada<-subset(part2.change, Country=="Canada")
#canada<-part2.change[part2.change$Country_work=="Canada" | (!(part2.change$Country_work=="Canada") & part2.change$Country_work=="" & part2.change$Country=="Canada"),]
#change.part.ca<-data.frame(table(canada$partnership_change_10yrs))
#change.part.ca$Var1<-revalue(change.part.ca$Var1, c("Can't comment (new researcher)"="Can't comment"))
#change.part.ca$Var1<-factor(change.part.ca$Var1, levels=c("Yes", "No", "Can't comment"))
#myColors<-(brewer.pal(9, "Blues"))
#myColors<-myColors[c(9, 7,5)]
#g1<-ggplot(data=change.part.ca, aes(x=Var1, y=Freq, fill=Var1))+
#    geom_bar(stat='identity') +
#    guides(fill=FALSE) +
#    labs(x="", y="No. of responses",title="")+
#  geom_text(aes(label=Freq), vjust=-0.5)+
#  theme(panel.grid.major = element_blank(),
#        panel.grid.minor = element_blank()) +
#  scale_fill_manual(name = "Var1",values = myColors) +
#  annotate('text', 3.25,606, label="(a)", size=7)
### reason
part2.reason<-part2.reason[part2.reason$Country_work=="Canada" | (!(part2.reason$Country_work=="Canada") & part2.reason$Country_work=="" & part2.reason$Country=="Canada"),]
reason.pt.long<-gather(part2.reason, change.reason, yes, -Country,-Country_work, -gender, -Location, -what_participant_group, -field_research)
sum.canada<-data.frame(table(reason.pt.long$change.reason, reason.pt.long$yes))
sum.canada$Var1<-revalue(sum.canada$Var1, c("reason_partnership_change_career" = "Career", "reason_partnership_change_funding" = "Funding", "reason_partnership_change_interest" = "Interest", "reason_partnership_change_other" = "Other", "reason_partnership_change_socially"  = "Social"))
sum.canada$Var1<-reorder(sum.canada$Var1, -sum.canada$Freq)
myColors<-(brewer.pal(9, "Blues"))
myColors<-myColors[c(9, 8,7,6,5,3)]
g2<-ggplot(sum.canada, aes(x=Var1, y=Freq, fill=Var1)) +
geom_bar(stat='identity')+  guides(fill=FALSE) +
theme(axis.text.x = element_text(angle=0, vjust=0.5),
legend.position=c(0.8, 0.8),
legend.title=element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label=Freq), vjust=-0.5)+
ylim(c(0, 420))+
labs(x="", y="", title="")+scale_fill_manual(name = "Var1",values = myColors)
print(g2)
#annotate('text', 5,420, label="(b)", size=7)+
#grid.arrange(g1, g2, nrow=1)
# Chunk 9
#canada<-subset(part2.view, Country=="Canada")
canada<-part2.view[part2.view$Country_work=="Canada" | (!(part2.view$Country_work=="Canada") & part2.view$Country_work=="" & part2.view$Country=="Canada"),]
view<-data.frame(table(canada$view_change_partnership))
# change order of the levels
view$Var1<-factor(view$Var1, levels(view$Var1)[c(5,3,1,2,4)])
ggplot(view, aes(x=Var1, y=Freq, fill=myColors[1])) + geom_bar(stat='identity')+
geom_text(aes(label=Freq, vjust=-0.5))+
guides(fill=FALSE)+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text.x = element_text(angle=0, vjust=0)) +
labs(x="", y="No. of Responses") + colScale
#canada<-subset(part3.grants.long, Country=="Canada")
canada<-part3.grants.long[part3.grants.long$Country_work=="Canada" | (!(part3.grants.long$Country_work=="Canada") & part3.grants.long$Country_work=="" & part3.grants.long$Country=="Canada"),]
canada$type.grant<-as.character(canada$type.grant)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
grants.ca<-data.frame(with(canada, table(type.grant,time,number)))
grants.ca$type.grant<-as.factor(grants.ca$type.grant)
#change order of levels
grants.ca$number<-factor(grants.ca$number, levels(grants.ca$number)[c(1,2,6,7,3,4,5)])
grants.ca$type.grant<-factor(grants.ca$type.grant, levels(grants.ca$type.grant)[c(2,3,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "time",values = myColors)
ggplot(grants.ca, aes(number, Freq, fill=time)) +
geom_bar(stat="identity", position = "dodge")+
facet_wrap(~type.grant, nrow=3) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="No. of grant applications", y="No. of responses")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=12, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.8, 0.53)) + colScale
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
#setwd("/Users/IMAC3/Documents/git-jpwrobinson/gya-research")
#setwd("/Users/jpwrobinson/Documents/git_repos/gya-research")
#setwd("/Users/Julia_2013MacBookAir/Desktop/GitRepos/gya-research")
## load in survey data
survey<-read.csv(file="data/gya-without-incomplete.csv")
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4.csv")
part2.b.a<-read.csv(file="data/gya-part2.before.after.csv")
part2.change<-read.csv(file="data/gya-part2.change.csv")
part2.reason<-read.csv(file="data/gya-part2.reason.csv")
part2.view<-read.csv(file="data/gya-part2.view.csv")
part1.view<-read.csv(file="data/gya-part1.view.csv")
part3.grants.long<-read.csv(file="data/gya-part3.grants.long.csv")
part3.grants<-read.csv(file = "data/gya-part3.grants.csv")
part3.change<-read.csv(file="data/gya-part3.change.csv")
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
part3.prac.long<-read.csv(file="data/gya-part3.prac.long.csv")
part3.prac.app<-read.csv(file="data/gya-part3.prac.app.csv")
part3.part.long<-read.csv(file="data/gya-part3.part.long.csv")
part3.part<-read.csv(file="data/gya-part3.part.csv")
p3_master.long<-read.csv(file="data/gya-p3_master.long.csv")
p3_master<-read.csv(file="data/gya-p3_master.csv")
research.type<-read.csv(file="data/gya-research-cleaned.csv")
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only Applied
g.types.ca$type<-ifelse(grepl("Applied", g.types.ca$type.grant), "Applied", "")
head(g.types.ca)
#make a seperate column for both year and type
g.types.applied<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.applied$number)
g.types.applied$type.grant<-as.character(g.types.applied$type.grant)
g.types.applied$year<-  str_split_fixed(g.types.applied$type.grant, ' ', 2)[,2]
#change order of levels
g.types.applied$number<-factor(g.types.applied$number, levels(g.types.applied$number)[c(1,2,6,7,3,4,5)])
head(g.types.applied)
g.types.applied.mod1<-(glm(Freq ~ number*year, g.types.applied, family="poisson"))
summary(g.types.applied.mod1)
plot(g.types.applied.mod1)
anova(g.types.applied.mod1, g.types.applied.mod2, test="Chi")
AIC(g.types.applied.mod1,g.types.applied.mod2)
#plot data to look at
ggplot(g.types.applied, aes(number, Freq)) + geom_point()
ggplot(g.types.applied, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.applied, aes(number, Freq, col=gender, shape=year)) + geom_point()
head(g.types.applied)
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson"))
g.types.applied.mod2<-(glm(Freq ~ number*year+gender, g.types.applied, family="poisson"))
anova(g.types.applied.mod1, g.types.applied.mod2, test="Chi")
g.types.applied.mod2<-(glm(Freq ~ number+year*gender, g.types.applied, family="poisson"))
g.types.applied.mod2<-(glm(Freq ~ number*year+gender, g.types.applied, family="poisson"))
g.types.applied.mod3<-(glm(Freq ~ number+year*gender, g.types.applied, family="poisson"))
install.packages("MuMin")
install.packages("MuMIn")
library(MuMIn)
dredge(g.types.applied.mod1)
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson"), na.action=na.omit)
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson"), na.action="na.omit")
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson", na.action="na.omit")
)
dredge(g.types.applied.mod1)
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson", na.action=na.omit))
dredge(g.types.applied.mod1)
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson"))
AIC(g.types.applied.mod1,g.types.applied.mod2,g.types.applied.mod3)
anova(g.types.applied.mod1, g.types.applied.mod3, test="Chi")
g.types.applied.mod3<-(glm(Freq ~ number+year+gender, g.types.applied, family="poisson"))
anova(g.types.applied.mod1, g.types.applied.mod3, test="Chi")
AIC(g.types.applied.mod1,g.types.applied.mod2,g.types.applied.mod3)
g.types.applied.mod3<-(glm(Freq ~ number+year*gender, g.types.applied, family="poisson"))
AIC(g.types.applied.mod1,g.types.applied.mod2,g.types.applied.mod3)
g.types.applied.mod2<-(glm(Freq ~ number+year+gender, g.types.applied, family="poisson"))
g.types.applied.mod3<-(glm(Freq ~ number+year*gender, g.types.applied, family="poisson"))
anova(g.types.applied.mod2, g.types.applied.mod3, test="Chi")
AIC(g.types.applied.mod1,g.types.applied.mod2,g.types.applied.mod3)
g.types.applied.mod2<-(glm(Freq ~ number*year+gender, g.types.applied, family="poisson"))
anova(g.types.applied.mod1, g.types.applied.mod2, test="Chi")
AIC(g.types.applied.mod1,g.types.applied.mod2,g.types.applied.mod3)
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only use
g.types.ca$type<-ifelse(grepl("Use-Inspired", g.types.ca$type.grant), "Use-Inspired", "")
head(g.types.ca)
#make a seperate column for both year and type
g.types.used<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.used$number)
g.types.used$type.grant<-as.character(g.types.used$type.grant)
g.types.used$year<-  str_split_fixed(g.types.used$type.grant, ' ', 2)[,2]
#change order of levels
g.types.used$number<-factor(g.types.used$number, levels(g.types.used$number)[c(1,2,6,7,3,4,5)])
head(g.types.used)
g.types.used.mod1<-(glm(Freq ~ number*year, g.types.used, family="poisson"))
summary(g.types.used.mod1)
plot(g.types.used.mod1)
g.types.used.mod1<-(glm(Freq ~ number*year*gender, g.types.used, family="poisson"))
g.types.used.mod2<-(glm(Freq ~ number*year+gender, g.types.used, family="poisson"))
ggplot(g.types.used, aes(number, Freq)) + geom_point()
ggplot(g.types.used, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.used, aes(number, Freq, col=gender, shape=year)) + geom_point()
anova(g.types.used.mod1, g.types.used.mod2, test="Chi")
g.types.used.mod2<-(glm(Freq ~ number+year+gender, g.types.used, family="poisson"))
summary(g.types.used.mod2)
plot(g.types.used.mod2)
anova(g.types.used.mod1, g.types.used.mod2, test="Chi")
g.types.used.mod1<-(glm(Freq ~ number+year*gender, g.types.used, family="poisson"))
g.types.used.mod2<-(glm(Freq ~ number+year+gender, g.types.used, family="poisson"))
anova(g.types.used.mod1, g.types.used.mod2, test="Chi")
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only fund
g.types.ca$type<-ifelse(grepl("Fundamental", g.types.ca$type.grant), "Fundamental", "")
head(g.types.ca)
#make a seperate column for both year and type
g.types.fund<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.fund$number)
g.types.fund$type.grant<-as.character(g.types.fund$type.grant)
g.types.fund$year<-  str_split_fixed(g.types.fund$type.grant, ' ', 2)[,2]
#change order of levels
g.types.fund$number<-factor(g.types.fund$number, levels(g.types.fund$number)[c(1,2,6,7,3,4,5)])
head(g.types.fund)
g.types.fund.mod1<-(glm(Freq ~ number*year, g.types.fund, family="poisson"))
summary(g.types.fund.mod1)
g.types.fund.mod2<-(glm(Freq ~ number*gender, g.types.fund, family="poisson"))
ggplot(g.types.fund, aes(number, Freq)) + geom_point()
ggplot(g.types.fund, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.fund, aes(number, Freq, col=gender, shape=year)) + geom_point()
g.types.fund.mod1<-(glm(Freq ~ number*year*gender, g.types.fund, family="poisson"))
g.types.fund.mod2<-(glm(Freq ~ number*year+gender, g.types.fund, family="poisson"))
anova(g.types.fund.mod1,g.types.fund.mod2, test = "Chi")
g.types.fund.mod1<-(glm(Freq ~ number+year*gender, g.types.fund, family="poisson"))
g.types.fund.mod2<-(glm(Freq ~ number+year+gender, g.types.fund, family="poisson"))
anova(g.types.fund.mod1,g.types.fund.mod2, test = "Chi")
head(part3.success.long)
g.success<-subset(part3.success.long, select=c("Location","Country",'Country_work', "gender", "type", "percent"))
canada<-g.success[g.success$Country_work=="Canada" | (!(g.success$Country_work=="Canada") &
g.success$Country_work=="" & g.success$Country=="Canada"),]
#clean up names
canada$type<-revalue(canada$type, c("successful_grants_11_15_applied"="Applied 2011-2015",
'successful_grants_11_15_fundamental'='Fundamental 2011-2015',
'successful_grants_11_15_use' = 'Use-Inspired 2011-2015',
"successful_grants_6_10_applied"="Applied 2006-2010",
"successful_grants_6_10_fundamental"="Fundamental 2006-2010",
"successful_grants_6_10_use"="Use-Inspired 2006-2010"))
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada$type<-as.character(canada$type)
canada$year<-  str_split_fixed(canada$type, ' ', 2)[,2]
canada$type.g<-  str_split_fixed(canada$type, ' ', 2)[,1]
canada<-canada[!canada$year=="2006-2010",]
canada<-droplevels(canada)
tail(canada)
#make decimal
canada$percent<-canada$percent/100
head(canada)
#unique(type.r.long$percent)
n.percent<-length(canada$percent)
canada$percent_trans<-(canada$percent*(n.percent-1)+0.5)/n.percent
mod1<-betareg(percent_trans ~ gender * type.g, canada)
summary(mod1)
plot(mod1)
mod2<-betareg(percent_trans ~ gender + type.g, canada)
AIC(mod1, mod2)
anova(mod1, mod2, test="Chi")
head(part3.prac.long)
prac.app<-subset(part3.prac.long, select=c("Location","Country",'Country_work', "gender", "year", "level"))
canada<-prac.app[prac.app$Country_work=="Canada" | (!(prac.app$Country_work=="Canada") &
prac.app$Country_work=="" & prac.app$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
prac.app.ca<-with(canada, data.frame(table(year, gender, level)))
head(prac.app.ca,20)
prac.app.ca$year<-revalue(prac.app.ca$year, c("practical_applications_important_11_15"="2011-2015",
'practical_applications_important_6_10'='2006-2010'))
head(prac.app.ca)
#change order of levels
prac.app.ca$level<-factor(prac.app.ca$level, levels(prac.app.ca$level)[c(1,3,5,4,6,2)])
levels(prac.app.ca$level)
head(prac.app.ca)
prac.app.ca.mod1<-(glm(Freq ~ level*year, prac.app.ca, family="poisson"))
summary(prac.app.ca.mod1)
plot(prac.app.ca.mod1)
ggplot(prac.app.ca, aes(level, Freq)) + geom_point() +theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(prac.app.ca, aes(level, Freq, col=gender, shape=gender)) + geom_point()+ theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(prac.app.ca, aes(level, Freq, col=gender, shape=year)) + geom_point()+theme(axis.text.x = element_text(angle=90, vjust=0.5))
prac.app.ca.mod1<-(glm(Freq ~ level*year*gender, prac.app.ca, family="poisson"))
prac.app.ca.mod2<-(glm(Freq ~ level*year+gender, prac.app.ca, family="poisson"))
anova(prac.app.ca.mod1, prac.app.ca.mod2, test = "Chi")
prac.app.ca.mod1<-(glm(Freq ~ level*year*gender, prac.app.ca, family="poisson"))
prac.app.ca.mod2<-(glm(Freq ~ level+year+gender, prac.app.ca, family="poisson"))
anova(prac.app.ca.mod1, prac.app.ca.mod2, test = "Chi")
prac.app.ca.mod1<-(glm(Freq ~ level+year*gender, prac.app.ca, family="poisson"))
prac.app.ca.mod2<-(glm(Freq ~ level+year+gender, prac.app.ca, family="poisson"))
anova(prac.app.ca.mod1, prac.app.ca.mod2, test = "Chi")
prac.app.ca.mod1<-(glm(Freq ~ level*gender+year, prac.app.ca, family="poisson"))
prac.app.ca.mod2<-(glm(Freq ~ level+year+gender, prac.app.ca, family="poisson"))
anova(prac.app.ca.mod1, prac.app.ca.mod2, test = "Chi")
head(part3.grants.long)
g.types<-subset(part3.grants.long, select=c("Location","Country",'Country_work', "gender", "number", "type.grant"))
canada<-g.types[g.types$Country_work=="Canada" | (!(g.types$Country_work=="Canada") &
g.types$Country_work=="" & g.types$Country=="Canada"),]
canada<-canada[!canada$gender=="Other",]
canada<-canada[!canada$gender=="",]
canada<-droplevels(canada)
head(canada)
## using table to count cases of each category
g.types.ca<-with(canada, data.frame(table(type.grant, gender, number)))
head(g.types.ca,20)
#clean up names
g.types.ca$type.grant<-revalue(g.types.ca$type.grant, c("external_pi_grant_11_15_applied"="Applied 2011-2015",
'external_pi_grant_11_15_fundamental'='Fundamental 2011-2015',
'external_pi_grant_11_15_use' = 'Use-Inspired 2011-2015',
"external_pi_grant_6_10_applied"="Applied 2006-2010",
"external_pi_grant_6_10_fundamental"="Fundamental 2006-2010",
"external_pi_grant_6_10_use"="Use-Inspired 2006-2010"))
head(g.types.ca)
#select only Applied
g.types.ca$type<-ifelse(grepl("Applied", g.types.ca$type.grant), "Applied", "")
head(g.types.ca)
#make a seperate column for both year and type
g.types.applied<-g.types.ca[!g.types.ca$type=="",]
levels(g.types.applied$number)
g.types.applied$type.grant<-as.character(g.types.applied$type.grant)
g.types.applied$year<-  str_split_fixed(g.types.applied$type.grant, ' ', 2)[,2]
#change order of levels
g.types.applied$number<-factor(g.types.applied$number, levels(g.types.applied$number)[c(1,2,6,7,3,4,5)])
head(g.types.applied)
g.types.applied.mod1<-(glm(Freq ~ number*year*gender, g.types.applied, family="poisson"))
summary(g.types.applied.mod1)
plot(g.types.applied.mod1)
g.types.applied.mod3<-(glm(Freq ~ number+year*gender, g.types.applied, family="poisson"))
summary(g.types.applied.mod2)
plot(g.types.applied.mod2)
g.types.applied.mod1<-(glm(Freq ~ number*gender+year, g.types.applied, family="poisson"))
g.types.applied.mod3<-(glm(Freq ~ number+year+gender, g.types.applied, family="poisson"))
anova(g.types.applied.mod1, g.types.applied.mod3, test="Chi")
ggplot(g.types.applied, aes(number, Freq)) + geom_point()
ggplot(g.types.applied, aes(number, Freq, col=gender, shape=gender)) + geom_point()
ggplot(g.types.applied, aes(number, Freq, col=gender, shape=year)) + geom_point()
g.types.applied.mod1<-(glm(Freq ~ number*gender*year, g.types.applied, family="poisson"))
g.types.applied.mod3<-(glm(Freq ~ number+year+gender, g.types.applied, family="poisson"))
anova(g.types.applied.mod1, g.types.applied.mod2, test="Chi")
