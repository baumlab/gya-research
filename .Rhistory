states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey.what$Country<-as.character(survey.what$Location)
survey.what$Country<-ifelse(survey.what$Country%in%states, 'USA', survey.what$Country)
survey.what$Country<-ifelse(survey.what$Country%in%prov, 'Canada', survey.what$Country)
survey.what$Country<-as.factor(survey.what$Country)
###saved
##############
#####Part1####
##############
## read in non-subsetted data again
survey<-read.csv("data/July-7-2016-7pm-Toronto_simplified.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
## 1. change all relevant variables to characters.......
survey$percent_Applied_Research_past<-as.character(survey$percent_Applied_Research_past)
survey$percent_Applied_Research_current<-as.character(survey$percent_Applied_Research_current)
survey$percent_fundemental_research_current<-as.character(survey$percent_fundemental_research_current)
survey$percent_Fundamental_Research_past<-as.character(survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_current<-as.character(survey$percent_Use_inspired_Research_current)
survey$percent_Use_inspired_Research_past<-as.character(survey$percent_Use_inspired_Research_past)
colnames(survey)
require(stringr)
## remove all % symbols
#survey$percent_Applied_Research_past<-str_replace_all(survey$percent_Applied_Research_past, "[%]", "")
survey$percent_Applied_Research_current<-str_replace_all(survey$percent_Applied_Research_current, "[%]", "")
survey$percent_Use_inspired_Research_current<-str_replace_all(survey$percent_Use_inspired_Research_current, "[%]", "")
survey$percent_fundemental_research_current<-str_replace_all(survey$percent_fundemental_research_current, "[%]", "")
#survey$percent_Fundamental_Research_past
#survey$percent_Use_inspired_Research_past
survey.type<-subset(survey, select=c("Location","Country",  "gender", "percent_fundemental_research_current", "percent_Applied_Research_current",
"percent_Use_inspired_Research_current"))
fundemental<-aggregate(Location ~ percent_fundemental_research_current, survey.type, length)
applied<-aggregate(Location ~ percent_Applied_Research_current, survey.type, length)
use<-aggregate(Location ~ percent_Use_inspired_Research_current, survey.type, length)
## everything's fixed. % are gone.
### now we are going to standardise the % for each survey
## 1. if every category is blank, turn to NA
head(survey.type, 20)
survey$percent_fundemental_research_current[survey.type$percent_fundemental_research_current=="" &
survey.type$percent_Applied_Research_current=="" & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey$percent_Applied_Research_current[is.na(survey.type$percent_fundemental_research_current) &
survey.type$percent_Applied_Research_current=="" & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey$percent_Use_inspired_Research_current[is.na(survey.type$percent_fundemental_research_current) &
is.na(survey.type$percent_Applied_Research_current) & survey.type$percent_Use_inspired_Research_current==""]<-NA
## 2. categories with answers and blanks, turn blanks to 0
survey$percent_fundemental_research_current[survey$percent_fundemental_research_current==""]<-0
survey$percent_Applied_Research_current[survey$percent_Applied_Research_current==""]<-0
survey$percent_Use_inspired_Research_current[survey$percent_Use_inspired_Research_current==""]<-0
survey<-survey[!is.na(survey$percent_fundemental_research_current),]
survey<-survey[!(survey$percent_fundemental_research_current==0 & survey$percent_Applied_Research_current==0 & survey$percent_Use_inspired_Research_current==0),]
## 3. Standardise % values > 100 in total
survey$percent_Applied_Research_current<-as.numeric(survey$percent_Applied_Research_current)
survey$percent_fundemental_research_current<-as.numeric(survey$percent_fundemental_research_current)
survey$percent_Use_inspired_Research_current<-as.numeric(survey$percent_Use_inspired_Research_current)
survey$total_research<-rowSums(survey[,4:6])
head(survey[survey$total_research>100,])
## need to change 64 surveys that are over 100%
survey$percent_Applied_Research_current<-ifelse(survey$total_research>100,(survey$percent_Applied_Research_current/survey$total_research)*100, survey$percent_Applied_Research_current)
survey$percent_fundemental_research_current<-ifelse(survey$total_research>100,(survey$percent_fundemental_research_current/survey$total_research)*100, survey$percent_fundemental_research_current)
survey$percent_Use_inspired_Research_current<-ifelse(survey$total_research>100,(survey$percent_Use_inspired_Research_current/survey$total_research)*100, survey$percent_Use_inspired_Research_current)
## switch to long format
require(tidyr)
survey.long<-gather(survey, type, percent, -Location, -gender, -Country)
#####do same as above but for past data
## read in non-subsetted data again
survey<-read.csv("data/July-7-2016-7pm-Toronto_simplified.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
## 1. change all relevant variables to characters.......
survey$percent_Applied_Research_past<-as.character(survey$percent_Applied_Research_past)
survey$percent_Applied_Research_current<-as.character(survey$percent_Applied_Research_current)
survey$percent_fundemental_research_current<-as.character(survey$percent_fundemental_research_current)
survey$percent_Fundamental_Research_past<-as.character(survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_current<-as.character(survey$percent_Use_inspired_Research_current)
survey$percent_Use_inspired_Research_past<-as.character(survey$percent_Use_inspired_Research_past)
colnames(survey)
require(stringr)
## remove all % symbols
survey$percent_Applied_Research_past<-str_replace_all(survey$percent_Applied_Research_past, "[%]", "")
#survey$percent_Applied_Research_current<-str_replace_all(survey$percent_Applied_Research_current, "[%]", "")
#survey$percent_Use_inspired_Research_current<-str_replace_all(survey$percent_Use_inspired_Research_current, "[%]", "")
#survey$percent_fundemental_research_current<-str_replace_all(survey$percent_fundemental_research_current, "[%]", "")
survey$percent_Fundamental_Research_past<-str_replace_all(survey$percent_Fundamental_Research_past, "[%]", "")
survey$percent_Use_inspired_Research_past<-str_replace_all(survey$percent_Use_inspired_Research_past, "[%]", "")
survey<-subset(survey, select=c("Location","Country",  "gender", "percent_Applied_Research_past", "percent_Fundamental_Research_past",
"percent_Use_inspired_Research_past"))
## everything's fixed. % are gone.
### now we are going to standardise the % for each survey
## 1. if every category is blank, turn to NA
head(survey, 20)
survey$percent_Fundamental_Research_past[survey$percent_Fundamental_Research_past=="" &
survey$percent_Applied_Research_past=="" & survey$percent_Use_inspired_Research_past==""]<-NA
survey$percent_Applied_Research_past[is.na(survey$percent_Fundamental_Research_past) &
survey$percent_Applied_Research_past=="" & survey$percent_Use_inspired_Research_past==""]<-NA
survey$percent_Use_inspired_Research_past[is.na(survey$percent_Fundamental_Research_past) &
is.na(survey$percent_Applied_Research_past) & survey$percent_Use_inspired_Research_past==""]<-NA
## 2. categories with answers and blanks, turn blanks to 0
survey$percent_Fundamental_Research_past[survey$percent_Fundamental_Research_past==""]<-0
survey$percent_Applied_Research_past[survey$percent_Applied_Research_past==""]<-0
survey$percent_Use_inspired_Research_past[survey$percent_Use_inspired_Research_past==""]<-0
survey<-survey[!is.na(survey$percent_Fundamental_Research_past),]
survey<-survey[!(survey$percent_Fundamental_Research_past==0 & survey$percent_Applied_Research_past==0 & survey$percent_Use_inspired_Research_past==0),]
## 3. Standardise % values > 100 in total
survey$percent_Applied_Research_past<-as.numeric(survey$percent_Applied_Research_past)
survey$percent_Fundamental_Research_past<-as.numeric(survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_past<-as.numeric(survey$percent_Use_inspired_Research_past)
survey$total_research<-rowSums(survey[,4:6])
head(survey[survey$total_research>100,])
## need to change 64 surveys that are over 100%
survey$percent_Applied_Research_past<-ifelse(survey$total_research>100,(survey$percent_Applied_Research_past/survey$total_research)*100, survey$percent_Applied_Research_past)
survey$percent_Fundamental_Research_past<-ifelse(survey$total_research>100,(survey$percent_Fundamental_Research_past/survey$total_research)*100, survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_past<-ifelse(survey$total_research>100,(survey$percent_Use_inspired_Research_past/survey$total_research)*100, survey$percent_Use_inspired_Research_past)
head(survey[survey$total_research>100,])
## switch to long format
require(tidyr)
survey.long.past<-gather(survey, type_past, percent_past, -Location, -gender, -Country)
#### yes/no have the portions changed and why
#read in non subsetted data again
survey<-read.csv("data/July-7-2016-7pm-Toronto_simplified.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
survey.change<-subset(survey, select=c("Location","Country",  "gender", "changed_10yrs", "Main_reason_change_interest_related",
"Main_reason_change_Career_related", "Main_reason_change_Funding_related","Main_reason_change_Socially_related",
"Main_reason_change_Other"))
#############
####Part4####
#############
#read in non subsetted data again
survey<-read.csv("data/July-7-2016-7pm-Toronto_simplified.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
colnames(survey)
states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
survey.part4<-subset(survey, select=c("Location","Country", "gender","opinion_fundamental_important",
"high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change", "available_funding_fundamental", "available_funding_use_inspired", "available_funding_applied",
"next_generation"))
############ save file as csv#############################
write.csv(survey.what, file="data/gya-country-responses.csv")
write.csv(survey.long, file="data/gya-surveys-cleaned-research.csv")
write.csv(survey.long.past, file="data/gya-surveys-cleaned-research-past.csv")
write.csv(survey.change, file="data/gya-change-reason.csv")
write.csv(survey.part4, file="data/gya-survey-part4")
### Script for making first figures for Canada GYA surveys
## Read in and explore the GYA data
setwd("/Users/jpwrobinson/Documents/git_repos/gya-research")
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4")
################################
#### Summary statistics ########
################################
require(ggplot2)
## change default background
theme_set(theme_bw())
## aggregate data for plotting
survey.table<-table(survey.what$Country,survey.what$gender)
gender<-aggregate(Location ~ gender, survey.what, length)
country_work<-aggregate(gender ~ Country_work, survey.what, length)
country_work
## plot countries with number of responses
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses",x="")  +
geom_text(aes(label=gender), hjust=-0.25, angle=90,size=3) +
geom_text(aes(label=Country_work), angle=90, hjust=-1,size=3) + lims(y=c(0, 1450)) + theme(axis.ticks.x=element_blank())
## add a line that saves the plots in a pdf
pdf(file="figures/first_survey_responses.pdf", height=7, width=11)
###############
####Part5#####
###############
##1 # of responses by country
locations<-aggregate(gender ~ Country, survey.what, length)
locations
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses", x="")  +
geom_text(aes(label=gender), vjust=-0.25, hjust=0.25) +
geom_text(aes(label=Country_work), angle=90, hjust=-0.5) + lims(y=c(0, 1300)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=14), axis.title=element_text(size=16)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##2a # of responses by field research
field<-aggregate(Location ~ field_research, survey.what, length)
ggplot(field, aes(x = reorder(field_research, -Location), Location, fill=field_research)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses",x="")  + scale_fill_discrete(name="Field of Research") +
geom_text(aes(label=Location), vjust=-0.25) + theme(legend.position=c(0.78, 0.7)) + theme(legend.title=element_text(size=12), legend.text=element_text(size=10), axis.text=element_text(size=14),
axis.title=element_text(size=14)) + guides(fill=guide_legend(reverse=TRUE)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##2b # of responses by field research for canada
canada<-subset(survey.what, Country=="Canada")
field<-aggregate(Location ~ field_research, canada, length)
ggplot(field, aes(x = reorder(field_research, -Location), Location, fill=field_research)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses",x="")  + scale_fill_discrete(name="Field of Research") +
geom_text(aes(label=Location), vjust=-0.25) + theme(legend.position=c(0.85, 0.75)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=14), axis.title=element_text(size=16))+
guides(fill=guide_legend(reverse=TRUE)) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##############
####Part1#####
##############
##3a # of responses by participant group
experience<-aggregate(Location ~ what_participant_group, survey.what, length)
ggplot(experience, aes(x = reorder(what_participant_group, -Location), Location, fill=what_participant_group)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
labs(y="Number of responses", x="") +  theme(legend.position="bottom") + theme(axis.text.x=element_blank()) +
geom_text(aes(label=Location),size=4, vjust=-0.25) + guides(fill=guide_legend(title=NULL, reverse=TRUE, nrow=6)) + scale_fill_discrete(name="Participant Group") +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10), axis.text=element_text(size=14),
axis.title=element_text(size=14))+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##3b # of responses by participant group for canada
canada<-subset(survey.what, Country=="Canada")
experience<-aggregate(Location ~ what_participant_group, canada, length)
ggplot(experience, aes(x = reorder(what_participant_group, -Location), Location, fill=what_participant_group)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
labs(y="Number of responses", x="") +  theme(legend.position="bottom") + theme(axis.text.x=element_blank()) +
geom_text(aes(label=Location),size=4, vjust=-0.25)+ guides(fill=guide_legend(title=NULL, reverse=TRUE, nrow=6)) + scale_fill_discrete(name="Participant Group") +
theme(legend.title=element_text(size=12), legend.text=element_text(size=10), axis.text=element_text(size=14), axis.title=element_text(size=16))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
#################################
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.wo.total<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current"))
##4a box plot of percent of each type of research by field
ggplot(research.wo.total, aes(type, percent, fill=type)) + geom_boxplot() + theme(axis.text.x = element_blank()) +
theme(axis.title.x = element_blank())
#4b   average bar plots
type.avg<-aggregate(percent~ type + Country, research.wo.total, mean)
ggplot(type.avg, aes(Country, percent)) + geom_bar(stat="identity", aes(fill=factor(type))) + theme(axis.text.x = element_text(angle=90, vjust=0.5))
##4c canada
canada<-subset(research, Country=="Canada")
summary(canada)
ggplot(research.wo.total, aes(type, percent, fill=type)) + geom_boxplot()
##### now for past#####
## 5a Change in type of research in the last 10yrs
research.change<-read.csv(file="data/gya-change-reason.csv")
yes.no<-subset(research.change, select=c("Location","Country",  "gender", "changed_10yrs"))
## using table to count cases of each category
sum.yesno<-data.frame(table(yes.no$changed_10yrs))
# remove non-response
sum.yesno<-sum.yesno[!sum.yesno$Var1=="",]
ggplot(data=sum.yesno, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity') + guides(fill=FALSE)
# 5b  for countries
country.sum.yesno<-data.frame(table(yes.no$changed_10yrs, yes.no$Country))
# remove non-response
country.sum.yesno<-country.sum.yesno[!country.sum.yesno$Var1=="",]
head(country.sum.yesno)
ggplot(data=country.sum.yesno, aes(x=Var1, y=Freq, fill=Var2)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(data=country.sum.yesno, aes(x=Var2, y=Freq, fill=Var1)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle=90, vjust=0.5))
#####
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.wo.past.total<-subset(research.past, type_past%in%c("percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
## 6a type of research in the past  box
ggplot(research.wo.past.total, aes(type_past, percent_past, fill=type_past)) + geom_boxplot() + theme(axis.text.x = element_blank()) +
theme(axis.title.x = element_blank())
## 6b Type of research in the past  bar
type.avg.past<-aggregate(percent_past~ type_past + Country, research.wo.past.total, mean)
ggplot(type.avg.past, aes(Country, percent_past)) + geom_bar(stat="identity", aes(fill=factor(type_past))) + theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 6c  Canada
canada<-subset(research.change, Country=="Canada")
summary(canada)
ggplot(research.wo.past.total, aes(type_past, percent_past, fill=type_past)) + geom_boxplot()
## 7a  Reason for change
research.change<-read.csv(file="data/gya-change-reason.csv")
reason<-subset(research.change, select=c("Location","Country",  "gender", "Main_reason_change_interest_related",
"Main_reason_change_Career_related", "Main_reason_change_Funding_related","Main_reason_change_Socially_related",
"Main_reason_change_Other"))
## switch to long format
require(tidyr)
reason.long<-gather(reason, reason.change, yes, -Location, -gender, -Country)
sum.reason<-data.frame(table(reason.long$reason.change, reason.long$yes))
head(sum.reason)
ggplot(data=sum.reason, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=90, vjust=0.5)) +guides(fill=FALSE)
## 7b canada
research.change<-read.csv(file="data/gya-change-reason.csv")
reason<-subset(research.change, select=c("Location","Country",  "gender", "Main_reason_change_interest_related",
"Main_reason_change_Career_related", "Main_reason_change_Funding_related","Main_reason_change_Socially_related",
"Main_reason_change_Other"))
canada<-subset(reason, Country=="Canada")
## switch to long format
require(tidyr)
canada.long<-gather(canada, reason.change.ca, yes.ca, -Location, -gender, -Country)
## using table to count cases of each category
sum.canada<-data.frame(table(canada.long$reason.change.ca, canada.long$yes.ca))
# remove non-response
sum.canada<-sum.canada[!sum.canada$Var1=="",]
ggplot(sum.canada, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=90, vjust=0.5)) +guides(fill=FALSE)
###############
####Part4######
###############
part4<-read.csv(file="data/gya-survey-part4")
colnames(part4)
## 8a  fundamental research important to your gov in your country
important<-subset(part4, select=c("Location","Country", "gender","opinion_fundamental_important"))
## using table to count cases of each category
sum.important<-data.frame(table(important$opinion_fundamental_important))
# remove non-response
sum.important<-sum.important[!sum.important$Var1=="",]
ggplot(data=sum.important, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 8b  Canada
important<-subset(part4, select=c("Location","Country", "gender","opinion_fundamental_important"))
canada<-subset(important, Country=="Canada")
## using table to count cases of each category
sum.important<-data.frame(table(canada$opinion_fundamental_important))
# remove non-response
sum.important<-sum.important[!sum.important$Var1=="",]
ggplot(data=sum.important, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##8c  countries
country.sum.important<-data.frame(table(important$opinion_fundamental_important, important$Country))
# remove non-response
country.sum.important<-country.sum.important[!country.sum.important$Var1=="",]
head(country.sum.important)
ggplot(data=country.sum.important, aes(x=Var1, y=Freq, fill=Var2)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(data=country.sum.important, aes(x=Var2, y=Freq, fill=Var1)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 9a  What type of research is higher priority for your gov
priority<-subset(part4, select=c("Location","Country", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
## switch to long format
require(tidyr)
priority.long<-gather(priority, what.type, higher.priority, -Location, -gender, -Country)
head(priority.long)
#high.priority<-aggregate(higher.priority~ what.type, priority.long, length)
high.priority<-aggregate(higher.priority~ what.type, priority.long, sum)
ggplot(data=high.priority, aes(x=what.type, higher.priority, fill=what.type)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 9c  countries
country.high.priority<-aggregate(higher.priority~ what.type + Country, priority.long, sum)
ggplot(data=country.high.priority, aes(x=Country, y=higher.priority, fill=what.type)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 9b Canada
priority<-subset(part4, select=c("Location","Country", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-subset(priority, Country=="Canada")
## switch to long format
require(tidyr)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country)
head(priority.long)
high.priority<-aggregate(higher.priority~ what.type, priority.long, sum)
ggplot(data=high.priority, aes(x=what.type, higher.priority, fill=what.type)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
######10a  Availiability of research funding will change in your country of work in the next 5 yrs
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
## switch to long format
require(tidyr)
availiability.change.long<-gather(availiability.change, what.type, level, -Location, -gender, -Country)
head(availiability.change.long)
availiability<-aggregate(gender~what.type+level,
availiability.change.long,length)
# remove non-response
availiability<-availiability[!availiability$level=="",]
ggplot(data=availiability, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##10b countries
availiability.cont<-aggregate(gender~what.type+level+Country,
availiability.change.long,length)
# remove non-response
availiability.cont<-availiability.cont[!availiability.cont$level=="",]
ggplot(data=availiability.cont, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5)) + facet_wrap(~ Country)
###subset out the countries with more than ~5 responses
########################not done###################
##################################################
##################################################
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
head(availiability.change)
#five.countries<-subset(availiability.change, Country=="USA","United Kingdom","Canada","Israel","Italy")
###10c-Canada
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availiability.change, Country=="Canada")
## switch to long format
require(tidyr)
availiability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
head(availiability.change.long)
availiability.ca<-aggregate(gender~what.type+level,
availiability.change.long.ca,length)
head(availiability.ca)
# remove non-response
availiability.ca<-availiability.ca[!availiability.ca$level=="",]
ggplot(data=availiability.ca, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##11a changes in funding influence the next generation
next.generation<-subset(part4, select=c("Location", "Country", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
impact<-aggregate(gender~ next_generation, next.generation, length)
head(impact)
ggplot(data=impact, aes(x=next_generation, gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##11b countries
country.impact<-aggregate(gender~ next_generation + Country, next.generation, length)
# remove non-response
country.impact<-country.impact[!country.impact$next_generation=="",]
ggplot(data=country.impact, aes(x=Country, y=gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##11c Canada
next.generation<-subset(part4, select=c("Location", "Country", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
canada<-subset(next.generation, Country=="Canada")
head(canada)
impact<-aggregate(gender~ next_generation, canada, length)
head(impact)
ggplot(data=impact, aes(x=next_generation, gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
###############
####Part2######
###############
###############
####Part3######
###############
dev.off()
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.wo.total<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current"))
type.avg<-aggregate(percent~ type + Country, research.wo.total, mean)
canada<-subset(research, Country=="Canada")
summary(canada)
g1<-ggplot(research.wo.total, aes(type, percent, fill=type)) + geom_boxplot()
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.wo.total<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current"))
type.avg<-aggregate(percent~ type + Country, research.wo.total, mean)
warnings()
head(research.wo.total)
str(research.wo.total)
research.wo.total$percent<-as.numeric(as.character(research.wo.total$percent))
type.avg<-aggregate(percent~ type + Country, research.wo.total, mean)
canada<-subset(research, Country=="Canada")
g1<-ggplot(research.wo.total, aes(type, percent, fill=type)) + geom_boxplot()
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.wo.past.total<-subset(research.past, type_past%in%c("percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
type.avg.past<-aggregate(percent_past~ type_past + Country, research.wo.past.total, mean)
canada<-subset(research.change, Country=="Canada")
summary(canada)
g2<-ggplot(research.wo.past.total, aes(type_past, percent_past, fill=type_past)) + geom_boxplot()
grid.arrange(g1, g2)
grid.arrange(g1, g2)
grid.arrange(g1, g2)
require(gridExtra); require(tidyr); require(ggplot2); require(stringr)
grid.arrange(g1, g2)
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
yes.no<-subset(research.change, select=c("Location","Country",  "gender", "changed_10yrs"))
## using table to count cases of each category
sum.yesno<-data.frame(table(yes.no$changed_10yrs))
# remove non-response
sum.yesno<-sum.yesno[!sum.yesno$Var1=="",]
ggplot(data=sum.yesno, aes(x=Var1, y=Freq, fill=Var1)) + geom_bar(stat='identity') + guides(fill=FALSE)
country.sum.yesno<-data.frame(table(yes.no$changed_10yrs, yes.no$Country))
# remove non-response
country.sum.yesno<-country.sum.yesno[!country.sum.yesno$Var1=="",]
head(country.sum.yesno)
ggplot(data=country.sum.yesno, aes(x=Var1, y=Freq, fill=Var2)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle=90, vjust=0.5))
ggplot(data=country.sum.yesno, aes(x=Var2, y=Freq, fill=Var1)) + geom_bar(stat='identity') +  theme(axis.text.x = element_text(angle=90, vjust=0.5))
canada<-subset(yes.no, Country=="Canada")
yes.no
research.change<-read.csv(file="data/gya-change-reason.csv")
yes.no<-subset(research.change, select=c("Location","Country",  "gender", "changed_10yrs"))
canada<-subset(yes.no, Country=="Canada")
yes.no
research.change<-read.csv(file="data/gya-change-reason.csv")
yes.no<-subset(research.change, select=c("Location","Country",  "gender", "changed_10yrs"))
canada<-subset(yes.no, Country=="Canada")
yes.no
canada
canada.yesno<-aggregate(changed_10yrs~ Country, canada, lenght)
canada.yesno<-aggregate(changed_10yrs~ Country, canada, length)
head(canada.yesno)
canada.yesno<-aggregate(Country~ changed_10yrs, canada, length)
head(canada.yesno)
ggplot(data=canada.yesno, aes(x=changed_10yrs, y=country, fill=country))+ geom_bar(stat='identity') + guides(fill=FALSE)
canada.yesno<-aggregate(Country~ changed_10yrs, canada, length)
ggplot(data=canada.yesno, aes(x=changed_10yrs, y=Country, fill=Country))+ geom_bar(stat='identity') + guides(fill=FALSE)
canada.yesno<-canada.yesno[!canada.yesno$changed_10yrs=="",]
ggplot(data=canada.yesno, aes(x=changed_10yrs, y=Country, fill=Country))+ geom_bar(stat='identity') + guides(fill=FALSE)
