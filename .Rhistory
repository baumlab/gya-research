range(fulmar$y_km)
plotMap(world_UTM31, xlim=c(-500, 1200), ylim=c(5000, 7000), col="lightgrey")
with(fulmar, points(x_km, y_km, cex=0.25))
#improve the plot
require(ggplot2)
xlim<-c(-0, 1000)
ylim<-c(5500, 6500)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
head(ncp.grid)
p<-p+geom_tile(aes(x,y, color=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
head(ncp.grid)
p<-p+geom_tile(aes(x,y, color=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-p+geom_tile(aes(x,y, color=depth, fill=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
head(ncp.grid)
p<-p+geom_tile(aes(x,y, color=depth, fill=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="steelblue3", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="red", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="red", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
require(colorspace)
pal<-sequential_hcl(n=2,l=(95.50))                       #default is 30,90
p<-p+scale_color_gradient(color=pal)
p<-p+scale_fill_gradientn(color=pal)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=(95.50))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=(95,50))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=(95,50))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
pal<-sequential_hcl(n=2,l=c(95,50), c=c(0,80))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
pal<-sequential_hcl(n=2,l=c(95,50), c=c(0,30))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
xlim<-c(250, 800)
ylim<-c(5600, 6250)
pal<-sequential_hcl(n=2,l=c(95,50), c=c(0,30))                       #default is 30,90
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=coast, fill=coast), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
p<-ggplot(fulmar)
head(ncp.grid)
ncp.grid$x_km<-ncp.grid$x/1000
ncp.grid$y_km<-ncp.grid$y/1000
p<-p+geom_tile(aes(x_km,y_km, color=depth, fill=depth), ncp.grid)
p<-p+scale_color_gradientn(colors=pal)
p<-p+scale_fill_gradientn(colors=pal)
p<-p+geom_point(aes(x_km, y_km, size=fulmar), shape=1)
p<-p+facet_wrap(~year)
#p<-p+coord_equal(ratio=1)                                              #corrected aspect ratio - made 1 km =1km
p<-p+coord_fixed(xlim=xlim, ylim=ylim)                                 #or you could do this method
p<-p+geom_polygon(aes(X,Y, group=PID), world_UTM31, fill="lightgrey", color="black", size=0.1)
p<-p+xlab("Easting [km]")+ylab("Northing [km]")
p<-p+labs(size="birds/km^2")
p<-p+scale_size_continuous(0:3)
p<-p+theme_bw()
p<-p+geom_point(aes(x_km, y_km, size=fulmar), size=0.2, shape=4, color="palegreen2", data=fulmar[fulmar$fulmar==0,])
quartz(width = 10, height = 6)
print(p)
As of `r date()`, `r dim(survey.what)[1]` surveys from `r length(unique(survey.what$Country_work))` countries have been completed.
The majority of surveys were completed by researchers based in Canada (n = `r country_work$gender[country_work$Country_work=="Canada"]`) (n= `survey[survey$Country_work=="Canada" | (!(survey$Country_work=="Canada") & survey$Country_work=="" & survey$Country=="Canada"),] ` ), followed by Israel (n = `r country_work$gender[country_work$Country_work=="Israel"]`) then by the UK (n = `r country_work$gender[country_work$Country_work=="United Kingdom"]`) and the USA (n = `r country_work$gender[country_work$Country_work=="United States"]`). `r country_work$gender[country_work$Country_work==""]` surveys did not identify their place of work.
install.packages("phyloseq")
install.packages("qdap")
install.packages("phyloseq")
source("https://bioconductor.org/biocLite.R")
biocLite("phyloseq")
install.packages("slam")
?slam
??slam
?"slam"
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
## read data
survey.all<-read.csv("data/Survey-Responses-Oct.3.850pm-Toronto.csv", header=TRUE)
suveycols<-c("Status","Location"	,"what_participant_group",
"percent_fundemental_research_current",	"percent_Use_inspired_Research_current"	,
"percent_Applied_Research_current",	"changed_10yrs",	"percent_Fundamental_Research_past"	,
"percent_Use_inspired_Research_past",	"percent_Applied_Research_past",	"Main_reason_change_interest_related",
"Main_reason_change_Career_related",	"Main_reason_change_Funding_related",	"Main_reason_change_Socially_related",
"Main_reason_change_Other",	"Main_reason_change_Other_text",	"view_change_of_type",
"partnership_outside",	"partnership_change_10yrs",	"partnership_outside_before",
"reason_partnership_change_interest",	"reason_partnership_change_career",	"reason_partnership_change_socially",
"reason_partnership_change_funding",	"reason_partnership_change_other",	"reason_partnership_change_other_text",
"view_change_partnership",	"external_pi_grant_11_15_fundamental",	"external_pi_grant_11_15_use",
"external_pi_grant_11_15_applied","external_pi_grant_6_10_fundamental",	"external_pi_grant_6_10_use",
"external_pi_grant_6_10_applied",	"successful_grants_11_15_fundamental",	"successful_grants_11_15_use",
"successful_grants_11_15_applied",	"successful_grants_6_10_fundamental",	"successful_grants_6_10_use",
"successful_grants_6_10_applied",	"practical_applications_important_11_15",	"practical_applications_important_6_10",
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10",
"distribution_funding_11_15_internal",	"distriution_funding_11_15_government",	"distriution_funding_11_15_for_profit",
"distriution_funding_11_15_nongov",	"distriution_funding_11_15_other",	"distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal",	"distriution_funding_6_10_government",	"distriution_funding_6_10_for_profit",
"distriution_funding_6_10_nongov",	"distriution_funding_6_10_other",	"distriution_funding_6_10_other_text",
"success_change_10yrs_fundamental",	"success_change_10yrs_use",	"success_change_10yrs_applied",
"opinion_fundamental_important",	"high_priority_fundamental",	"high_priority_use_inspired",
"high_priority_applied",	"high_priority_no_change",	"high_priority_comments",	"available_funding_fundamental",
"available_funding_use_inspired",	"available_funding_applied",	"next_generation",	"next_generation_Comments",
"field_research",	"PhD_Year",	"Country_work",	"gender")
## remove some unnecessary columns
survey.all$'Username'<-NULL
survey.all$'Updated_At'<-NULL
survey.all$'Number_of_Saves'<-NULL
survey.all$'Internal_ID'<-NULL
survey.all$'Language'<-NULL
survey.all$'Created_At'<-NULL
survey.all$'GET_Variables'<-NULL
survey.all$'Referrer'<-NULL
survey.all$'Weighted_Score'<-NULL
survey.all$'Completion_Time'<-NULL
survey.all$'IP_Address'<-NULL
survey.all$'Invite_Code'<-NULL
survey.all$'Invite_Email'<-NULL
survey.all$'Invite_Name'<-NULL
survey.all$'Collector'<-NULL
survey.all$'final_comments'<-NULL
##change column names
colnames(survey.all)<-suveycols
## check number of complete vs. incomplete
table(survey.all$Status)
### keep complete data only
survey<-survey.all[survey.all$Status=="Complete",]
dim(survey)
### change Canada and USA
states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
write.csv(survey, file="data/gya-without-incomplete.csv", row.names=FALSE)
#how many of each
colnames(survey)
Canada<-survey[survey$Country_work=="Canada" | (!(survey$Country_work=="Canada") &
survey$Country_work=="" & survey$Country=="Canada"),]
gender<-table(Canada$gender)
gender
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
part2<-subset(survey, select=c("Country","Country_work", "gender","what_participant_group"  , "field_research", "Location", "partnership_outside", "partnership_change_10yrs",
"partnership_outside_before", "reason_partnership_change_interest", "reason_partnership_change_career",
"reason_partnership_change_socially",  "reason_partnership_change_funding", "reason_partnership_change_other",
"view_change_partnership"))
#### level of partnership that your reserach currently has outside of academia before and after
part2.b.a<-subset(part2, select=c("Country","Country_work", "gender","what_participant_group"  , "field_research", "Location", "partnership_outside","partnership_outside_before"))
#remove non responses
part2.b.a<-part2.b.a[!part2.b.a$partnership_outside=="",]
part2.b.a<-part2.b.a[!part2.b.a$partnership_outside_before=="",]
head(part2.b.a)
colnames(part2.b.a)
table.b.a<-data.frame(table(part2.b.a$partnership_outside, part2.b.a$partnership_outside_before))
table.b.a
table.b.a<-data.frame(table(part2.b.a$partnership_outside))
table.b.a
table.b.a.b<-data.frame(table(part2.b.a$partnership_outside_before))
table.b.a.b
head(a.part)
b.part<-aggregate(gender~  partnership_outside_before, part2.b.a, length)
colnames(b.part)[1]<-"partnership_outside"
b.part$time<-"Past"
a.part<-aggregate(gender~ partnership_outside, part2.b.a, length)
a.part$time<-"Current"
part<-rbind(a.part, b.part)
# change order of the levels
part$partnership_outside<-as.factor(part$partnership_outside)
part$partnership_outside<-factor(part$partnership_outside, levels(part$partnership_outside)[c(1,4,3,2)])
ggplot() +
geom_bar(data=part, aes(x=partnership_outside, y=gender, fill = time), stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Number of Responses", fill="")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
require(ggplot2)
ggplot() +
geom_bar(data=part, aes(x=partnership_outside, y=gender, fill = time), stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Number of Responses", fill="")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
canada<-part2.b.a[part2.b.a$Country_work=="Canada" | (!(part2.b.a$Country_work=="Canada") &
part2.b.a$Country_work=="" & part2.b.a$Country=="Canada"),]
table.b.a<-data.frame(table(canada$partnership_outside))
table.b.a
table.b.a.b<-data.frame(table(canada$partnership_outside_before))
table.b.a.b
colnames(part2.reason)
part2.reason<-subset(part2, select=c("Country","Country_work", "gender","what_participant_group", "field_research", "Location","reason_partnership_change_interest", "reason_partnership_change_career",
"reason_partnership_change_socially",  "reason_partnership_change_funding", "reason_partnership_change_other"))
colnames(part2.reason)
table.2.reason<-data.frame(table(part2.reason$reason_partnership_change_interest))
table.2.reason
table.2.reason<-data.frame(table(part2.reason$reason_partnership_change_interest, part2.reason$reason_partnership_change_other))
table.2.reason
table.2.reason<-data.frame(table(part2.reason$reason_partnership_change_interest& part2.reason$reason_partnership_change_other))
table.2.reason
table.2.reason<-data.frame(table(part2.reason$reason_partnership_change_interest| part2.reason$reason_partnership_change_other))
table.2.reason
table.2.reason<-data.frame(table(part2.reason$reason_partnership_change_interest))
table.2.reason
require(tidyr)
reason.pt.long<-gather(part2.reason, change.reason, yes, -Country, -gender, -Location, -what_participant_group, -field_research, -Country_work)
unique(reason.pt.long$change.reason)
sum.reason<-data.frame(table(reason.pt.long$change.reason, reason.pt.long$yes))
ggplot(data=sum.reason, aes(x=reorder(Var1, -Freq), y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=0, vjust=0.5)) + guides(fill=FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+labs(title= "Reason for Change", x="", y="Number of Responses")+
scale_x_discrete(labels=c("Funding Related", "Interest Related", "Career Related", "Socially Related", "Other"))
canada<-part2.reason[part2.reason$Country_work=="Canada" | (!(part2.reason$Country_work=="Canada") &
part2.reason$Country_work=="" & part2.reason$Country=="Canada"),]
table.2.reason<-data.frame(table(canada$reason_partnership_change_interest))
table.2.reason
table.2.reason<-data.frame(table(canada$reason_partnership_change_funding))
table.2.reason
table.2.reason<-data.frame(table(canada$reason_partnership_change_other))
table.2.reason
table.2.reason<-data.frame(table(canada$reason_partnership_change_career))
table.2.reason
table.2.reason<-data.frame(table(canada$reason_partnership_change_social))
table.2.reason
g.careerstage<-table(Canada$gender, Canada$what_participant_group)
g.careerstage
Canada$what_participant_group<-revalue(Canada$what_participant_group, c("Senior academic researcher with >10 years of experience applying for research grants"="Senior academic >10 yrs",
'Non-academic researcher conducting or managing research in industry or government with >10 years of experience'='Non-academic >10yrs',
'Early career academic researcher with <10 years experience applying for research grants since completion of PhD' = 'Early academic <10yrs',
'Postdoctoral fellow or research assistant with experience applying for research grants, or anticipating the need to apply for grants in the near future'="Post doc",
'Non-academic researcher conducting or managing research in industry or government with <10 years of experience'='Non-academic <10yrs'))
g.careerstage<-table(Canada$gender, Canada$what_participant_group)
g.careerstage
require(gridExtra); require(tidyr); require(ggplot2); require(stringr);require(RColorBrewer); require(colorRamps); require(plotrix); require(plyr); require(visreg); require(DirichletReg); require(rgl); require(dr); require(betareg)
Canada$what_participant_group<-revalue(Canada$what_participant_group, c("Senior academic researcher with >10 years of experience applying for research grants"="Senior academic >10 yrs",
'Non-academic researcher conducting or managing research in industry or government with >10 years of experience'='Non-academic >10yrs',
'Early career academic researcher with <10 years experience applying for research grants since completion of PhD' = 'Early academic <10yrs',
'Postdoctoral fellow or research assistant with experience applying for research grants, or anticipating the need to apply for grants in the near future'="Post doc",
'Non-academic researcher conducting or managing research in industry or government with <10 years of experience'='Non-academic <10yrs'))
g.careerstage<-table(Canada$gender, Canada$what_participant_group)
g.careerstage
g.dicipline<-table(Canada$gender, Canada$field_research)
g.careerstage<-table(Canada$what_participant_group)
g.careerstage
colnames(survey)
Canada<-survey[survey$Country_work=="Canada" | (!(survey$Country_work=="Canada") &
survey$Country_work=="" & survey$Country=="Canada"),]
g.careerstage<-table(Canada$what_participant_group)
g.careerstage
Canada$what_participant_group<-revalue(Canada$what_participant_group, c("Senior academic researcher with >10 years of experience applying for research grants"="Senior academic >10 yrs",
'Non-academic researcher conducting or managing research in industry or government with >10 years of experience'='Non-academic >10yrs',
'Early career academic researcher with <10 years experience applying for research grants since completion of PhD' = 'Early academic <10yrs',
'Postdoctoral fellow or research assistant with experience applying for research grants, or anticipating the need to apply for grants in the near future'="Post doc",
'Non-academic researcher conducting or managing research in industry or government with <10 years of experience'='Non-academic <10yrs'))
g.careerstage<-table(Canada$what_participant_group)
g.careerstage
