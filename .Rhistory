colScale <- scale_fill_manual(name = "time",values = myColors)
ggplot(grants.ca, aes(number, Freq, fill=time)) +
geom_bar(stat="identity", position = "dodge")+
facet_wrap(~type.grant, nrow=3) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="No. of grant applications", y="No. of responses")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=12, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.8, 0.2)) + colScale
canada<-part3.prac.long[part3.prac.long$Country_work=="Canada" | (!(part3.prac.long$Country_work=="Canada") & part3.prac.long$Country_work=="" & part3.prac.long$Country=="Canada"),]
canada$year<-as.character(canada$year)
canada$year[canada$year=="practical_applications_important_11_15"]<-"2011-2015"
canada$year[canada$year=="practical_applications_important_6_10"]<-"2006-2010"
prac.ca<-data.frame(table(canada$year, canada$level))
#change order of levels
prac.ca$Var2<-factor(prac.ca$Var2, levels(prac.ca$Var2)[c(2,6,4,5,3,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
ggplot(prac.ca, aes(Var2, Freq, fill=Var1)) +
geom_bar(stat="identity", position = "dodge")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position=c(0.8, 0.8),
axis.text.x = element_text(angle=0, vjust=0.5)) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="", y="No. of responses")+ colScale
canada<-p3_master.long[p3_master.long$Country_work=="Canada" | (!(p3_master.long$Country_work=="Canada") & p3_master.long$Country_work=="" & p3_master.long$Country=="Canada"),]
canada$year<-revalue(c("11_15"="2011-2015", "6_10"="2006-2010"))
myColors<-(brewer.pal(9, "Blues"))
myColors<-rev(myColors[c(9, 5)])
colScale <- scale_fill_manual(name = "year",values = myColors)
ggplot(canada, aes(percent, fill=year))+ geom_histogram(position='dodge', binwidth=25)  +
facet_wrap(~type, nrow=5) + colScale +
guides(fill=guide_legend(title=NULL)) +
theme(legend.position=c(0.9, 0.08),
strip.text.y = element_text(size=14, face="bold", color="black"),
legend.key.size = unit(0.3, "cm"),
strip.background = element_rect(colour="white", fill="white")) +
labs(x="% research funding", y = "Frequency")
canada<-part3.change[part3.change$Country_work=="Canada" | (!(part3.change$Country_work=="Canada") & part3.change$Country_work=="" & part3.change$Country=="Canada"),]
##switch to long format
change.long.ca<-gather(canada, type, level, -Location, -gender, -Country, -Country_work)
gender.change<-with(change.long.ca, data.frame(table(type, level)))
#remove no response
#dim(gender.change[!gender.change$level=="",])
## 18 no responses
gender.change<-gender.change[!gender.change$level=="",]
# turn to percents
#male<-subset(gender.change, gender=="Male")
#female<-subset(gender.change, gender=="Female")
#other<-subset(gender.change, gender=="Other")
#gender.change$Location<-ifelse(gender.change$gender=="Male", (gender.change$Location/sum(male$Location))*100, gender.change$Location)
#gender.change$Location<-ifelse(gender.change$gender=="Female", (gender.change$Location/sum(female$Location))*100, gender.change$Location)
#gender.change$Location<-ifelse(gender.change$gender=="Other", (gender.change$Location/sum(other$Location))*100, gender.change$Location)
# change type to factor with levels
gender.change$type<-as.factor(gender.change$type)
gender.change$level<-str_replace_all(gender.change$level, "Will", "")
gender.change$level<-as.factor(gender.change$level)
# add colour palette
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 6, 3)])
colScale <- scale_fill_manual(name = "type",values = myColors, labels=c("Fundamental", "Use-inspired", "Applied"))
#change order of levels
gender.change$level<-factor(gender.change$level, levels(gender.change$level)[c(1,3,2,6,4,5)])
gender.change$type<-factor(gender.change$type, levels(gender.change$type)[c(2,1,3)])
gender.change$type<-revalue(gender.change$type, c("success_change_10yrs_fundamental"="Fundamental",
'success_change_10yrs_use'='Use-inspired', 'success_change_10yrs_applied' = 'Applied'))
ggplot(data=gender.change, aes(x=level, Freq, fill=type))+
geom_bar(stat="identity", position="dodge")+
guides(fill=guide_legend(title=NULL)) +
theme(axis.text.x = element_text(angle=0, vjust=0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.text.y = element_text(size=14, face="bold", color="black"),
strip.background = element_rect(colour="white", fill="white"),
legend.position=c(0.15, 0.9))+
facet_wrap(~type, nrow=3) +
guides(fill=FALSE)+
geom_text(aes(label=Freq, vjust=-0.5),size=3) +
scale_x_discrete(labels=c("Increase\n considerably", "Increase\n slightly",
"Stay the same", "Decrease\n slightly", "Decrease\n considerably", "Can't\n comment"),limits = (levels(gender.change$level)))+
labs(x="", y="No. of responses", fill="")+ colScale + ylim(c(0, 600))
## order bars from very important (left) to can't comment (right)
important<-subset(part4, select=c("Location","Country",'Country_work', "gender","opinion_fundamental_important"))
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
## using table to count cases of each category
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
# remove non-responses
sum.important<-sum.important[!sum.important$Var2=="",]
sum.important<-sum.important[!sum.important$Var1=="",]
perceive<-aggregate(Freq~Var1, sum.important, sum)
### colour palette
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
#gender.perceive<-aggregate(Freq ~ Var2 + Var1, sum.important, sum)
# turn to percents
#male<-subset(gender.perceive, Var2=="Male")
#female<-subset(gender.perceive, Var2=="Female")
#other<-subset(gender.perceive, Var2=="Other")
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Female',(gender.perceive$Freq/sum(female$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Other',(gender.perceive$Freq/sum(other$Freq))*100, gender.perceive$Freq)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
```
ggplot(prac.ca, aes(Var2, Freq, fill=Var1)) +
geom_bar(stat="identity", position = "dodge")+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position=c(0.8, 0.8),
axis.text.x = element_text(angle=0, vjust=0.5)) +
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
scale_x_discrete(labels=c("Mandatory", "Quite\n important", 'Somewhat\n important',"Not at all\n important", 'Not at all\n important', "Can't\n comment"))+
labs(x="", y="No. of responses")+ colScale
## Script to examine gender differences in survey questions from PART 4
## load in survey data
## CHANGE WORKING DIRECTORY FOR YOUR LOCAL MACHINE BEFORE KNITTING ##
#setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
setwd("/Users/IMAC3/Documents/git-jpwrobinson/gya-research")
#setwd("/Users/jpwrobinson/Documents/git_repos/gya-research")
#setwd("/Users/Julia_2013MacBookAir/Desktop/GitRepos/gya-research")
part4<-read.csv(file="data/gya-survey-part4.csv")
## load required packages
require(gridExtra); require(tidyr); require(ggplot2); require(stringr);require(RColorBrewer); require(colorRamps); require(plotrix); require(plyr)
theme_set(theme_bw())
important<-subset(part4, select=c("Location","Country",'Country_work', "gender","opinion_fundamental_important"))
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
sum.important<-sum.important[!sum.important$Var2=="",]
sum.important<-sum.important[!sum.important$Var1=="",]
head(sum.important)
summary(anova(Freq ~ Var1*Var2))
summary(anova(Freq ~ Var1*Var2, sum.important))
summary(l(Freq ~ Var1*Var2, sum.important))
summary(lm(Freq ~ Var1*Var2, sum.important))
sum.important
(anova(Freq ~ Var1*Var2, sum.important))
hist(sum.important$Freq)
summary(glm(Freq ~ Var1*Var2, sum.important, family="Poisson"))
summary(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
head(canada)
canada<-canada[!canada$opinion_fundamental_important=="",]
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
sum.important
sum.important<-sum.important[!sum.important$Var2=="",]
sum.important<-sum.important[!sum.important$Var1=="",]
summary(glm(Freq ~ Var1*Var2, canada, family="poisson"))
head(sum.important)
summary(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
sum.important<-sum.important[!sum.important$Var2=="Other",]
summary(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
priority.mod<-summary(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod)
require(visreg)
visreg(priority.mod)
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod)
visreg(priority.mod, by="Var2")
visreg(priority.mod, by=Var2)
?visreg
visreg(priority.mod, by=c("Var1", "Var2")
visreg(priority.mod, by=c("Var1", "Var2"))
#--------------------#--------------------#--------------------
visreg(priority.mod, by=c("Var1", "Var2"))
visreg(priority.mod, "Var1")
visreg(priority.mod, "Var1", scale="response")
visreg(priority.mod, "Var2",by="Var1", scale="response")
levels(sum.important$Var2)
levels(sum.important$Var1)
plot(priority.mod)
plot(resid(priority.mod))
(resid(priority.mod))
summary((priority.mod))
priority.mod<-(glm(opinion_fundamental_important ~ gender, sum.important, family="poisson"))
priority.mod<-(glm(opinion_fundamental_important ~ gender, canada, family="poisson"))
head(canada, 10)
chisq.test(sum.important)
sum.important
table(canada$opinion_fundamental_important, canada$gender)
temp<-table(canada$opinion_fundamental_important, canada$gender)
chisq.test(temp)
str(temp)
temp<-with(canada[!canada$gender=="Other",], table(opinion_fundamental_important, gender)
chisq.test(temp)
temp<-with(canada[!canada$gender=="Other",], table(opinion_fundamental_important, gender))
chisq.test(temp)
chisq.test(temp)
temp
temp<-with(canada[!(canada$gender=="Other" & canada$opinion_fundamental_important==""),], table(opinion_fundamental_important, gender))
chisq.test(temp)
str(temp)
tmep
temp
temp<-with(canada[!(canada$gender=="Other" & canada$opinion_fundamental_important==""),], table(opinion_fundamental_important, gender))
chisq.test(temp)
temp
with(canada[!(canada$gender=="Other" & canada$opinion_fundamental_important==""),]
canada$gender
ender=="Other" & canada$opinion_fundamental_important==""),],
unique(canada$gender))
with(canada[!(canada$gender=="Other" & canada$opinion_fundamental_important==""),],
unique(canada$gender))
with(canada[!(canada$gender=="Other" & canada$opinion_fundamental_important==""),],canada)
canada<-canada[!(canada$gender=="Other" & canada$opinion_fundamental_important==""),]
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
temp
canada<-droplevels(canada)
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
temp
canada<-canada[!(canada$gender=="Other" | canada$opinion_fundamental_important==""),]
canada<-droplevels(canada)
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
temp
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
priority.mod<-(glm(opinion_fundamental_important ~ gender, canada, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses")
summary((priority.mod))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
important<-subset(part4, select=c("Location","Country",'Country_work', "gender","opinion_fundamental_important"))
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
## using table to count cases of each category
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
# remove non-responses
sum.important<-sum.important[!sum.important$Var2=="",]
sum.important<-sum.important[!sum.important$Var1=="",]
perceive<-aggregate(Freq~Var1, sum.important, sum)
levels(sum.important$Var1)
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
#gender.perceive<-aggregate(Freq ~ Var2 + Var1, sum.important, sum)
# turn to percents
#male<-subset(gender.perceive, Var2=="Male")
#female<-subset(gender.perceive, Var2=="Female")
#other<-subset(gender.perceive, Var2=="Other")
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Female',(gender.perceive$Freq/sum(female$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Other',(gender.perceive$Freq/sum(other$Freq))*100, gender.perceive$Freq)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
perceive
levels(sum.important$Var1)
sum.important<-sum.important[!sum.important$Var2=="",]
sum.important<-sum.important[!sum.important$Var1=="",]
perceive<-aggregate(Freq~Var1, sum.important, sum)
levels(sum.important$Var1)
sum.important$Var1<-factor(sum.important$Var1, levels(sum.important$Var1)[c(6,5,4,3,2,1)]
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
#gender.perceive<-aggregate(Freq ~ Var2 + Var1, sum.important, sum)
# turn to percents
#male<-subset(gender.perceive, Var2=="Male")
#female<-subset(gender.perceive, Var2=="Female")
#other<-subset(gender.perceive, Var2=="Other")
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
sum.important$Var1<-factor(sum.important$Var1, levels(sum.important$Var1)[c(6,5,4,3,2,1)])
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
#gender.perceive<-aggregate(Freq ~ Var2 + Var1, sum.important, sum)
# turn to percents
#male<-subset(gender.perceive, Var2=="Male")
#female<-subset(gender.perceive, Var2=="Female")
#other<-subset(gender.perceive, Var2=="Other")
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Female',(gender.perceive$Freq/sum(female$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Other',(gender.perceive$Freq/sum(other$Freq))*100, gender.perceive$Freq)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
perceive
levels(sum.important$Var1)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
# scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
perceive<-aggregate(Freq~Var1, sum.important, sum)
myColors<-(brewer.pal(9, "Blues"))
myColors<-(myColors[c(9, 7, 6, 4, 2)])
colScale <- scale_fill_manual(name = "Var1",values = myColors)
#gender.perceive<-aggregate(Freq ~ Var2 + Var1, sum.important, sum)
# turn to percents
#male<-subset(gender.perceive, Var2=="Male")
#female<-subset(gender.perceive, Var2=="Female")
#other<-subset(gender.perceive, Var2=="Other")
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Female',(gender.perceive$Freq/sum(female$Freq))*100, gender.perceive$Freq)
#gender.perceive$Freq<-ifelse(gender.perceive$Var2=='Other',(gender.perceive$Freq/sum(other$Freq))*100, gender.perceive$Freq)
ggplot(data=perceive, aes(x=Var1, y=Freq)) +
geom_bar(stat='identity', position='dodge',fill=myColors[2])+
labs(x="", y="No. of responses", fill="")+
scale_x_discrete(labels=c("Very\n important", "Somewhat\n important", 'Not very\n important', 'Not at all\n important', "Can't\n comment"))+
geom_text(aes(label=Freq), vjust=-0.5) +
theme(axis.text.x = element_text(angle=0, vjust=0.4),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
canada<-canada[!canada$opinion_fundamental_important=="",]
canada<-canada[!canada$Var2=="Other",]
canada$Var1<-factor(canada$Var1, levels(canada$Var1)[c(6,5,4,3,2,1)])
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
temp
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
canada<-canada[!canada$opinion_fundamental_important=="",]
canada<-canada[!canada$gender=="Other",]
canada$Var1<-factor(canada$Var1, levels(canada$Var1)[c(6,5,4,3,2,1)])
## using table to count cases of each category
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
# remove non-responses
sum.important<-sum.important[!sum.important$Var2=="",]
sum.important<-sum.important[!sum.important$Var1=="",]
canada<-important[important$Country_work=="Canada" | (!(important$Country_work=="Canada") & important$Country_work=="" & important$Country=="Canada"),]
canada<-canada[!canada$opinion_fundamental_important=="",]
canada<-canada[!canada$gender=="Other",]
canada$opinion_fundamental_important<-factor(canada$opinion_fundamental_important, levels(canada$opinion_fundamental_important)[c(6,5,4,3,2,1)])
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
temp
canada<-droplevels(canada)
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
head(sum.important)
sum.important
sum.important<-sum.important[!sum.important$Var2=="Other",]
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
sum.important<-sum.important[!sum.important$Var2=="Other",]
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
sum.important
sum.important<-data.frame(table(canada$opinion_fundamental_important, canada$gender))
sum.important<-sum.important[!sum.important$Var2=="Other",]
sum.important<-sum.important[!sum.important$Var2=="",]
#perceive<-aggregate(Freq~Var1, sum.important, sum)
temp<-with(canada, table(opinion_fundamental_important, gender))
chisq.test(temp)
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
levels(sum.important$Var2)
levels(sum.important$Var1)
gender.perceive<-aggregate(higher.priority ~ gender + what.type, priority.long, sum)
per.change$what.type<-as.factor(per.change$what.type)
per.change$what.type<-factor(per.change$what.type, levels(per.change$what.type)[c(2,4,1,3)])
priority.mod<-(glm(Freq ~ Var1*Var2, per.change, family="poisson"))
head(per.change)
priority<-subset(part4, select=c("Location","Country",'Country_work', "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-priority[priority$Country_work=="Canada" | (!(priority$Country_work=="Canada") & priority$Country_work=="" & priority$Country=="Canada"),]
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
priority.long<-priority.long[!priority.long$higher.priority=="",]
#per.change<-aggregate(higher.priority~what.type +gender, priority.long, sum)
gender.perceive<-aggregate(higher.priority ~ gender + what.type, priority.long, sum)
# turn to percents
#male<-subset(gender.perceive, gender=="Male")
#female<-subset(gender.perceive, gender=="Female")
#other<-subset(gender.perceive, gender=="Other")
#gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Male',(gender.perceive$higher.priority/sum(male$higher.priority))*100, #gender.perceive$higher.priority)
#gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Female',(gender.perceive$higher.priority/sum(female$higher.priority))*100, #gender.perceive$higher.priority)
#gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Other',(gender.perceive$higher.priority/sum(other$higher.priority))*100, #gender.perceive$higher.priority)
# change order of the levels
per.change$what.type<-as.factor(per.change$what.type)
per.change$what.type<-factor(per.change$what.type, levels(per.change$what.type)[c(2,4,1,3)])
priority.mod<-(glm(Freq ~ Var1*Var2, per.change, family="poisson"))
head(priority.mod)
gender.perceive<-data.frame(table(priority.long$higher.priority ~ priority.long$gender + priority.long$what.type))
head(priority.long)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
# remove non-responses (n = 1066)
#dim(priority.long[!priority.long$higher.priority=="",])/4
priority.long<-priority.long[!priority.long$higher.priority=="",]
#per.change<-aggregate(higher.priority~what.type +gender, priority.long, sum)
gender.perceive<-data.frame(table(priority.long$higher.priority ~ priority.long$gender + priority.long$what.type))
head(priority.long)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
head(priority.long)
priority.long<-priority.long[!is.na(priority.long$higher.priority),]
#per.change<-aggregate(higher.priority~what.type +gender, priority.long, sum)
gender.perceive<-data.frame(table(priority.long$higher.priority ~ priority.long$gender + priority.long$what.type))
head(priority.long)
gender.perceive<-data.frame(table( priority.long$gender , priority.long$what.type))
head(priority.long)
gender.perceive$what.type<-as.factor(gender.perceive$what.type)
head(gender.perceive)
str(gender.perceive)
gender.perceive<-gender.perceive[!(gender.perceive$Var1=="Other" | gender.perceive$Var1==""),]
levels(gender.perceive$what.type)
levels(gender.perceive$Var2)
head(priority.mod)
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
gender.perceive$what.type<-revalue(gender.perceive$Var2, c("available_funding_fundamental"="Fundamental",
'available_funding_use_inspired'='Use-inspired', 'available_funding_applied' = 'Applied'))
gender.perceive$what.type<-revalue(gender.perceive$Var1, c("available_funding_fundamental"="Fundamental",
'available_funding_use_inspired'='Use-inspired', 'available_funding_applied' = 'Applied'))
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
head(gender.perceive)
gender.perceive$what.type<-revalue(gender.perceive$Var1, c(high_priority_fundamental"="Fundamental",
gender.perceive$what.type<-revalue(gender.perceive$Var1, c(high_priority_fundamental"="Fundamental",
gender.perceive$what.type<-revalue(gender.perceive$Var1, c("high_priority_fundamental"="Fundamental",
'high_priority_use_inspired'='Use-inspired', 'high_priority_applied' = 'Applied'))
gender.perceive$what.type<-revalue(gender.perceive$Var2, c("high_priority_fundamental"="Fundamental",
'high_priority_use_inspired'='Use-inspired', 'high_priority_applied' = 'Applied'))
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
gender.perceive$Var2<-revalue(gender.perceive$Var2, c("high_priority_fundamental"="Fundamental",
'high_priority_use_inspired'='Use-inspired', 'high_priority_applied' = 'Applied'))
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
gender.perceive$Var2<-revalue(gender.perceive$Var2, c("high_priority_fundamental"="Fundamental",
'high_priority_use_inspired'='Use-inspired', 'high_priority_applied' = 'Applied',
'high_priority_no_change'="No change"))
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Male',(gender.perceive$higher.priority/sum(male$higher.priority))*100, #gender.perceive$higher.priority)
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Female',(gender.perceive$higher.priority/sum(female$higher.priority))*100, #gender.perceive$higher.priority)
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Other',(gender.perceive$higher.priority/sum(other$higher.priority))*100, #gender.perceive$higher.priority)
## order bars into applied > use > fundamental > no change
priority<-subset(part4, select=c("Location","Country",'Country_work', "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-priority[priority$Country_work=="Canada" | (!(priority$Country_work=="Canada") & priority$Country_work=="" & priority$Country=="Canada"),]
## switch to long format
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country, -Country_work)
# remove non-responses (n = 1066)
#dim(priority.long[!priority.long$higher.priority=="",])/4
priority.long<-priority.long[!is.na(priority.long$higher.priority),]
#per.change<-aggregate(higher.priority~what.type +gender, priority.long, sum)
gender.perceive<-data.frame(table( priority.long$gender , priority.long$what.type))
# turn to percents
male<-subset(gender.perceive, Var1=="Male")
female<-subset(gender.perceive, Var1=="Female")
other<-subset(gender.perceive, Var1=="Other")
gender.perceive$higher.priority<-ifelse(gender.perceive$Var1=='Male',(gender.perceive$higher.priority/sum(male$higher.priority))*100, #gender.perceive$higher.priority)
gender.perceive$higher.priority<-ifelse(gender.perceive$Var1=='Female',(gender.perceive$higher.priority/sum(female$higher.priority))*100, #gender.perceive$higher.priority)
gender.perceive$higher.priority<-ifelse(gender.perceive$Var1=='Other',(gender.perceive$higher.priority/sum(other$higher.priority))*100, #gender.perceive$higher.priority)
# change order of the levels
gender.perceive<-gender.perceive[!(gender.perceive$Var1=="Other" | gender.perceive$Var1==""),]
#gender.perceive$what.type<-factor(gender.perceive$what.type, levels(gender.perceive$what.type)[c(2,4,1,3)])
gender.perceive$Var2<-revalue(gender.perceive$Var2, c("high_priority_fundamental"="Fundamental",
'high_priority_use_inspired'='Use-inspired', 'high_priority_applied' = 'Applied',
'high_priority_no_change'="No change"))
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
head(priority.long)
head(gender.perceive)
gender.perceive<-data.frame(table( priority.long$gender , priority.long$what.type))
male<-subset(gender.perceive, Var1=="Male")
female<-subset(gender.perceive, Var1=="Female")
other<-subset(gender.perceive, Var1=="Other")
gender.perceive$Freq<-ifelse(gender.perceive$Var1=='Male',(gender.perceive$Freq/sum(male$Freq))*100, gender.perceive$Freq)
gender.perceive$Freq<-ifelse(gender.perceive$Var1=='Female',(gender.perceive$Freq/sum(female$Freq))*100, gender.perceive$Freq)
gender.perceive$Freq<-ifelse(gender.perceive$Var1=='Other',(gender.perceive$Freq/sum(other$Freq))*100, gender.perceive$Freq)
gender.perceive<-gender.perceive[!(gender.perceive$Var1=="Other" | gender.perceive$Var1==""),]
gender.perceive$Var2<-revalue(gender.perceive$Var2, c("high_priority_fundamental"="Fundamental",
'high_priority_use_inspired'='Use-inspired', 'high_priority_applied' = 'Applied',
'high_priority_no_change'="No change"))
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
gender.perceive
priority.mod<-(glm(Freq ~ Var1*Var2, gender.perceive, family="gamma"))
priority.mod<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
visreg(priority.mod, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
summary(priority.mod)
priority.mod1<-(glm(Freq ~ Var1*Var2, sum.important, family="poisson"))
priority.mod2<-(glm(Freq ~ Var1 +Var2, sum.important, family="poisson"))
summary(priority.mod1)
annova(priority.mod1, priority.mod2)
anova(priority.mod1, priority.mod2)
anova(priority.mod1, priority.mod2, test="Chi")
priority.mod1<-(glm(Freq ~ Var1*Var2, gender.perceive, family="poisson"))
priority.mod2<-(glm(Freq ~ Var1 +Var2, gender.perceive, family="poisson"))
visreg(priority.mod1, "Var2",by="Var1", scale="response", ylab="Number of responses", xlab="Gender")
summary(priority.mod1)
anova(priority.mod1, priority.mod2, test="Chi")
