"high_priority_applied",	"high_priority_no_change",	"high_priority_comments",	"available_funding_fundamental",
"available_funding_use_inspired",	"available_funding_applied",	"next_generation",	"next_generation_Comments",
"field_research",	"PhD_Year",	"Country_work",	"gender")
## remove some unnecessary columns
survey.all$'Username'<-NULL
survey.all$'Updated_At'<-NULL
survey.all$'Number_of_Saves'<-NULL
survey.all$'Internal_ID'<-NULL
survey.all$'Language'<-NULL
survey.all$'Created_At'<-NULL
survey.all$'GET_Variables'<-NULL
survey.all$'Referrer'<-NULL
survey.all$'Weighted_Score'<-NULL
survey.all$'Completion_Time'<-NULL
survey.all$'IP_Address'<-NULL
survey.all$'Invite_Code'<-NULL
survey.all$'Invite_Email'<-NULL
survey.all$'Invite_Name'<-NULL
survey.all$'Collector'<-NULL
survey.all$'final_comments'<-NULL
##change column names
colnames(survey.all)<-suveycols
## check number of complete vs. incomplete
table(survey.all$Status)
### keep complete data only
survey<-survey.all[survey.all$Status=="Complete",]
dim(survey)
### change Canada and USA
states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
head (survey)
write.csv(survey, file="data/gya-without-incomplete.csv")
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
colnames(survey)
states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
survey.part4<-subset(survey, select=c("Location","Country", "gender","opinion_fundamental_important",
"high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change", "available_funding_fundamental", "available_funding_use_inspired", "available_funding_applied",
"next_generation"))
colnames(survey)
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
colnames(survey)
part3<-subset(survey, select=c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied",            "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"   ,
"successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied"   ,
"practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ,
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ,
"distribution_funding_11_15_internal" ,       "distriution_funding_11_15_government" ,
"distriution_funding_11_15_for_profit",       "distriution_funding_11_15_nongov" ,
"distriution_funding_11_15_other"   ,         "distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal" ,         "distriution_funding_6_10_government" ,
"distriution_funding_6_10_for_profit" ,       "distriution_funding_6_10_nongov"  ,
"distriution_funding_6_10_other"   ,          "distriution_funding_6_10_other_text" ,
"success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
head(part3.grants.15)
part3.grants.15<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied"))
head(part3.grants.15)
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
head(part3.grants)
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="3-Jan", "1-3")
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="3-Jan", "1-3",part3.grants$external_pi_grant_11_15_fundamental)
head(part3.grants)
?lapply
unique(part3$external_pi_grant_6_10_use)
?unique
func<-  function(x)
{length(unique(x))}
View(func)
part3.grants<-lapply(part3.grants, function(x) {  gsub("6-Apr ", "4-6", x)  })
unique(part3$external_pi_grant_6_10_use)
head(part3.grants)
class(part3.grants)
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
#subset data needed for this part
part3<-subset(survey, select=c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied",            "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"   ,
"successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied"   ,
"practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ,
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ,
"distribution_funding_11_15_internal" ,       "distriution_funding_11_15_government" ,
"distriution_funding_11_15_for_profit",       "distriution_funding_11_15_nongov" ,
"distriution_funding_11_15_other"   ,         "distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal" ,         "distriution_funding_6_10_government" ,
"distriution_funding_6_10_for_profit" ,       "distriution_funding_6_10_nongov"  ,
"distriution_funding_6_10_other"   ,          "distriution_funding_6_10_other_text" ,
"success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
## number of grant applications
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
head(part3.grants)
#clean data
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="6-Apr", "4-6",part3.grants$external_pi_grant_11_15_fundamental)
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="3-Jan", "1-3",part3.grants$external_pi_grant_11_15_fundamental)
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="9-Jul", "7-9",part3.grants$external_pi_grant_11_15_fundamental)
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="12-Oct", "10-12",part3.grants$external_pi_grant_11_15_fundamental)
part3.grants$external_pi_grant_11_15_fundamental<-ifelse(part3.grants$external_pi_grant_11_15_fundamental=="3-Jan", "1-3",part3.grants$external_pi_grant_11_15_fundamental)
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr ", "4-6", x)  }))
class(part3.grants)
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
#subset data needed for this part
part3<-subset(survey, select=c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied",            "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"   ,
"successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied"   ,
"practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ,
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ,
"distribution_funding_11_15_internal" ,       "distriution_funding_11_15_government" ,
"distriution_funding_11_15_for_profit",       "distriution_funding_11_15_nongov" ,
"distriution_funding_11_15_other"   ,         "distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal" ,         "distriution_funding_6_10_government" ,
"distriution_funding_6_10_for_profit" ,       "distriution_funding_6_10_nongov"  ,
"distriution_funding_6_10_other"   ,          "distriution_funding_6_10_other_text" ,
"success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
## number of grant applications
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
head(part3.grants)
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr ", "4-6", x)  }))
head(part3.grants)
unique(part3$external_pi_grant_6_10_use)
part3.grants<-data.frame(lapply(part3.grants, function(x) {  str_replace_all(x, "6-Apr ", "4-6")  }))
require(stringr)
part3.grants<-data.frame(lapply(part3.grants, function(x) {  str_replace_all(x, "6-Apr ", "4-6")  }))
head(part3.grants)
part3.grants<-str_replace_all(part3.grants, "6-Apr ", "4-6")
unique(part3$external_pi_grant_6_10_use)
unique(part3.grants$external_pi_grant_6_10_use)
head(part3.grants)
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
head(part3.grants)
part3.grants<-str_replace_all(part3.grants, "6-Apr ", "4-6")
head(part3.grants)
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  str_replace_all(x, "6-Apr ", "4-6")  }))
class(part3.grants)
head(part3.grants)
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
class(part3.grants)
head(part3.grants)
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
head(part3.grants)
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
head(part3.grants)
part3.grants<-part3.grants[!(part3.grants$external_pi_grant_11_15_fundamental==0 & part3.grants$external_pi_grant_11_15_use==0 &
part3.grants$external_pi_grant_11_15_applied==0 & part3.grants$external_pi_grant_6_10_fundamental &
part3.grants$external_pi_grant_6_10_use==0 & part3.grants$external_pi_grant_6_10_applied==0),]
part3.grants<-part3.grants[!(part3.grants$external_pi_grant_11_15_fundamental==0 + part3.grants$external_pi_grant_11_15_use==0 +
part3.grants$external_pi_grant_11_15_applied==0 + part3.grants$external_pi_grant_6_10_fundamental +
part3.grants$external_pi_grant_6_10_use==0 + part3.grants$external_pi_grant_6_10_applied==0),]
part3.grants<-part3.grants[!(part3.grants$external_pi_grant_11_15_fundamental=0 + part3.grants$external_pi_grant_11_15_use=0 +
part3.grants$external_pi_grant_11_15_applied=0 + part3.grants$external_pi_grant_6_10_fundamental=0 +
part3.grants$external_pi_grant_6_10_use=0 + part3.grants$external_pi_grant_6_10_applied=0),]
l
l
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
##clean data
#get ranges to not be dates
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
#remove non answers
part3.grants<-part3.grants[!part3.grants$external_pi_grant_11_15_fundamental=="" & part3.grants$external_pi_grant_11_15_use==""&
part3.grants$external_pi_grant_11_15_applied==""& part3.grants$external_pi_grant_6_10_fundamental==""&
part3.grants$external_pi_grant_6_10_use==""& part3.grants$external_pi_grant_6_10_applied=="",]
head(part3.grants)
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
#subset data needed for this part
part3<-subset(survey, select=c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied",            "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"   ,
"successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied"   ,
"practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ,
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ,
"distribution_funding_11_15_internal" ,       "distriution_funding_11_15_government" ,
"distriution_funding_11_15_for_profit",       "distriution_funding_11_15_nongov" ,
"distriution_funding_11_15_other"   ,         "distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal" ,         "distriution_funding_6_10_government" ,
"distriution_funding_6_10_for_profit" ,       "distriution_funding_6_10_nongov"  ,
"distriution_funding_6_10_other"   ,          "distriution_funding_6_10_other_text" ,
"success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
## number of grant applications
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
##clean data
#get ranges to not be dates
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
#remove non answers
part3.grants<-part3.grants[!part3.grants$external_pi_grant_11_15_fundamental=="" & part3.grants$external_pi_grant_11_15_use=="" &
part3.grants$external_pi_grant_11_15_applied=="" & part3.grants$external_pi_grant_6_10_fundamental=="" &
part3.grants$external_pi_grant_6_10_use=="" & part3.grants$external_pi_grant_6_10_applied=="",]
head(part3.grants)
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
#remove non answers
head(part3.grants)
# fill blanks with 0 for people who were too lazy to click 0
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
#subset data needed for this part
part3<-subset(survey, select=c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied",            "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"   ,
"successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied"   ,
"practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ,
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ,
"distribution_funding_11_15_internal" ,       "distriution_funding_11_15_government" ,
"distriution_funding_11_15_for_profit",       "distriution_funding_11_15_nongov" ,
"distriution_funding_11_15_other"   ,         "distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal" ,         "distriution_funding_6_10_government" ,
"distriution_funding_6_10_for_profit" ,       "distriution_funding_6_10_nongov"  ,
"distriution_funding_6_10_other"   ,          "distriution_funding_6_10_other_text" ,
"success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
## number of grant applications
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
##clean data
#get ranges to not be dates
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
#remove non answers
head(part3.grants)
# fill blanks with 0 for people who were too lazy to click 0
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
head(part3.grants)
part3.grants<-part3.grants[!part3.grants$external_pi_grant_11_15_fundamental=="0" & part3.grants$external_pi_grant_11_15_use=="0" &
part3.grants$external_pi_grant_11_15_applied=="0" & part3.grants$external_pi_grant_6_10_fundamental=="0" &
part3.grants$external_pi_grant_6_10_use=="0" & part3.grants$external_pi_grant_6_10_applied=="0",]
head(part3.grants)
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
#subset data needed for this part
part3<-subset(survey, select=c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied",            "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"   ,
"successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied"   ,
"practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ,
"include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ,
"distribution_funding_11_15_internal" ,       "distriution_funding_11_15_government" ,
"distriution_funding_11_15_for_profit",       "distriution_funding_11_15_nongov" ,
"distriution_funding_11_15_other"   ,         "distriution_funding_11_15_other_text",
"distriution_funding_6_10_internal" ,         "distriution_funding_6_10_government" ,
"distriution_funding_6_10_for_profit" ,       "distriution_funding_6_10_nongov"  ,
"distriution_funding_6_10_other"   ,          "distriution_funding_6_10_other_text" ,
"success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
## number of grant applications
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
##clean data
#get ranges to not be dates
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
#remove non answers
head(part3.grants)
# fill blanks with 0 for people who were too lazy to click 0
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
head(part3.grants)
part3.grants<-part3.grants[!part3.grants$external_pi_grant_11_15_fundamental==0 & part3.grants$external_pi_grant_11_15_use==0 &
part3.grants$external_pi_grant_11_15_applied==0 & part3.grants$external_pi_grant_6_10_fundamental==0 &
part3.grants$external_pi_grant_6_10_use==0 & part3.grants$external_pi_grant_6_10_applied==0,]
head(part3.grants)
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
##clean data
#get ranges to not be dates
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
head(part3.grants)
# fill blanks with 0 for people who were too lazy to click 0
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
head(part3.grants)
write.csv(part3.grants, file="data/gya-part3.grants.csv", row.names = FALSE)
part3.grants<-read.csv(file="data/gya-part3.grants.csv")
head(part3.grants)
grants.15<-aggregate(gneder~external_pi_grant_11_15_fundamental+external_pi_grant_11_15_use+external_pi_grant_11_15_applied, part3.grants, length)
grants.15<-aggregate(gender~external_pi_grant_11_15_fundamental+external_pi_grant_11_15_use+external_pi_grant_11_15_applied, part3.grants, length)
head(grants.15)
part3.grants<-subset(part3, select = c("Country","Country_work", "gender", "Location","external_pi_grant_11_15_fundamental" , "external_pi_grant_11_15_use" ,
"external_pi_grant_11_15_applied", "external_pi_grant_6_10_fundamental",
"external_pi_grant_6_10_use"     ,            "external_pi_grant_6_10_applied"))
##clean data
#get ranges to not be dates
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("6-Apr", "4-6", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("3-Jan", "1-3", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("9-Jul", "7-9", x)  }))
part3.grants<-data.frame(lapply(part3.grants, function(x) {  gsub("12-Oct", "10-12", x)  }))
unique(part3.grants$external_pi_grant_6_10_use)
# fill blanks with 0 for people who were too lazy to click 0
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
head(part3.grants)
survey<-read.csv("data/Jul 18 2016 1149am - Hamilton.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
## 1. change all relevant variables to characters.......
survey$percent_Applied_Research_past<-as.character(survey$percent_Applied_Research_past)
survey$percent_Applied_Research_current<-as.character(survey$percent_Applied_Research_current)
survey$percent_fundemental_research_current<-as.character(survey$percent_fundemental_research_current)
survey$percent_Fundamental_Research_past<-as.character(survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_current<-as.character(survey$percent_Use_inspired_Research_current)
survey$percent_Use_inspired_Research_past<-as.character(survey$percent_Use_inspired_Research_past)
colnames(survey)
require(stringr)
## remove all % symbols
survey$percent_Applied_Research_past<-str_replace_all(survey$percent_Applied_Research_past, "[%]", "")
#survey$percent_Applied_Research_current<-str_replace_all(survey$percent_Applied_Research_current, "[%]", "")
#survey$percent_Use_inspired_Research_current<-str_replace_all(survey$percent_Use_inspired_Research_current, "[%]", "")
#survey$percent_fundemental_research_current<-str_replace_all(survey$percent_fundemental_research_current, "[%]", "")
survey$percent_Fundamental_Research_past<-str_replace_all(survey$percent_Fundamental_Research_past, "[%]", "")
survey$percent_Use_inspired_Research_past<-str_replace_all(survey$percent_Use_inspired_Research_past, "[%]", "")
survey<-subset(survey, select=c("Location","Country",  "gender", "percent_Applied_Research_past", "percent_Fundamental_Research_past",
"percent_Use_inspired_Research_past"))
## everything's fixed. % are gone.
### now we are going to standardise the % for each survey
## 1. if every category is blank, turn to NA
head(survey, 20)
survey$percent_Fundamental_Research_past[survey$percent_Fundamental_Research_past=="" &
survey$percent_Applied_Research_past=="" & survey$percent_Use_inspired_Research_past==""]<-NA
survey$percent_Applied_Research_past[is.na(survey$percent_Fundamental_Research_past) &
survey$percent_Applied_Research_past=="" & survey$percent_Use_inspired_Research_past==""]<-NA
survey$percent_Use_inspired_Research_past[is.na(survey$percent_Fundamental_Research_past) &
is.na(survey$percent_Applied_Research_past) & survey$percent_Use_inspired_Research_past==""]<-NA
## 2. categories with answers and blanks, turn blanks to 0
survey$percent_Fundamental_Research_past[survey$percent_Fundamental_Research_past==""]<-0
survey$percent_Applied_Research_past[survey$percent_Applied_Research_past==""]<-0
survey$percent_Use_inspired_Research_past[survey$percent_Use_inspired_Research_past==""]<-0
survey<-survey[!is.na(survey$percent_Fundamental_Research_past),]
survey<-survey[!(survey$percent_Fundamental_Research_past==0 & survey$percent_Applied_Research_past==0 & survey$percent_Use_inspired_Research_past==0),]
## 3. Standardise % values > 100 in total
survey$percent_Applied_Research_past<-as.numeric(survey$percent_Applied_Research_past)
survey$percent_Fundamental_Research_past<-as.numeric(survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_past<-as.numeric(survey$percent_Use_inspired_Research_past)
survey$total_research<-rowSums(survey[,4:6])
head(survey[survey$total_research>100,])
## need to change 64 surveys that are over 100%
survey$percent_Applied_Research_past<-ifelse(survey$total_research>100,(survey$percent_Applied_Research_past/survey$total_research)*100, survey$percent_Applied_Research_past)
survey$percent_Fundamental_Research_past<-ifelse(survey$total_research>100,(survey$percent_Fundamental_Research_past/survey$total_research)*100, survey$percent_Fundamental_Research_past)
survey$percent_Use_inspired_Research_past<-ifelse(survey$total_research>100,(survey$percent_Use_inspired_Research_past/survey$total_research)*100, survey$percent_Use_inspired_Research_past)
head(survey[survey$total_research>100,])
## switch to long format
require(tidyr)
survey.long.past<-gather(survey, type_past, percent_past, -Location, -gender, -Country)
head(survey[survey$total_research>100,])
head(survey)
head(part3.grants)
part3.grants.long<-gather(part3.grants, type.grant, number, -Location, -gender, -Country)
part3.grants$external_pi_grant_11_15_fundamental[part3.grants$external_pi_grant_11_15_fundamental==""]<-0
part3.grants$external_pi_grant_11_15_use[part3.grants$external_pi_grant_11_15_use==""]<-0
part3.grants$external_pi_grant_11_15_applied[part3.grants$external_pi_grant_11_15_applied==""]<-0
part3.grants$external_pi_grant_6_10_fundamental[part3.grants$external_pi_grant_6_10_fundamental==""]<-0
part3.grants$external_pi_grant_6_10_use[part3.grants$external_pi_grant_6_10_use==""]<-0
part3.grants$external_pi_grant_6_10_applied[part3.grants$external_pi_grant_6_10_applied==""]<-0
head(part3.grants)
#change to long format
require(tidyr)
part3.grants.long<-gather(part3.grants, type.grant, number, -Location, -gender, -Country)
require(tidyr)
part3.grants.long<-gather(part3.grants, type.grant, number, -Location, -gender, -Country, -Country_work)
head(part3.grants.long)
write.csv(part3.grants.long, file="data/gya-part3.grants.long.csv", row.names = FALSE)
part3.grants.long<-read.csv(file="data/gya-part3.grants.long.csv")
head(part3.grants.long)
ggplot(data=part3.grants.long, aes(x=type.grant, y=number, fill= type.grant))+geom_bar(stat='identity', position="dodge")
require(ggplot2)
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
part3.grants.long<-read.csv(file="data/gya-part3.grants.long.csv")
require(ggplot2)
ggplot(data=part3.grants.long, aes(x=type.grant, y=number, fill= type.grant))+geom_bar(stat='identity', position="dodge")
head(part3.grants.long)
grants.15<-aggregate(gender~type.grant+number, part3.grants.long, length)
head(grants.15)
grants.15<-aggregate(number~type.grant, part3.grants.long, length)
head(grants.15)
grants.15<-aggregate(type.grant~number, part3.grants.long, length)
head(grants.15)
grants.15<-aggregate(gender~type.grant, part3.grants.long, length)
head(grants.15)
head(part3.grants.long)
sum.grants<-data.frame(table(part3.grants.long$type.grant+part3.grants.long$number))
head(part3.grants.long)
part3.success<-subset(part3, select = c("Country", "gender", "Location","successful_grants_11_15_fundamental"  ,      "successful_grants_11_15_use"     ,
"successful_grants_11_15_applied",            "successful_grants_6_10_fundamental"   ,
"successful_grants_6_10_use"  ,               "successful_grants_6_10_applied" ))
head(part3.success)
part3.prac.app<-subset(part3, select = c("Country", "gender", "Location","practical_applications_important_11_15"  ,   "practical_applications_important_6_10" ))
part3.part<-subset(part3, select = c("Country", "gender", "Location","include_nonacademia_partners_success_11_15", "include_nonacademia_partners_success_6_10" ))
part3.change<-subset(part3, select = c("Country", "gender", "Location", "success_change_10yrs_fundamental"  ,        "success_change_10yrs_use"   ,
"success_change_10yrs_applied"))
head(part3.change)
write.csv(part3.change, file="data/gya-part3.change.csv", row.names = FALSE)
part3.change<-read.csv(file="data/gya-part3.change.csv")
head(part3.change)
require(tidyr)
change.long<-gather(part3.change, type, level, -Location, -gender, -Country)
head(change.long)
change<-aggregate(gender~type+level, change.long, length)
change<-change[!change$level=="",]
ggplot(data=change, aes(x=type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
