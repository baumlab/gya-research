head(priority.long)
#high.priority<-aggregate(higher.priority~ what.type, priority.long, length)
high.priority<-aggregate(higher.priority~ what.type, priority.long, sum)
ggplot(data=high.priority, aes(x=what.type, higher.priority, fill=what.type)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 9c  countries
country.high.priority<-aggregate(higher.priority~ what.type + Country, priority.long, sum)
ggplot(data=country.high.priority, aes(x=Country, y=higher.priority, fill=what.type)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 9b Canada
priority<-subset(part4, select=c("Location","Country", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-subset(priority, Country=="Canada")
## switch to long format
require(tidyr)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country)
head(priority.long)
high.priority<-aggregate(higher.priority~ what.type, priority.long, sum)
ggplot(data=high.priority, aes(x=what.type, higher.priority, fill=what.type)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
######10a  Availiability of research funding will change in your country of work in the next 5 yrs
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
## switch to long format
require(tidyr)
availiability.change.long<-gather(availiability.change, what.type, level, -Location, -gender, -Country)
head(availiability.change.long)
availiability<-aggregate(gender~what.type+level,
availiability.change.long,length)
# remove non-response
availiability<-availiability[!availiability$level=="",]
ggplot(data=availiability, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##10b countries
availiability.cont<-aggregate(gender~what.type+level+Country,
availiability.change.long,length)
# remove non-response
availiability.cont<-availiability.cont[!availiability.cont$level=="",]
ggplot(data=availiability.cont, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5)) + facet_wrap(~ Country)
###subset out the countries with more than ~5 responses
########################not done###################
##################################################
##################################################
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
head(availiability.change)
#five.countries<-subset(availiability.change, Country=="USA","United Kingdom","Canada","Israel","Italy")
###10c-Canada
availiability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availiability.change, Country=="Canada")
## switch to long format
require(tidyr)
availiability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
availiability.ca<-aggregate(gender~what.type+level,
availiability.change.long.ca,length)
head(availiability.ca)
# remove non-response
availiability.ca<-availiability.ca[!availiability.ca$level=="",]
ggplot(data=availiability.ca, aes(x=what.type, gender, fill=level))+ geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##11a changes in funding influence the next generation
next.generation<-subset(part4, select=c("Location", "Country", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
impact<-aggregate(gender~ next_generation, next.generation, length)
head(impact)
ggplot(data=impact, aes(x=next_generation, gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##11b countries
country.impact<-aggregate(gender~ next_generation + Country, next.generation, length)
# remove non-response
country.impact<-country.impact[!country.impact$next_generation=="",]
ggplot(data=country.impact, aes(x=Country, y=gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
##11c Canada
next.generation<-subset(part4, select=c("Location", "Country", "gender","next_generation"))
# remove non-response
next.generation<-next.generation[!next.generation$next_generation=="",]
canada<-subset(next.generation, Country=="Canada")
head(canada)
impact<-aggregate(gender~ next_generation, canada, length)
head(impact)
ggplot(data=impact, aes(x=next_generation, gender, fill=next_generation)) + geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
###############
####Part2######
###############
###############
####Part3######
###############
dev.off()
summary(res.plot)
head(res.plot)
res.plot<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current","percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
res.plot$percent<-str_replace_all(res.plot$percent, "%", "")
res.plot$percent<-as.numeric(as.character(res.plot$percent))
res.plot$type<-as.character(res.plot$type)
# add time variable
res.plot$time<-ifelse(grepl( "current", res.plot$type),"Current", "Past")
res.plot$type[res.plot$type=="percent_Applied_Research_past"]<-"Applied"
res.plot$type[res.plot$type=="percent_Applied_Research_current"]<-"Applied"
res.plot$type[res.plot$type=="percent_Fundamental_Research_past"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_fundemental_research_current"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_past"]<-"Use inspired"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_current"]<-"Use inspired"
head(res.plot)
res.plot$time<-factor(res.plot$time, levels(res.plot$time)[c(2,1)])
ggplot(res.plot[res.plot$Country=="Canada",], aes(type, percent, fill=time)) + geom_boxplot() +guides(fill=guide_legend(title=NULL, reverse=TRUE, nrow=2)) +
labs(x="Research type", y="% research", title="Canada")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
head(gender.perceive)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country)
# remove non-responses
priority.long<-priority.long[!priority.long$gender=="",]
gender.perceive<-aggregate(higher.priority ~ gender + what.type, priority.long, sum)
# turn to percents
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Male',(gender.perceive$higher.priority/sum(male$higher.priority))*100, gender.perceive$higher.priority)
priority<-subset(part4, select=c("Location","Country", "gender", "high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change"))
canada<-subset(priority, Country=="Canada")
## switch to long format
require(tidyr)
priority.long<-gather(canada, what.type, higher.priority, -Location, -gender, -Country)
# remove non-responses
priority.long<-priority.long[!priority.long$gender=="",]
gender.perceive<-aggregate(higher.priority ~ gender + what.type, priority.long, sum)
# turn to percents
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Male',(gender.perceive$higher.priority/sum(male$higher.priority))*100, gender.perceive$higher.priority)
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Female',(gender.perceive$higher.priority/sum(female$higher.priority))*100, gender.perceive$higher.priority)
gender.perceive$higher.priority<-ifelse(gender.perceive$gender=='Other',(gender.perceive$higher.priority/sum(other$higher.priority))*100, gender.perceive$higher.priority)
head(gender.perceive)
res.plot<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current","percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
res.plot$percent<-str_replace_all(res.plot$percent, "%", "")
res.plot$percent<-as.numeric(as.character(res.plot$percent))
res.plot$type<-as.character(res.plot$type)
# add time variable
res.plot$time<-ifelse(grepl( "current", res.plot$type),"Current", "Past")
res.plot$type[res.plot$type=="percent_Applied_Research_past"]<-"Applied"
res.plot$type[res.plot$type=="percent_Applied_Research_current"]<-"Applied"
res.plot$type[res.plot$type=="percent_Fundamental_Research_past"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_fundemental_research_current"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_past"]<-"Use inspired"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_current"]<-"Use inspired"
head(res.plot)
# change order of the levels
res.plot$time<-as.factor(res.plot$time)
res.plot$time<-factor(res.plot$time, levels(res.plot$time)[c(2,1)])
ggplot(res.plot[res.plot$Country=="Canada",], aes(type, percent, fill=time)) + geom_boxplot() +guides(fill=guide_legend(title=NULL, reverse=TRUE, nrow=2)) +
labs(x="Research type", y="% research", title="Canada")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(res.plot[res.plot$Country=="Canada",], aes(type, percent, fill=time)) + geom_boxplot() +guides(fill=guide_legend(title=NULL, reverse=FALSE, nrow=2)) +
labs(x="Research type", y="% research", title="Canada")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country)
gender.perceive<-aggregate(Location ~ what.type + gender+level, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
# turn to percents
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$Location<-ifelse(gender.perceive$gender=='Male',(gender.perceive$Location/sum(male$Location))*100, gender.perceive$Location)
gender.perceive$Location<-ifelse(gender.perceive$gender=='Female',(gender.perceive$Location/sum(female$Location))*100, gender.perceive$Location)
gender.perceive$Location<-ifelse(gender.perceive$gender=='Other',(gender.perceive$Location/sum(other$Location))*100, gender.perceive$Location)
## change type to factor with levels
gender.perceive$level<-str_replace_all(gender.perceive$level, "Will ", "")
gender.perceive$what.type<-as.factor(gender.perceive$what.type)
gender.perceive$level<-as.factor(gender.perceive$level)
## change order of levels
gender.perceive$level<-factor(gender.perceive$level, levels(gender.perceive$level)[c(4,5,6,3,2,1 )])
gender.perceive$what.type<-factor(gender.perceive$what.type, levels(gender.perceive$what.type)[c(2,3,1)])
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ scale_x_discrete(labels=c("Increase Considerably", "Increase Slightly", "Stay the Same", "Decrease Slightly", "Decrease Considerably", "Can't Comment")
```
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ scale_x_discrete(labels=c("Increase Considerably", "Increase Slightly", "Stay the Same", "Decrease Slightly", "Decrease Considerably", "Can't Comment")
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ scale_x_discrete(labels=c("Increase Considerably", "Increase Slightly", "Stay the Same", "Decrease Slightly", "Decrease Considerably", "Can't Comment")
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete(labels=c("Increase Considerably", "Increase Slightly", "Stay the Same", "Decrease Slightly", "Decrease Considerably", "Can't Comment")
```
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete(labels=c("Increase Considerably", "Increase Slightly", "Stay the Same", "Decrease Slightly", "Decrease Considerably", "Can't Comment")
```
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + scale_x_discrete(labels=c("Increase Considerably", "Increase Slightly", "Stay the Same", "Decrease Slightly", "Decrease Considerably", "Can't Comment"))
g3<-ggplot(experience, aes(x = reorder(what_participant_group, -Location), Location, fill=what_participant_group)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
labs(y="Number of responses", x="", title="Global") +  theme(legend.position="bottom") + theme(axis.text.x=element_blank()) +
geom_text(aes(label=Location),size=4, vjust=-0.25) + guides(fill=guide_legend(title=NULL, reverse=TRUE, nrow=6)) +
theme( axis.text=element_text(size=14), axis.title=element_text(size=10),panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + colScale+ guides(fill=FALSE) + ylim(c(0, 1500))
##1b  top 20+
require(plotrix)
country.list<-c("Canada" , "France",
"Germany","United Kingdom","Italy","Japan", "Russia","Korea, South",
"United States","Australia","Austria","Belgium",
"Ireland","Brazil", "Poland","Finland",
"Netherlands","New Zealand","Norway",
"Spain","Sweden","Switzerland","Turkey","Israel",
"India","Bangladesh","Uruguay","Malaysia","New Zealand","Taiwan","Denmark")
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[order(match(locations.top,gender.top))]
locations.top<-droplevels(locations.top)
#########not done###############
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,1,labels=NULL,cex=1,prop=0.5,miny=0,offset=0)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,0,cex=1,prop=0.5,miny=0,offset=0)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,1,cex=1,prop=0.5,miny=0,offset=0)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,1,labels=locations.top$country_work,cex=1,prop=0.5,miny=0,offset=0)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0:29,labels=locations.top$country_work,cex=1,prop=0.5,miny=0,offset=0)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,0:29,labels=locations.top$country_work,cex=1,prop=0.5,miny=0,offset=0)
#ggplot(locations.top, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,0:29,labels=locations.top$country_work,cex=1,prop=0.5,miny=0,offset=0)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,1:29,labels=locations.top$country_work,cex=1,prop=0.5,miny=0,offset=0)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,1:29,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0)
nrow(locations.top$Country_work)
locations.top$Country_work
lab <-(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29)
lab <-c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(0,lab,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(1,lab,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(lab,1,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(lab,1,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(lab,1,labels=sort(locations.top$gender,decreasing=TRUE),cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(lab,1,labels=sort(locations.top$Country_work,decreasing=TRUE),cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(lab,1,labels=locations.top$Country_work(sort(locations.top$gender,decreasing=TRUE)),cex=1,prop=0.5,miny=0,offset=0, srt=90)
new <-sort(locations.top$gender,decreasing=TRUE,)
new
new <-order(locations.top$gender,decreasing=TRUE,)
new <-order(locations.top$gender,decreasing=TRUE)
new
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(new,1,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0, srt=90)
?order
new <-order(locations.top$Country_work, locations.top$gender,decreasing=TRUE)
new
new <-order(locations.top$gender, locations.top$Country_work,decreasing=TRUE)
new
locations.top
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(new,1,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(new,1,labels=new,cex=1,prop=0.5,miny=0,offset=0, srt=90)
new
new <-sort.int(locations.top$gender, locations.top$Country_work,decreasing=TRUE)
new
new <-sort.int(locations.top$gender, decreasing=TRUE)
new
new <-sort.int(locations.top$Country_work, decreasing=TRUE)
new
require(plotrix)
country.list<-c("Canada" , "France",
"Germany","United Kingdom","Italy","Japan", "Russia","Korea, South",
"United States","Australia","Austria","Belgium",
"Ireland","Brazil", "Poland","Finland",
"Netherlands","New Zealand","Norway",
"Spain","Sweden","Switzerland","Turkey","Israel",
"India","Bangladesh","Uruguay","Malaysia","New Zealand","Taiwan","Denmark")
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[order(match(locations.top,gender.top))]
locations.top
locations.top<-droplevels(locations.top)
#########not done###############
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(new,1,labels=locations.top$Country_work,cex=1,prop=0.5,miny=0,offset=0, srt=90)
x.factor <- factor(Country_work, levels = gender, ordered=TRUE)
x.factor <- factor(locations.top$Country_work, levels = locations.top$gender, ordered=TRUE)
locations.top$Country_work[order(match(locations.top$Country_work,locations.top$gender))]
locations.top$gender[sort(order(locations.top$gender)[locations.top$Country_work])]
new <-sort.int(locations.top$Country_work, decreasing=TRUE)
new
new <-sort.int(locations.top$gender, decreasing=TRUE)
new
locations.top$Country_work[sort(locations.top$gender)]
sort(locations.top$gender)
locations.top$gender[sort(locations.top$gender)]
locations.top$Country_work[order(locations.top$gender)]
locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
order(locations.top$gender, decreasing=TRUE)
?barlabs
?barlabels
new
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(new,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(new,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
sort(locations.top$gender,decreasing=TRUE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(c(1:29),1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(barlabs,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
barlabs
class(barlabs)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(as.character(barlabs),1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(as.numeric(barlabs),1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+
barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90)
barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
barlabels(1:29,-2,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
barlabels(1:29,1200,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, axes=FALSE)
?gap.barplot
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, xtics=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE)
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE)
barlabels(1:29,0,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE)
barlabels(1:29,0.1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE)
barlabels(1:29,0.1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=-2, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE)
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, col ="black")
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, col ="black",
xlab="", ylab="Number of responses")
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, col ="black",
xlab="", ylab="Number of responses", ytics=1)
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, col ="black",
xlab="", ylab="Number of responses", ytics=0:200, 1000:1300)
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, col ="black",
xlab="", ylab="Number of responses", ytics=c(1:200, 1000:1300))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE, col ="black",
xlab="", ylab="Number of responses", ytics=c(1:200, 1000:1300, 100))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(1:200, 1000:1300, 100))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(1:200, 1200:1300, 100))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1200:1300, 100))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1200,1300))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300))
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300))+
barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE,
xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300))+barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300))+barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses")+barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses") + barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,1000,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,1300,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,1500,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,1,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,500,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,800,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="", ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) + barlabels(1:29,600,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,550,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,550,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,530,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=FALSE, xlab=barlabs,
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=(barlabs, srt=90), xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=(barlabs=(srt=90)), xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300)) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), str =90) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, str=90, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), str =90) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, str=90, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), str =90, col=NULL) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=NULL) +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black, black") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black", col="black") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=T, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black, 1:29") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black") +
barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black"srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black,"srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black",srt=90)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col="black",las=2)
cols<-c("black")
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=cols,las=2)
cols<-c("black")[locations.top]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=cols,las=2)
cols<-c("black")[locations.top$Country_work]
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=cols,las=2)
#barlabels(1:29,535,labels=barlabs,cex=1,prop=0.5,miny=0,offset=0, srt=90, border=FALSE)
?all
quartz()
barlabs<-locations.top$Country_work[order(locations.top$gender, decreasing=TRUE)]
cols<-ifelse(locations.top$Country_work=country.list,"black",)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(201,1200),horiz=F, xaxlab=barlabs, xlab="",
ylab="Number of responses", ytics=c(0,50,100,150,200, 1242,1300), col=cols,las=2)
