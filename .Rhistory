theme(axis.text.x = element_text(angle=0, vjust=0.5))+labs(x="", y="Number of Responses", fill="")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ guides(fill=FALSE)
###13b Canada
canada<-subset(part2.change, Country=="Canada")
change.part.ca<-aggregate(gender~ partnership_change_10yrs, canada, length)
ggplot(data=change.part.ca, aes(x=partnership_change_10yrs, gender, fill=partnership_change_10yrs))+geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=0, vjust=0.5))+labs(title="Change in past 10yrs", x="", y="Number of Responses", fill="")+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ guides(fill=FALSE)
###14a Reason for change
head(part2.reason)
require(tidyr)
reason.pt.long<-gather(part2.reason, change.reason, yes, -Country, -gender, -Location)
unique(reason.pt.long$change.reason)
sum.reason<-data.frame(table(reason.pt.long$change.reason, reason.pt.long$yes))
ggplot(data=sum.reason, aes(x=reorder(Var1, -Freq), y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=0, vjust=0.5)) + guides(fill=FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+labs(title= "Reason for Change", x="", y="Number of Responses")+
scale_x_discrete(labels=c("Funding Related", "Interest Related", "Career Related", "Socially Related", "Other"))
### 14b Canada
canada<-subset(part2.reason, Country=="Canada")
require(tidyr)
reason.pt.long<-gather(canada, change.reason, yes, -Country, -gender, -Location)
unique(reason.pt.long$change.reason)
sum.reason<-data.frame(table(reason.pt.long$change.reason, reason.pt.long$yes))
ggplot(data=sum.reason, aes(x=reorder(Var1, -Freq), y=Freq, fill=Var1)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=0, vjust=0.5)) + guides(fill=FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+labs(title= "Reason for Change", x="", y="Number of Responses")+
scale_x_discrete(labels=c("Funding Related", "Interest Related", "Career Related", "Socially Related", "Other"))
####15a View of Change
view<-aggregate(gender~ view_change_partnership, part2.view, length)
levels(view$view_change_partnership)
# change order of the levels
view$view_change_partnership<-factor(view$view_change_partnership, levels(view$view_change_partnership)[c(6,4,2,3,5)])
ggplot(data=view, aes(x=view_change_partnership, y=gender, fill=view_change_partnership)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=0, vjust=0.5)) + guides(fill=FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+labs(title= "View of Change", x="", y="Number of Responses")
###15b Canada
canada<-subset(part2.view, Country=="Canada")
view<-aggregate(gender~ view_change_partnership, canada, length)
levels(view$view_change_partnership)
# change order of the levels
view$view_change_partnership<-factor(view$view_change_partnership, levels(view$view_change_partnership)[c(6,4,2,3,5)])
ggplot(data=view, aes(x=view_change_partnership, y=gender, fill=view_change_partnership)) + geom_bar(stat='identity')+
theme(axis.text.x = element_text(angle=0, vjust=0.5)) + guides(fill=FALSE)+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+labs(x="", y="Number of Responses")
###############
####Part3######
###############
## 17a  grant applications  all countries
head(part3.grants.long)
str(part3.grants.long)
part3.grants.long$type.grant<-as.character(part3.grants.long$type.grant)
#add time variable
part3.grants.long$time<-ifelse(grepl("11_15", part3.grants.long$type.grant), "2011-2015", "2006-2010")
part3.grants.long$type.grant[part3.grants.long$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
part3.grants.long$type.grant[part3.grants.long$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
part3.grants.long$type.grant[part3.grants.long$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
part3.grants.long$type.grant[part3.grants.long$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
part3.grants.long$type.grant[part3.grants.long$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
part3.grants.long$type.grant[part3.grants.long$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
grants<-aggregate(gender~ type.grant+time+number, part3.grants.long, length)
grants$type.grant<-as.factor(grants$type.grant)
#change order of levels
grants$number<-factor(grants$number, levels(grants$number)[c(1,2,6,7,3,4,5)])
grants$type.grant<-factor(grants$type.grant, levels(grants$type.grant)[c(2,3,1)])
ggplot(grants, aes(type.grant, gender, fill=number)) + geom_bar(stat="identity", position = "dodge")+facet_wrap(~time) +guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Number of grant applications", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## 17b  canada
canada<-subset(part3.grants.long, Country=="Canada")
head(canada)
canada$type.grant<-as.character(canada$type.grant)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
canada<-aggregate(gender~ type.grant+time+number, canada, length)
grants.ca$type.grant<-as.factor(grants.ca$type.grant)
#change order of levels
grants.ca$number<-factor(grants.ca$number, levels(grants.ca$number)[c(1,2,6,7,3,4,5)])
grants.ca$type.grant<-factor(grants.ca$type.grant, levels(grants.ca$type.grant)[c(2,3,1)])
ggplot(grants.ca, aes(type.grant, gender, fill=number)) + geom_bar(stat="identity", position = "dodge")+facet_wrap(~time) +guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Number of grant applications", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
## percent of applications successful
## grant success rates change in last 10 yrs
head(part3.change)
require(tidyr)
##switch to long format
change.long<-gather(part3.change, type, level, -Location, -gender, -Country)
head(change.long)
change<-aggregate(gender~type+level, change.long, length)
# remove non-response
change<-change[!change$level=="",]
ggplot(data=change, aes(x=level, gender, fill=type))+ geom_bar(stat='identity', position = "dodge") +
theme(axis.text.x = element_text(angle=90, vjust=0.5))
## Canada  by gender
canada<-subset(part3.change, Country=="Canada")
require(tidyr)
##switch to long format
change.long.ca<-gather(canada, type, level, -Location, -gender, -Country)
head(change.long.ca)
gender.change<-aggregate(Location~type+gender+level, change.long.ca, length)
head(gender.change)
#remove no response
gender.change<-gender.change[!gender.change$gender=="",]
gender.change<-gender.change[!gender.change$level=="",]
# turn to percents
male<-subset(gender.change, gender=="Male")
female<-subset(gender.change, gender=="Female")
other<-subset(gender.change, gender=="Other")
gender.change$Location<-ifelse(gender.change$gender=="Male", (gender.change$Location/sum(male$Location))*100, gender.change$Location)
gender.change$Location<-ifelse(gender.change$gender=="Female", (gender.change$Location/sum(female$Location))*100, gender.change$Location)
gender.change$Location<-ifelse(gender.change$gender=="Other", (gender.change$Location/sum(other$Location))*100, gender.change$Location)
str(gender.change)
# change type to factor with levels
gender.change$type<-as.factor(gender.change$type)
gender.change$level<-str_replace_all(gender.change$level, "Will", "")
gender.change$level<-as.factor(gender.change$level)
#change order of levels
gender.change$level<-factor(gender.change$level, levels(gender.change$level)[c(1,3,2,6,4,5)])
gender.change$type<-factor(gender.change$type, levels(gender.change$type)[c(2,3,1)])
ggplot(data=gender.change, aes(x=level, Location, fill=type))+geom_bar(stat="identity", position="dodge")+ scale_x_discrete(limits = rev(levels(gender.change$level)))+
facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+
scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
dev.off()
canada<-subset(part3.grants.long, Country=="Canada")
head(canada)
canada$type.grant<-as.character(canada$type.grant)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
grants.ca<-aggregate(gender~ type.grant+time+number, canada, length)
grants.ca$type.grant<-as.factor(grants.ca$type.grant)
#change order of levels
grants.ca$number<-factor(grants.ca$number, levels(grants.ca$number)[c(1,2,6,7,3,4,5)])
grants.ca$type.grant<-factor(grants.ca$type.grant, levels(grants.ca$type.grant)[c(2,3,1)])
ggplot(grants.ca, aes(type.grant, gender, fill=number)) + geom_bar(stat="identity", position = "dodge")+facet_wrap(~time) +guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Number of grant applications", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
canada<-subset(part3.grants.long, Country=="Canada")
head(canada)
canada$type.grant<-as.character(canada$type.grant)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
grants.ca<-aggregate(gender~ type.grant+time+number, canada, length)
grants.ca$type.grant<-as.factor(grants.ca$type.grant)
#change order of levels
grants.ca$number<-factor(grants.ca$number, levels(grants.ca$number)[c(1,2,6,7,3,4,5)])
grants.ca$type.grant<-factor(grants.ca$type.grant, levels(grants.ca$type.grant)[c(2,3,1)])
ggplot(grants.ca, aes(type.grant, gender, fill=number)) + geom_bar(stat="identity", position = "dodge")+facet_wrap(~time) +guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Number of grant applications", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
head(grants.ca)
tail(grants.ca)
canada<-subset(part3.grants.long, Country=="Canada")
head(canada)
canada$type.grant<-as.character(canada$type.grant)
head(canada)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
part3.grants.long<-read.csv(file="data/gya-part3.grants.long.csv")
part3.change<-read.csv(file="data/gya-part3.change.csv")
canada<-subset(part3.grants.long, Country=="Canada")
head(canada)
canada$type.grant<-as.character(canada$type.grant)
head(canada)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type.grant), "2011-2015", "2006-2010")
head(canada)
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_fundamental"]<-"Fundamental"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_use"]<-"Use-Inspired"
canada$type.grant[canada$type.grant=="external_pi_grant_11_15_applied"]<-"Applied"
canada$type.grant[canada$type.grant=="external_pi_grant_6_10_applied"]<-"Applied"
head(canada)
grants.ca<-aggregate(gender~ type.grant+time+number, canada, length)
tail(grants.ca)
grants.ca$type.grant<-as.factor(grants.ca$type.grant)
#change order of levels
grants.ca$number<-factor(grants.ca$number, levels(grants.ca$number)[c(1,2,6,7,3,4,5)])
grants.ca$type.grant<-factor(grants.ca$type.grant, levels(grants.ca$type.grant)[c(2,3,1)])
ggplot(grants.ca, aes(type.grant, gender, fill=number)) + geom_bar(stat="identity", position = "dodge")+facet_wrap(~time) +guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Number of grant applications", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
res.plot<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current","percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
res.plot$percent<-str_replace_all(res.plot$percent, "%", "")
res.plot$percent<-as.numeric(as.character(res.plot$percent))
res.plot$type<-as.character(res.plot$type)
# add time variable
res.plot$time<-ifelse(grepl( "current", res.plot$type),"Current", "Past")
res.plot$type[res.plot$type=="percent_Applied_Research_past"]<-"Applied"
res.plot$type[res.plot$type=="percent_Applied_Research_current"]<-"Applied"
res.plot$type[res.plot$type=="percent_Fundamental_Research_past"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_fundemental_research_current"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_past"]<-"Use inspired"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_current"]<-"Use inspired"
# change order of the levels
res.plot$time<-as.factor(res.plot$time)
res.plot$time<-factor(res.plot$time, levels(res.plot$time)[c(2,1)])
ggplot(res.plot[res.plot$Country=="Canada",], aes(type, percent, fill=time)) + geom_boxplot() +guides(fill=guide_legend(title=NULL, reverse=FALSE, nrow=2)) +
labs(x="Research type", y="% research", title="Canada")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
res.plot<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current","percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
head(res.plot)
res.plot$percent<-str_replace_all(res.plot$percent, "%", "")
res.plot$percent<-as.numeric(as.character(res.plot$percent))
res.plot$type<-as.character(res.plot$type)
head(res.plot)
# add time variable
res.plot$time<-ifelse(grepl( "current", res.plot$type),"Current", "Past")
head(res.plot)
tail(res.plot)
View(res.plot)
View(res.plot)
survey.type<-subset(part1, select = c("Location","Country",  "gender","percent_fundemental_research_current"  ,     "percent_Use_inspired_Research_current"   ,
"percent_Applied_Research_current"   ,        "changed_10yrs"        ,                      "percent_Fundamental_Research_past"         ,
"percent_Use_inspired_Research_past"  ,       "percent_Applied_Research_past"))
survey<-read.csv("data/gya-without-incomplete.csv", header=TRUE)
part1<-subset(survey, select = c("Location", "Country", "gender","what_participant_group"  ,   "percent_fundemental_research_current"  ,     "percent_Use_inspired_Research_current"   ,
"percent_Applied_Research_current"   ,        "changed_10yrs"        ,                      "percent_Fundamental_Research_past"         ,
"percent_Use_inspired_Research_past"  ,       "percent_Applied_Research_past"    ,          "Main_reason_change_interest_related" ,
"Main_reason_change_Career_related" ,         "Main_reason_change_Funding_related" ,        "Main_reason_change_Socially_related" ,
"Main_reason_change_Other"  ,                 "Main_reason_change_Other_text"   ,           "view_change_of_type"))
## 1. change all relevant variables to characters.......
part1$percent_Applied_Research_past<-as.character(part1$percent_Applied_Research_past)
part1$percent_Applied_Research_current<-as.character(part1$percent_Applied_Research_current)
part1$percent_fundemental_research_current<-as.character(part1$percent_fundemental_research_current)
part1$percent_Fundamental_Research_past<-as.character(part1$percent_Fundamental_Research_past)
part1$percent_Use_inspired_Research_current<-as.character(part1$percent_Use_inspired_Research_current)
part1$percent_Use_inspired_Research_past<-as.character(part1$percent_Use_inspired_Research_past)
require(stringr)
## remove all % symbols
part1$percent_Applied_Research_current<-str_replace_all(part1$percent_Applied_Research_current, "[%]", "")
part1$percent_Use_inspired_Research_current<-str_replace_all(part1$percent_Use_inspired_Research_current, "[%]", "")
part1$percent_fundemental_research_current<-str_replace_all(part1$percent_fundemental_research_current, "[%]", "")
part1$percent_Applied_Research_past<-str_replace_all(part1$percent_Applied_Research_past, "[%]", "")
part1$percent_Fundamental_Research_past<-str_replace_all(part1$percent_Fundamental_Research_past, "[%]", "")
part1$percent_Use_inspired_Research_past<-str_replace_all(part1$percent_Use_inspired_Research_past, "[%]", "")
survey.type<-subset(part1, select = c("Location","Country",  "gender","percent_fundemental_research_current"  ,     "percent_Use_inspired_Research_current"   ,
"percent_Applied_Research_current"   ,        "changed_10yrs"        ,                      "percent_Fundamental_Research_past"         ,
"percent_Use_inspired_Research_past"  ,       "percent_Applied_Research_past"))
#survey.type<-subset(part1, select=c("Location","Country",  "gender", "percent_fundemental_research_current", "percent_Applied_Research_current", "percent_Use_inspired_Research_current"))
#fundemental<-aggregate(Location ~ percent_fundemental_research_current, survey.type, length)
#applied<-aggregate(Location ~ percent_Applied_Research_current, survey.type, length)
#use<-aggregate(Location ~ percent_Use_inspired_Research_current, survey.type, length)
## everything's fixed. % are gone.
### now we are going to standardise the % for each survey
## 1. if every category is blank, turn to NA
survey.type$percent_fundemental_research_current[survey.type$percent_fundemental_research_current=="" &
survey.type$percent_Applied_Research_current=="" & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey.type$percent_Applied_Research_current[is.na(survey.type$percent_fundemental_research_current) &
survey.type$percent_Applied_Research_current=="" & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey.type$percent_Use_inspired_Research_current[is.na(survey.type$percent_fundemental_research_current) &
is.na(survey.type$percent_Applied_Research_current) & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey.type$percent_Fundamental_Research_past[survey.type$percent_Fundamental_Research_past=="" &
survey.type$percent_Applied_Research_past=="" & survey.type$percent_Use_inspired_Research_past==""]<-NA
survey.type$percent_Applied_Research_past[is.na(survey.type$percent_Fundamental_Research_past) &
survey.type$percent_Applied_Research_past=="" & survey.type$percent_Use_inspired_Research_past==""]<-NA
survey.type$percent_Use_inspired_Research_past[is.na(survey.type$percent_Fundamental_Research_past) &
is.na(survey.type$percent_Applied_Research_past) & survey.type$percent_Use_inspired_Research_past==""]<-NA
## 2. categories with answers and blanks, turn blanks to 0
survey.type$percent_fundemental_research_current[survey.type$percent_fundemental_research_current==""]<-0
survey.type$percent_Applied_Research_current[survey.type$percent_Applied_Research_current==""]<-0
survey.type$percent_Use_inspired_Research_current[survey.type$percent_Use_inspired_Research_current==""]<-0
survey.type$percent_Fundamental_Research_past[survey.type$percent_Fundamental_Research_past==""]<-0
survey.type$percent_Applied_Research_past[survey.type$percent_Applied_Research_past==""]<-0
survey.type$percent_Use_inspired_Research_past[survey.type$percent_Use_inspired_Research_past==""]<-0
survey.type<-survey.type[!is.na(survey.type$percent_Fundamental_Research_past),]
survey.type<-survey.type[!(survey.type$percent_Fundamental_Research_past==0 & survey.type$percent_Applied_Research_past==0 & survey.type$percent_Use_inspired_Research_past==0),]
survey.type<-survey.type[!is.na(survey.type$percent_fundemental_research_current),]
survey.type<-survey.type[!(survey.type$percent_fundemental_research_current==0 & survey.type$percent_Applied_Research_current==0 & survey.type$percent_Use_inspired_Research_current==0),]
## 3. Standardise % values > 100 in total
survey.type$percent_Applied_Research_current<-as.numeric(survey.type$percent_Applied_Research_current)
survey.type$percent_fundemental_research_current<-as.numeric(survey.type$percent_fundemental_research_current)
survey.type$percent_Use_inspired_Research_current<-as.numeric(survey.type$percent_Use_inspired_Research_current)
survey.type$total_research<-rowSums(survey.type[,4:6])
head(survey.type[survey.type$total_research>100,])
survey.type$percent_Applied_Research_past<-as.numeric(survey.type$percent_Applied_Research_past)
survey.type$percent_Fundamental_Research_past<-as.numeric(survey.type$percent_Fundamental_Research_past)
survey.type$percent_Use_inspired_Research_past<-as.numeric(survey.type$percent_Use_inspired_Research_past)
survey.type$total_research<-rowSums(survey.type[,4:6])
head(survey.type[survey.type$total_research>100,])
## need to change 64 surveys that are over 100%
survey.type$percent_Applied_Research_current<-ifelse(survey.type$total_research>100,(survey.type$percent_Applied_Research_current/survey.type$total_research)*100, survey.type$percent_Applied_Research_current)
survey.type$percent_fundemental_research_current<-ifelse(survey.type$total_research>100,(survey.type$percent_fundemental_research_current/survey.type$total_research)*100, survey.type$percent_fundemental_research_current)
survey.type$percent_Use_inspired_Research_current<-ifelse(survey.type$total_research>100,(survey.type$percent_Use_inspired_Research_current/survey.type$total_research)*100, survey.type$percent_Use_inspired_Research_current)
survey.type$percent_Applied_Research_past<-ifelse(survey.type$total_research>100,(survey.type$percent_Applied_Research_past/survey.type$total_research)*100, survey.type$percent_Applied_Research_past)
survey.type$percent_Fundamental_Research_past<-ifelse(survey.type$total_research>100,(survey.type$percent_Fundamental_Research_past/survey.type$total_research)*100, survey.type$percent_Fundamental_Research_past)
survey.type$percent_Use_inspired_Research_past<-ifelse(survey.type$total_research>100,(survey.type$percent_Use_inspired_Research_past/survey.type$total_research)*100, survey.type$percent_Use_inspired_Research_past)
head(survey.type[survey.type$total_research>100,])
## switch to long format
require(tidyr)
survey.long<-gather(survey.type, type, percent, -Location, -gender, -Country)
survey.type<-subset(part1, select = c("Location","Country",  "gender","percent_fundemental_research_current"  ,     "percent_Use_inspired_Research_current"   ,
"percent_Applied_Research_current"   ,      "percent_Fundamental_Research_past"         ,
"percent_Use_inspired_Research_past"  ,       "percent_Applied_Research_past"))
#survey.type<-subset(part1, select=c("Location","Country",  "gender", "percent_fundemental_research_current", "percent_Applied_Research_current", "percent_Use_inspired_Research_current"))
#fundemental<-aggregate(Location ~ percent_fundemental_research_current, survey.type, length)
#applied<-aggregate(Location ~ percent_Applied_Research_current, survey.type, length)
#use<-aggregate(Location ~ percent_Use_inspired_Research_current, survey.type, length)
## everything's fixed. % are gone.
### now we are going to standardise the % for each survey
## 1. if every category is blank, turn to NA
survey.type$percent_fundemental_research_current[survey.type$percent_fundemental_research_current=="" &
survey.type$percent_Applied_Research_current=="" & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey.type$percent_Applied_Research_current[is.na(survey.type$percent_fundemental_research_current) &
survey.type$percent_Applied_Research_current=="" & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey.type$percent_Use_inspired_Research_current[is.na(survey.type$percent_fundemental_research_current) &
is.na(survey.type$percent_Applied_Research_current) & survey.type$percent_Use_inspired_Research_current==""]<-NA
survey.type$percent_Fundamental_Research_past[survey.type$percent_Fundamental_Research_past=="" &
survey.type$percent_Applied_Research_past=="" & survey.type$percent_Use_inspired_Research_past==""]<-NA
survey.type$percent_Applied_Research_past[is.na(survey.type$percent_Fundamental_Research_past) &
survey.type$percent_Applied_Research_past=="" & survey.type$percent_Use_inspired_Research_past==""]<-NA
survey.type$percent_Use_inspired_Research_past[is.na(survey.type$percent_Fundamental_Research_past) &
is.na(survey.type$percent_Applied_Research_past) & survey.type$percent_Use_inspired_Research_past==""]<-NA
## 2. categories with answers and blanks, turn blanks to 0
survey.type$percent_fundemental_research_current[survey.type$percent_fundemental_research_current==""]<-0
survey.type$percent_Applied_Research_current[survey.type$percent_Applied_Research_current==""]<-0
survey.type$percent_Use_inspired_Research_current[survey.type$percent_Use_inspired_Research_current==""]<-0
survey.type$percent_Fundamental_Research_past[survey.type$percent_Fundamental_Research_past==""]<-0
survey.type$percent_Applied_Research_past[survey.type$percent_Applied_Research_past==""]<-0
survey.type$percent_Use_inspired_Research_past[survey.type$percent_Use_inspired_Research_past==""]<-0
survey.type<-survey.type[!is.na(survey.type$percent_Fundamental_Research_past),]
survey.type<-survey.type[!(survey.type$percent_Fundamental_Research_past==0 & survey.type$percent_Applied_Research_past==0 & survey.type$percent_Use_inspired_Research_past==0),]
survey.type<-survey.type[!is.na(survey.type$percent_fundemental_research_current),]
survey.type<-survey.type[!(survey.type$percent_fundemental_research_current==0 & survey.type$percent_Applied_Research_current==0 & survey.type$percent_Use_inspired_Research_current==0),]
## 3. Standardise % values > 100 in total
survey.type$percent_Applied_Research_current<-as.numeric(survey.type$percent_Applied_Research_current)
survey.type$percent_fundemental_research_current<-as.numeric(survey.type$percent_fundemental_research_current)
survey.type$percent_Use_inspired_Research_current<-as.numeric(survey.type$percent_Use_inspired_Research_current)
survey.type$total_research<-rowSums(survey.type[,4:6])
head(survey.type[survey.type$total_research>100,])
survey.type$percent_Applied_Research_past<-as.numeric(survey.type$percent_Applied_Research_past)
survey.type$percent_Fundamental_Research_past<-as.numeric(survey.type$percent_Fundamental_Research_past)
survey.type$percent_Use_inspired_Research_past<-as.numeric(survey.type$percent_Use_inspired_Research_past)
survey.type$total_research<-rowSums(survey.type[,4:6])
head(survey.type[survey.type$total_research>100,])
## need to change 64 surveys that are over 100%
survey.type$percent_Applied_Research_current<-ifelse(survey.type$total_research>100,(survey.type$percent_Applied_Research_current/survey.type$total_research)*100, survey.type$percent_Applied_Research_current)
survey.type$percent_fundemental_research_current<-ifelse(survey.type$total_research>100,(survey.type$percent_fundemental_research_current/survey.type$total_research)*100, survey.type$percent_fundemental_research_current)
survey.type$percent_Use_inspired_Research_current<-ifelse(survey.type$total_research>100,(survey.type$percent_Use_inspired_Research_current/survey.type$total_research)*100, survey.type$percent_Use_inspired_Research_current)
survey.type$percent_Applied_Research_past<-ifelse(survey.type$total_research>100,(survey.type$percent_Applied_Research_past/survey.type$total_research)*100, survey.type$percent_Applied_Research_past)
survey.type$percent_Fundamental_Research_past<-ifelse(survey.type$total_research>100,(survey.type$percent_Fundamental_Research_past/survey.type$total_research)*100, survey.type$percent_Fundamental_Research_past)
survey.type$percent_Use_inspired_Research_past<-ifelse(survey.type$total_research>100,(survey.type$percent_Use_inspired_Research_past/survey.type$total_research)*100, survey.type$percent_Use_inspired_Research_past)
head(survey.type[survey.type$total_research>100,])
## switch to long format
require(tidyr)
survey.long<-gather(survey.type, type, percent, -Location, -gender, -Country)
head(survey.long)
View(survey.long)
View(survey.long)
write.csv(survey.long, file="data/gya-surveys-cleaned-research.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.past<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.wo.past.total<-subset(research.past, type_past%in%c("percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
head(research.past)
research.wo.past.total<-subset(research.past, type%in%c("percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
ggplot(research.wo.past.total, aes(type_past, percent_past, fill=type_past)) + geom_boxplot() + theme(axis.text.x = element_blank()) +
theme(axis.title.x = element_blank())
ggplot(research.wo.past.total, aes(type, percent_past, fill=type)) + geom_boxplot() + theme(axis.text.x = element_blank()) +
theme(axis.title.x = element_blank())
## 6b Type of research in the past  bar
type.avg.past<-aggregate(percent_past~ type_past + Country, research.wo.past.total, mean)
type.avg.past<-aggregate(percent~ type + Country, research.wo.past.total, mean)
ggplot(type.avg.past, aes(Country, percent)) + geom_bar(stat="identity", aes(fill=factor(type))) + theme(axis.text.x = element_text(angle=90, vjust=0.5))
## 6c  Canada
canada<-subset(research.past, Country=="Canada")
summary(canada)
canada<-subset(research.past, Country=="Canada")
research.wo.past.total.ca<-subset(research.past, type%in%c("percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
ggplot(research.wo.past.total.ca, aes(type, percent, fill=type)) + geom_boxplot() + theme(axis.text.x = element_blank()) +
theme(axis.title.x = element_blank())
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
res.plot<-subset(research, type%in%c("percent_fundemental_research_current",  "percent_Applied_Research_current" , "percent_Use_inspired_Research_current","percent_Applied_Research_past",  "percent_Fundamental_Research_past" , "percent_Use_inspired_Research_past"))
head(res.plot)
res.plot$percent<-str_replace_all(res.plot$percent, "%", "")
res.plot$percent<-as.numeric(as.character(res.plot$percent))
res.plot$type<-as.character(res.plot$type)
head(res.plot)
# add time variable
res.plot$time<-ifelse(grepl( "current", res.plot$type),"Current", "Past")
tail(res.plot)
res.plot$type[res.plot$type=="percent_Applied_Research_past"]<-"Applied"
res.plot$type[res.plot$type=="percent_Applied_Research_current"]<-"Applied"
res.plot$type[res.plot$type=="percent_Fundamental_Research_past"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_fundemental_research_current"]<-"Fundamental"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_past"]<-"Use inspired"
res.plot$type[res.plot$type=="percent_Use_inspired_Research_current"]<-"Use inspired"
# change order of the levels
res.plot$time<-as.factor(res.plot$time)
res.plot$time<-factor(res.plot$time, levels(res.plot$time)[c(2,1)])
ggplot(res.plot[res.plot$Country=="Canada",], aes(type, percent, fill=time)) + geom_boxplot() +guides(fill=guide_legend(title=NULL, reverse=FALSE, nrow=2)) +
labs(x="Research type", y="% research", title="Canada")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
part3.success$successful_grants_11_15_fundamental<-str_replace_all(part3.success$successful_grants_11_15_fundamental, "[%]", "")
part3.success$successful_grants_11_15_fundamental<-str_replace_all(part3.success$successful_grants_11_15_fundamental, "[%]", "")
part3.success$successful_grants_11_15_use<-str_replace_all(part3.success$successful_grants_11_15_use, "[%]", "")
part3.success$successful_grants_11_15_applied<-str_replace_all(part3.success$successful_grants_11_15_applied, "[%]", "")
part3.success$successful_grants_6_10_fundamental<-str_replace_all(part3.success$successful_grants_6_10_fundamental, "[%]", "")
part3.success$successful_grants_6_10_use<-str_replace_all(part3.success$successful_grants_6_10_use, "[%]", "")
part3.success$successful_grants_6_10_applied<-str_replace_all(part3.success$successful_grants_6_10_applied, "[%]", "")
head(part3.success)
require(tidyr)
part3.success.long<-gather(part3.success, type, percent, -Location, -gender, -Country)
head(part3.success.long)
part3.success.long<-part3.success.long[!(part3.success.long$percent==""),]
part3.success.long<-part3.success.long[!(part3.success.long$percent=="No need for applications for this research type"),]
head(part3.success.long)
write.csv(part3.success.long, file="data/gya-part3.success.long.csv", row.names = FALSE)
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
head(part3.success.long)
success<-aggregate(gender~type+percent, part3.success.long, length)
head(success)
tail(success)
head(part3.success.long)
success<-aggregate(gender~type+percent, part3.success.long, length)
ggplot(success, aes(type, gender, fill=percent))+geom_bar(stat="identity", position = "dodge")
str(part3.success.long)
unique(part3.success.long$type)
part3.success.long$time<-ifelse(grepl("11_15", part3.success.long$type), "2011-2015", "2006-2010")
part3.success.long$type[part3.success.long$type=="successful_grants_11_15_fundamental"]<-"Fundamental"
part3.success.long$type[part3.success.long$type=="successful_grants_6_10_fundamental"]<-"Fundamental"
part3.success.long$type[part3.success.long$type=="successful_grants_11_15_use"]<-"Use-Inspired"
part3.success.long$type[part3.success.long$type=="successful_grants_6_10_use"]<-"Use-Inspired"
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
head(part3.success.long)
str(part3.success.long)
#add time variable
part3.success.long$time<-ifelse(grepl("11_15", part3.success.long$type), "2011-2015", "2006-2010")
part3.success.long$type[part3.success.long$type=="successful_grants_11_15_fundamental"]<-"Fundamental"
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
part3.success.long$type<-as.character(part3.success.long$type)
#add time variable
part3.success.long$time<-ifelse(grepl("11_15", part3.success.long$type), "2011-2015", "2006-2010")
head(part3.success.long)
part3.success.long$type[part3.success.long$type=="successful_grants_11_15_fundamental"]<-"Fundamental"
part3.success.long$type[part3.success.long$type=="successful_grants_6_10_fundamental"]<-"Fundamental"
part3.success.long$type[part3.success.long$type=="successful_grants_11_15_use"]<-"Use-Inspired"
part3.success.long$type[part3.success.long$type=="successful_grants_6_10_use"]<-"Use-Inspired"
part3.success.long$type[part3.success.long$type=="successful_grants_11_15_applied"]<-"Applied"
part3.success.long$type[part3.success.long$type=="successful_grants_6_10_applied"]<-"Applied"
head(part3.success.long)
ggplot(part3.success.long, aes(type, gender, fill=percent))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~time)
success<-aggregate(gender~type+percent, part3.success.long, length)
ggplot(success, aes(type, gender, fill=percent))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~time)
success<-aggregate(gender~type+percent+time, part3.success.long, length)
ggplot(success, aes(type, gender, fill=percent))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~time)
ggplot(success, aes(type, gender, fill=percent))+geom_bar(stat="identity")+facet_wrap(~time)
ggplot(success, aes(type, gender, fill=percent))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~time)
ggplot(success, aes(percent, gender, fill=type))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~time)
ggplot(success, aes(percent, gender, fill=time))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~type)
ggplot(success, aes(percent, gender, fill=time))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~type)+
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Percent of success", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
str(success)
success$type<-as.factor(success$type)
levels(success$type)
success$type<-factor(success$type, levels(success$type)[c(2,3,1)])
ggplot(success, aes(percent, gender, fill=time))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~type)+
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Percent of success", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
canada<-subset(part3.success.long, Country=="Canada")
canada$type<-as.character(canada$type)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type), "2011-2015", "2006-2010")
canada$type[canada$type=="successful_grants_11_15_fundamental"]<-"Fundamental"
canada$type[canada$type=="successful_grants_6_10_fundamental"]<-"Fundamental"
canada$type[canada$type=="successful_grants_11_15_use"]<-"Use-Inspired"
canada$type[canada$type=="successful_grants_6_10_use"]<-"Use-Inspired"
canada$type[canada$type=="successful_grants_11_15_applied"]<-"Applied"
canada$type[canada$type=="successful_grants_6_10_applied"]<-"Applied"
success.ca<-aggregate(gender~type+percent+time, canada, length)
#change order of types
success.ca$type<-as.factor(success.ca$type)
success.ca$type<-factor(success.ca$type, levels(success$type)[c(2,3,1)])
ggplot(success.ca, aes(percent, gender, fill=time))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~type)+
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Percent of success", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
canada<-subset(part3.success.long, Country=="Canada")
canada$type<-as.character(canada$type)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type), "2011-2015", "2006-2010")
part3.success.long<-read.csv(file="data/gya-part3.success.long.csv")
canada<-subset(part3.success.long, Country=="Canada")
canada$type<-as.character(canada$type)
#add time variable
canada$time<-ifelse(grepl("11_15", canada$type), "2011-2015", "2006-2010")
canada$type[canada$type=="successful_grants_11_15_fundamental"]<-"Fundamental"
canada$type[canada$type=="successful_grants_6_10_fundamental"]<-"Fundamental"
canada$type[canada$type=="successful_grants_11_15_use"]<-"Use-Inspired"
canada$type[canada$type=="successful_grants_6_10_use"]<-"Use-Inspired"
canada$type[canada$type=="successful_grants_11_15_applied"]<-"Applied"
canada$type[canada$type=="successful_grants_6_10_applied"]<-"Applied"
success.ca<-aggregate(gender~type+percent+time, canada, length)
#change order of types
success.ca$type<-as.factor(success.ca$type)
success.ca$type<-factor(success.ca$type, levels(success$type)[c(2,3,1)])
ggplot(success.ca, aes(percent, gender, fill=time))+geom_bar(stat="identity", position = "dodge")+facet_wrap(~type)+
guides(fill=guide_legend(title=NULL, reverse=FALSE)) +
labs(x="Percent of success", y="Number of responses")+theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
