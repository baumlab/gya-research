"Main_reason_change_Other"))
#############
####Part4####
#############
#read in non subsetted data again
survey<-read.csv("data/July-7-2016-7pm-Toronto_simplified.csv", header=TRUE)
### keep complete data only
survey<-survey[survey$Status=="Complete",]
colnames(survey)
states<-c("California","New York", "Pennsylvania", "Nebraska", "Massachusetts", "Vermont","Texas",
"Michigan", "Maryland", "Florida", "Washington", "Oregon", "Nevada", "Minnesota", "Arizona",
"Wisconsin", "Virginia", "Utah", "Ohio", "North Carolina", "New Jersey", "New Hampshire",
"Maine", "Louisiana", "Indiana", "Hawaii", "Alabama", "Tennessee", "Oklahoma", "New Mexico",
"Missouri", "Mississippi", "Iowa", "Delaware", "Colorado", "Illinois")
prov<-c("Ontario", "Quebec", "British Columbia", "Alberta", "Nova Scotia", "New Brunswick",
"Newfoundland and Labrador", "Manitoba", "Saskatchewan", "Prince Edward Island", "Yukon Territory",
"Nunavut")
survey$Country<-as.character(survey$Location)
survey$Country<-ifelse(survey$Country%in%states, 'USA', survey$Country)
survey$Country<-ifelse(survey$Country%in%prov, 'Canada', survey$Country)
survey$Country<-as.factor(survey$Country)
survey.part4<-subset(survey, select=c("Location","Country", "gender","opinion_fundamental_important",
"high_priority_fundamental", "high_priority_use_inspired", "high_priority_applied",
"high_priority_no_change", "available_funding_fundamental", "available_funding_use_inspired", "available_funding_applied",
"next_generation"))
############ save file as csv#############################
dim(survey)
write.csv(survey.what, file="data/gya-country-responses.csv")
write.csv(survey.long, file="data/gya-surveys-cleaned-research.csv")
write.csv(survey.long.past, file="data/gya-surveys-cleaned-research-past.csv")
write.csv(survey.change, file="data/gya-change-reason.csv")
write.csv(survey.part4, file="data/gya-survey-part4")
survey.all<-read.csv("data/Jul 18 2016 1149am - Hamilton.csv", header=TRUE)
survey<-read.csv(file="data/gya-without-incomplete.csv")
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4")
gender<-aggregate(Location ~ gender, survey, length)
country_work<-aggregate(gender ~ Country_work, survey, length)
locations<-aggregate(gender ~ Country, survey.what, length)
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y="Number of responses", x="")  +
geom_text(aes(label=gender), angle=90, hjust=-1, size=3) +
#geom_text(aes(label=Country_work), angle=90, hjust=-0.5)
lims(y=c(0, 1600)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=8), axis.title=element_text(size=12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
availability.ca
availability.change.long.ca
head(availability.change.long.ca)
gender.percieve<-aggregate(level ~ gender + what.type, availability.change.long.ca, sum)
gender.percieve<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
gender.percieve<-gender.percieve[!gender.percieve$level=="",]
gender.percieve
gender.perceive
availability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
# turn to percents
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$what.type<-ifelse(gender.perceive$gender=='Male',(gender.perceive$what.type/sum(male$what.type))*100, gender.perceive$what.type)
gender.perceive$what.type<-ifelse(gender.perceive$gender=='Female',(gender.perceive$what.type/sum(female$what.type))*100, gender.perceive$what.type)
gender.perceive$what.type<-ifelse(gender.perceive$gender=='Other',(gender.perceive$what.type/sum(other$what.type))*100, gender.perceive$what.type)
## change type to factor with levels
availability.ca$level<-str_replace_all(availability.ca$level, "Will ", "")
availability.ca$what.type<-as.factor(availability.ca$what.type)
availability.ca$level<-as.factor(availability.ca$level)
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
# turn to percents
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$what.type<-ifelse(gender.perceive$gender=='Male',(gender.perceive$what.type/sum(male$what.type))*100, gender.perceive$what.type)
gender.perceive$what.type<-ifelse(gender.perceive$gender=='Female',(gender.perceive$what.type/sum(female$what.type))*100, gender.perceive$what.type)
male<-subset(gender.perceive, gender=="Male")
male
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$level<-ifelse(gender.perceive$gender=='Male',(gender.perceive$level/sum(male$level))*100, gender.perceive$level)
gender.perceive$level<-ifelse(gender.perceive$gender=='Female',(gender.perceive$level/sum(female$level))*100, gender.perceive$level)
gender.perceive$level<-ifelse(gender.perceive$gender=='Other',(gender.perceive$level/sum(other$level))*100, gender.perceive$level)
## change type to factor with levels
gender.perceive$level<-str_replace_all(gender.perceive$level, "Will ", "")
gender.perceive$what.type<-as.factor(gender.perceive$what.type)
gender.perceive$level<-as.factor(gender.perceive$level)
## change order of levels
gender.perceive$level<-factor(gender.perceive$level, levels(gender.perceive$level)[c(4,5,6,3,2,1 )])
gender.perceive$what.type<-factor(gender.perceive$what.type, levels(gender.perceive$what.type)[c(2,3,1)])
ggplot(data=availability.ca, aes(x=level, gender, fill=what.type))+ geom_bar(stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=0), legend.title=element_blank(), legend.position=c(0.8, 0.8)) + scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) +# scale_x_discrete(limits=rev(levels(availability.ca$level)))
labs(x="", y="Number of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=level, gender, fill=what.type))+ geom_bar(stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=0), legend.title=element_blank(), legend.position=c(0.8, 0.8)) + scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) +# scale_x_discrete(limits=rev(levels(availability.ca$level)))
labs(x="", y="Number of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=what.type, level, fill=what.type))+ geom_bar(stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=0), legend.title=element_blank(), legend.position=c(0.8, 0.8)) + scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) +# scale_x_discrete(limits=rev(levels(availability.ca$level)))
labs(x="", y="Number of responses") + facet_wrap(~gender)
male<-subset(gender.perceive, gender=="Male")
male
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
# turn to percents
male<-subset(gender.perceive, gender=="Male")
male
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$level<-ifelse(gender.perceive$gender=='Male',(gender.perceive$level/sum(male$level))*100, gender.perceive$level)
gender.perceive
gender.perceive
availability.change.long.ca<-gather(canada, what.type, level, -Location, -gender, -Country)
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
head(canada)
head(availability.change.long.ca)
availability.change.long.ca<-gather(canada, what.type, level, gender, -Location, -Country)
head(availability.change.long.ca)
canada<-subset(availability.change, Country=="Canada")
head(canada)
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, gender, -Location, -Country)
head(availability.change.long.ca)
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country)
head(availability.change.long.ca)
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
gender.perceive
gender.perceive<-aggregate(level ~ gender + what.type, availability.change.long.ca, length)
gender.perceive
gender.perceive<-aggregate(gender ~ level + what.type, availability.change.long.ca, length)
gender.perceive
gender.perceive<-aggregate(what.type ~ level + gender, availability.change.long.ca, length)
gender.perceive
head(availability.change.long.ca)
gender.perceive<-aggregate(level ~ what.type + gender, availability.change.long.ca, length)
gender.perceive
head(availability.change.long.ca)
gender.perceive<-aggregate(level ~ what.type + gender+level, availability.change.long.ca, length)
gender.perceive
head(canada)
canada<-subset(availability.change, Country=="Canada")
head(canada)
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country)
head(availability.change.long.ca)
head(canada)
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country)
head(availability.change.long.ca)
gender.perceive<-aggregate(level ~ what.type + gender+level, availability.change.long.ca, length)
gender.perceive
gender.perceive<-aggregate(Location ~ what.type + gender+level, availability.change.long.ca, length)
gender.perceive
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
# turn to percents
male<-subset(gender.perceive, gender=="Male")
male
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$level<-ifelse(gender.perceive$gender=='Male',(gender.perceive$level/sum(male$level))*100, gender.perceive$level)
gender.perceive
male
male<-subset(gender.perceive, gender=="Male")
male
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$Location<-ifelse(gender.perceive$gender=='Male',(gender.perceive$Location/sum(male$Location))*100, gender.perceive$Location)
gender.perceive
gender.perceive$Location<-ifelse(gender.perceive$gender=='Female',(gender.perceive$Location/sum(female$Location))*100, gender.perceive$Location)
gender.perceive$Location<-ifelse(gender.perceive$gender=='Other',(gender.perceive$Location/sum(other$Location))*100, gender.perceive$Location)
## change type to factor with levels
male<-subset(gender.perceive, gender=="Male")
male
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$Location<-ifelse(gender.perceive$gender=='Male',(gender.perceive$Location/sum(male$Location))*100, gender.perceive$Location)
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
head(canada)
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country)
head(availability.change.long.ca)
gender.perceive<-aggregate(Location ~ what.type + gender+level, availability.change.long.ca, length)
gender.perceive
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
gender.perceive
# turn to percents
male<-subset(gender.perceive, gender=="Male")
male
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$Location<-ifelse(gender.perceive$gender=='Male',(gender.perceive$Location/sum(male$Location))*100, gender.perceive$Location)
gender.perceive
gender.perceive$Location<-ifelse(gender.perceive$gender=='Female',(gender.perceive$Location/sum(female$Location))*100, gender.perceive$Location)
gender.perceive$Location<-ifelse(gender.perceive$gender=='Other',(gender.perceive$Location/sum(other$Location))*100, gender.perceive$Location)
## change type to factor with levels
gender.perceive$level<-str_replace_all(gender.perceive$level, "Will ", "")
gender.perceive$what.type<-as.factor(gender.perceive$what.type)
gender.perceive$level<-as.factor(gender.perceive$level)
## change order of levels
gender.perceive$level<-factor(gender.perceive$level, levels(gender.perceive$level)[c(4,5,6,3,2,1 )])
gender.perceive$what.type<-factor(gender.perceive$what.type, levels(gender.perceive$what.type)[c(2,3,1)])
ggplot(data=gender.perceive, aes(x=what.type, level, fill=what.type))+ geom_bar(stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=0), legend.title=element_blank(), legend.position=c(0.8, 0.8)) + scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) +# scale_x_discrete(limits=rev(levels(availability.ca$level)))
labs(x="", y="Number of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=what.type, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=0), legend.title=element_blank(), legend.position=c(0.8, 0.8)) + scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) +# scale_x_discrete(limits=rev(levels(availability.ca$level)))
labs(x="", y="Number of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=what.type, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +
theme(axis.text.x = element_text(angle=0), legend.title=element_blank() + scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) +# scale_x_discrete(limits=rev(levels(availability.ca$level)))
labs(x="", y="Number of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=what.type, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +  theme(axis.text.x = element_text(angle=0), legend.title=element_blank()+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + scale_x_discrete(limits=rev(levels(availability.ca$level)))+labs(x="", y="Number of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=what.type, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +  theme(axis.text.x = element_text(angle=90), legend.title=element_blank()+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + scale_x_discrete(limits=rev(levels(availability.ca$level)))+labs(x="", y="Percentage of responses") + facet_wrap(~gender)
```
ggplot(data=gender.perceive, aes(x=what.type, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +  theme(axis.text.x =element_text(angle=90) +                                                   legend.title=element_blank()+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + scale_x_discrete(limits=rev(levels(availability.ca$level)))+labs(x="", y="Percentage of responses") + facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +  theme(axis.text.x =element_text(angle=90) +                            legend.title=element_blank()+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + scale_x_discrete(limits=rev(levels(availability.ca$level)))+labs(x="", y="Percentage of responses") + facet_wrap(~gender)
head(gender.perceive)
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+  theme(axis.text.x =element_text(angle=90)
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+  theme(axis.text.x =element_text(angle=90)
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))
other
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percent of responses", fill="")
head gender.perceive
head(gender.perceive)
gender.perceive
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percent of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))+scale_x_discrete(limits=rev(levels(availability.ca$level)))
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))
setwd("/Users/kristinatietjen/Documents/git_hub/gya-research")
survey<-read.csv(file="data/gya-without-incomplete.csv")
dim(survey)
survey.what<-read.csv(file="data/gya-country-responses.csv")
research<-read.csv(file="data/gya-surveys-cleaned-research.csv")
research.past<-read.csv(file="data/gya-surveys-cleaned-research-past.csv")
research.change<-read.csv(file="data/gya-change-reason.csv")
part4<-read.csv(file="data/gya-survey-part4")
################################
#### Summary statistics ########
################################
require(ggplot2)
## change default background
theme_set(theme_bw())
## aggregate data for plotting
survey.table<-table(survey.what$Country,survey.what$gender)
gender<-aggregate(Location ~ gender, survey.what, length)
country_work<-aggregate(gender ~ Country_work, survey.what, length)
country_work
## plot countries with number of responses
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_blank()) + labs(y="Number of responses",x="")  +
geom_text(aes(label=gender), hjust=-0.25, angle=90,size=3) +
geom_text(aes(label=Country_work), angle=90, hjust=-1,size=3) + lims(y=c(0, 1450)) + theme(axis.ticks.x=element_blank())
## add a line that saves the plots in a pdf
pdf(file="figures/first_survey_responses.pdf", height=7, width=11)
###############
####Part5#####
###############
##1 # of responses by country
locations<-aggregate(gender ~ Country, survey.what, length)
ggplot(country_work, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) + theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y="Number of responses", x="")  +
geom_text(aes(label=gender), angle=90, hjust=-1, size=3) +
#geom_text(aes(label=Country_work), angle=90, hjust=-0.5)
lims(y=c(0, 1600)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=8), axis.title=element_text(size=12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
##1b  top 20+
country.list<-c("Canada" , "France",
"Germany","United Kingdom","Italy","Japan", "Russia","Korea, South",
"United States","Australia","Austria","Belgium",
"Ireland","Brazil", "Poland","Finland",
"Netherlands","New Zealand","Norway",
"Spain","Sweden","Switzerland","Turkey","Israel",
"India","Bangladesh","Uruguay","Malaysia","New Zealand","Taiwan","Denmark")
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
gender.top
quartz()
ggplot(locations.top, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=0.5)) + labs(y="Number of responses", x="")  +
geom_text(aes(label=gender), angle=90, hjust=-1, size=3) +
#geom_text(aes(label=Country), angle=90, hjust=-0.5)
lims(y=c(0, 1600)) + theme(legend.title=element_text(size=12),
legend.text=element_text(size=10), axis.text=element_text(size=8), axis.title=element_text(size=12)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
install.packages("plotrix")
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
gender.top
quartz()
#gap.barplot(df$a, gap=c(5,495),horiz=T)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=Country_work)
require(plotrix)
country.list<-c("Canada" , "France",
"Germany","United Kingdom","Italy","Japan", "Russia","Korea, South",
"United States","Australia","Austria","Belgium",
"Ireland","Brazil", "Poland","Finland",
"Netherlands","New Zealand","Norway",
"Spain","Sweden","Switzerland","Turkey","Israel",
"India","Bangladesh","Uruguay","Malaysia","New Zealand","Taiwan","Denmark")
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
gender.top
quartz()
#gap.barplot(df$a, gap=c(5,495),horiz=T)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=Country_work)
ggplot(locations.top, aes(x = reorder(Country_work, -gender), gender)) + geom_bar(stat='identity',position = position_dodge(width=0.5)) +
gap.barplot(locations.top$Country_work, gap=c(200,1000),horiz=Country_work)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=T)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
dim(country.list)
nrow(country.list)
length(country.list)
locations.top[sort(order(locations.top)[gender])]
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[sort(order(locations.top)[gender])]
country_work[sort(order(country_work)[gender])]
locations.top[sort(order(locations.top)[gender.top])]
country.top<-survey[survey$Country_work %in% country.list,]
head(country.top)
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[sort(order(locations.top)[gender.top])]
gender[sort(order(gender)[Country_work])]
gender[sort(order(gender)[country_work])]
gender.top<-aggregate(Country_work ~ gender, country.top, length)
gender[sort(order(gender)[Country_work])]
locations.top
locations.top<-aggregate(gender ~ Country_work, country.top, length)
gender[sort(order(gender)[Country_work])]
gender[order(match(gender,Country_work))]
gender.top[order(match(gender.top,locations.top))]
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
gender.top[order(match(gender.top,locations.top))]
locations.top[order(match(locations.top,gender.top))]
quartz()
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
order(locations.top$gender, by=locations.top$Country_work)
head(locations.top)
order(locations.top$Country_work, by=locations.top$gender)
order(locations.top$gender, by=locations.top$Country_work, reverse=TRUE)
order(locations.top$gender, by=locations.top$Country_work)
order(locations.top$gender, by=locations.top$Country_work, increasing=TRUE)
order(locations.top$gender, by=locations.top$Country_work, increasing=FALSE)
head(locations.top)
?order
order(locations.top$gender, by=locations.top$Country_work, decreasing=FALSE)
order(locations.top$gender, by=locations.top$Country_work, decreasing=TRUE)
locations.top$Country_work<-locations.top$Country_work[order(locations.top$gender, by=locations.top$Country_work, decreasing=TRUE)]
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
levels(locations.top$Country_work)
locations.top<-droplevels(locations.top)
levels(locations.top$Country_work)
locations.top$Country_work<-locations.top$Country_work[reorder(locations.top$gender, by=locations.top$Country_work, decreasing=TRUE)]
locations.top$Country_work<-reorder(locations.top$Country_work, order(locations.top$gender, by=locations.top$Country_work, decreasing=TRUE))
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
levels(locations.top$Country_work)
locations.top$Country_work<-reorder(locations.top$Country_work, order(locations.top$Country_work, by=locations.top$gender,decreasing=TRUE))
levels(locations.top$Country_work)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
locations.top$Country_work<-order(locations.top$Country_work, order(locations.top$Country_work, by=locations.top$gender,decreasing=TRUE))
levels(locations.top$Country_work)
quartz()
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
locations.top$Country_work<-factor(locations.top$Country_work, levels=order(locations.top$Country_work, by=locations.top$gender,decreasing=TRUE))
levels(locations.top$Country_work)
gap.barplot(locations.top$gender, gap=c(200,1000),horiz=F)
locations.top[order(match(locations.top,gender.top))]
locations.top<-aggregate(gender ~ Country_work, country.top, length)
locations.top
gender.top<-aggregate(Country_work ~ gender, country.top, length)
locations.top[order(match(locations.top,gender.top))]
locations.top<-droplevels(locations.top)
factor(locations.top$Country_work, levels=order(locations.top$Country_work, by=locations.top$gender,decreasing=TRUE))
sort(locations.top$Country_work, by=locations.top$gender,decreasing=TRUE))
sort(locations.top$Country_work, by=locations.top$gender,decreasing=TRUE)
sort(locations.top$Country_work, locations.top$gender,decreasing=TRUE)
?sort
sort(locations.top$gender,decreasing=TRUE)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+color.scale(locations.top)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=color.scale(y,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2))
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=color.scale(gender,c(0,1,1),c(1,1,0),0),main="Color scale plot",
pch=16,cex=2))
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=rgb)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=black)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=black)
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=blk)
quartz()
barp(gender, width=0.4, col=black, xlab="", ylab="Number of Responses", x=sort(locations.top$gender,decreasing=TRUE))
quartz()
quartz()
quartz()
barp(gender, width=0.4, xlab="", ylab="Number of Responses", x=sort(locations.top$gender,decreasing=TRUE))
barp(locations.top, width=0.4, xlab="", ylab="Number of Responses", x=sort(locations.top$gender,decreasing=TRUE))
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F,col=blk)+barlabels(1,1,labels=NULL,cex=1,prop=0.5,miny=0,offset=0)
quartz()
gap.barplot(sort(locations.top$gender,decreasing=TRUE), gap=c(200,1000),horiz=F)+barlabels(1,1,labels=NULL,cex=1,prop=0.5,miny=0,offset=0)
availability.change<-subset(part4, select=c("Location", "Country", "gender", "available_funding_fundamental",
"available_funding_use_inspired", "available_funding_applied"))
canada<-subset(availability.change, Country=="Canada")
head(canada)
## switch to long format
require(tidyr)
canada<-subset(availability.change, Country=="Canada")
## switch to long format
require(tidyr)
availability.change.long.ca<-gather(canada, what.type, level, -gender, -Location, -Country)
gender.perceive<-aggregate(Location ~ what.type + gender+level, availability.change.long.ca, length)
#availability.ca<-aggregate(gender~what.type+level, availability.change.long.ca,length)
# remove non-response
gender.perceive<-gender.perceive[!gender.perceive$level=="",]
gender.perceive<-gender.perceive[!gender.perceive$gender=="",]
# turn to percents
male<-subset(gender.perceive, gender=="Male")
female<-subset(gender.perceive, gender=="Female")
other<-subset(gender.perceive, gender=="Other")
gender.perceive$Location<-ifelse(gender.perceive$gender=='Male',(gender.perceive$Location/sum(male$Location))*100, gender.perceive$Location)
gender.perceive$Location<-ifelse(gender.perceive$gender=='Female',(gender.perceive$Location/sum(female$Location))*100, gender.perceive$Location)
gender.perceive$Location<-ifelse(gender.perceive$gender=='Other',(gender.perceive$Location/sum(other$Location))*100, gender.perceive$Location)
## change type to factor with levels
gender.perceive$level<-str_replace_all(gender.perceive$level, "Will ", "")
gender.perceive$what.type<-as.factor(gender.perceive$what.type)
gender.perceive$level<-as.factor(gender.perceive$level)
gender.perceive$level<-factor(gender.perceive$level, levels(gender.perceive$level)[c(4,5,6,3,2,1 )])
gender.perceive$what.type<-factor(gender.perceive$what.type, levels(gender.perceive$what.type)[c(2,3,1)])
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+geom_bar(stat="identity", position="dodge")+facet_wrap(~gender)+theme(axis.text.x = element_text(angle=90, vjust=0.5))+labs(x="", y="Percentage of responses", fill="")+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied"))
ggplot(data=gender.perceive, aes(x=level, Location, fill=what.type))+ geom_bar(stat='identity', position="dodge") +  theme(axis.text.x =element_text(angle=90) +                            legend.title=element_blank()+scale_fill_discrete(labels=c("Fundamental", "Use-inspired", "Applied")) + scale_x_discrete(limits=rev(levels(availability.ca$level)))+labs(x="", y="Percentage of responses") + facet_wrap(~gender)
